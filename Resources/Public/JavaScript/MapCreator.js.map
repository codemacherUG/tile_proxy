{"version":3,"file":"MapCreator.js","mappings":";mUAmCA,QA7BI,SAAsBA,GAClB,IAAIC,EAAY,IAAI,UAAU,CAC1BC,aAAc,2GAGdC,KAAM,CACF,kDACA,kDACA,qDAIJC,IADS,IAAAC,iBAAgB,CAAC,MAAO,MAAO,MAAO,OAAQ,YAAa,cAC3D,IAAAC,YAAW,CAAC,mBAAoB,oBACnC,IAAI,UAAI,CACdC,OAAQ,CACJ,IAAI,UAAK,CACLC,OAAQP,KAGhBQ,OAAQT,EACRU,KAAM,IAAI,UAAK,CACXN,OAAQA,EACRO,KAAM,GACNC,QAAS,MAGrB,iFC3BJ,MAAMC,EAAW,CACf,EAAG,iCACH,EAAG,qCACH,EAAG,mCACH,EAAG,wDACH,EAAG,iDACH,EAAG,yCACH,EAAG,kCACH,EAAG,oDACH,GAAI,oEACJ,GAAI,0CACJ,GAAI,0EACJ,GAAI,iBACJ,GAAI,gBACJ,GAAI,kEACJ,GAAI,sDACJ,GAAI,mDACJ,GAAI,8DACJ,GAAI,wDACJ,GAAI,sDACJ,GAAI,kEACJ,GAAI,oDACJ,GAAI,iDACJ,GAAI,+BACJ,GAAI,+BACJ,GAAI,gDACJ,GAAI,uDACJ,GAAI,oEACJ,GAAI,2CACJ,GAAI,gBACJ,GAAI,0BACJ,GAAI,mBACJ,GAAI,8BACJ,GAAI,sCACJ,GAAI,wBACJ,GAAI,wCACJ,GAAI,kEACJ,GAAI,qCACJ,GAAI,qDACJ,GAAI,2DACJ,GAAI,+DACJ,GAAI,2DACJ,GAAI,4CACJ,GAAI,sDACJ,GAAI,kCACJ,GAAI,2CACJ,GAAI,wDACJ,GAAI,sDACJ,GAAI,qCACJ,GAAI,mCACJ,GAAI,4BACJ,GAAI,+EACJ,GAAI,uFACJ,GAAI,iCACJ,GAAI,wPACJ,GAAI,uGACJ,GAAI,sGACJ,GAAI,gEAQN,MAAMC,UAAuBC,MAI3BC,YAAYC,GACV,MAAMC,EAAUL,EAASI,GAEzBE,MAAMD,GAWNE,KAAKH,KAAOA,EAKZG,KAAKC,KAAO,iBAGZD,KAAKF,QAAUA,CACjB,EAGF,sRCxFA,MAAMI,EACI,SASH,MAAMC,UAAwB,UAMnCP,YAAYQ,EAAMxB,EAASyB,GACzBN,MAAMK,GAONJ,KAAKpB,QAAUA,EAOfoB,KAAKK,MAAQA,CACf,EAgCF,MAAMC,UAAmB,UAKvBV,YAAYW,EAAOC,GAgCjB,GA/BAT,QAKAC,KAAKS,GAKLT,KAAKU,KAKLV,KAAKW,GAELH,EAAUA,GAAW,CAAC,EAMtBR,KAAKY,UAAYJ,EAAQK,OAMzBb,KAAKc,OAASP,GAAgB,GAE1BP,KAAKY,QACP,IAAK,IAAIG,EAAI,EAAGC,EAAKhB,KAAKc,OAAOG,OAAQF,EAAIC,IAAMD,EACjDf,KAAKkB,cAAclB,KAAKc,OAAOC,GAAIA,GAIvCf,KAAKmB,eACP,CAMAC,QACE,KAAOpB,KAAKqB,YAAc,GACxBrB,KAAKsB,KAET,CASAC,OAAOC,GACL,IAAK,IAAIT,EAAI,EAAGC,EAAKQ,EAAIP,OAAQF,EAAIC,IAAMD,EACzCf,KAAKyB,KAAKD,EAAIT,IAEhB,OAAOf,IACT,CASA0B,QAAQC,GACN,MAAMpB,EAAQP,KAAKc,OACnB,IAAK,IAAIC,EAAI,EAAGC,EAAKT,EAAMU,OAAQF,EAAIC,IAAMD,EAC3CY,EAAEpB,EAAMQ,GAAIA,EAAGR,EAEnB,CAUAqB,WACE,OAAO5B,KAAKc,MACd,CAQAe,KAAKxB,GACH,OAAOL,KAAKc,OAAOT,EACrB,CAQAgB,YACE,OAAOrB,KAAK8B,IAAI5B,EAClB,CAQA6B,SAAS1B,EAAO2B,GACd,GAAI3B,EAAQ,GAAKA,EAAQL,KAAKqB,YAC5B,MAAM,IAAI1B,MAAM,wBAA0BU,GAExCL,KAAKY,SACPZ,KAAKkB,cAAcc,GAErBhC,KAAKc,OAAOmB,OAAO5B,EAAO,EAAG2B,GAC7BhC,KAAKmB,gBACLnB,KAAKkC,cACH,IAAI/B,EAAgB,cAAyB6B,EAAM3B,GAEvD,CAQAiB,MACE,OAAOtB,KAAKmC,SAASnC,KAAKqB,YAAc,EAC1C,CAQAI,KAAKO,GACChC,KAAKY,SACPZ,KAAKkB,cAAcc,GAErB,MAAMI,EAAIpC,KAAKqB,YAEf,OADArB,KAAK+B,SAASK,EAAGJ,GACVhC,KAAKqB,WACd,CAQAgB,OAAOL,GACL,MAAMR,EAAMxB,KAAKc,OACjB,IAAK,IAAIC,EAAI,EAAGC,EAAKQ,EAAIP,OAAQF,EAAIC,IAAMD,EACzC,GAAIS,EAAIT,KAAOiB,EACb,OAAOhC,KAAKmC,SAASpB,EAI3B,CASAoB,SAAS9B,GACP,GAAIA,EAAQ,GAAKA,GAASL,KAAKqB,YAC7B,OAEF,MAAMiB,EAAOtC,KAAKc,OAAOT,GAQzB,OAPAL,KAAKc,OAAOmB,OAAO5B,EAAO,GAC1BL,KAAKmB,gBACLnB,KAAKkC,cAC+B,IAC5B/B,EAAgB,iBAA4BmC,EAAMjC,IAGnDiC,CACT,CAQAC,MAAMlC,EAAO2B,GAEX,GAAI3B,GADML,KAAKqB,YAGb,YADArB,KAAK+B,SAAS1B,EAAO2B,GAGvB,GAAI3B,EAAQ,EACV,MAAM,IAAIV,MAAM,wBAA0BU,GAExCL,KAAKY,SACPZ,KAAKkB,cAAcc,EAAM3B,GAE3B,MAAMiC,EAAOtC,KAAKc,OAAOT,GACzBL,KAAKc,OAAOT,GAAS2B,EACrBhC,KAAKkC,cAC+B,IAC5B/B,EAAgB,iBAA4BmC,EAAMjC,IAG1DL,KAAKkC,cAC+B,IAC5B/B,EAAgB,cAAyB6B,EAAM3B,GAGzD,CAKAc,gBACEnB,KAAKwC,IAAItC,EAAiBF,KAAKc,OAAOG,OACxC,CAOAC,cAAcc,EAAMS,GAClB,IAAK,IAAI1B,EAAI,EAAGC,EAAKhB,KAAKc,OAAOG,OAAQF,EAAIC,IAAMD,EACjD,GAAIf,KAAKc,OAAOC,KAAOiB,GAAQjB,IAAM0B,EACnC,MAAM,IAAI,UAAe,GAG/B,EAGF,8FCjUA,SAMEC,IAAK,MAMLC,OAAQ,qFCgBV,QA3BA,MACE/C,cAMEI,KAAK4C,UAAW,CAClB,CAKAC,UACO7C,KAAK4C,WACR5C,KAAK4C,UAAW,EAChB5C,KAAK8C,kBAET,CAMAA,kBAAmB,+TCJrB,MAAMC,UAAqB,UASzBnD,YACEoD,EACAC,EACAC,EACAC,EACAC,EACAC,GAEAtD,MAAMiD,EAAQC,EAAYC,EAAY,gBAMtClD,KAAKsD,KAAOH,EAMZnD,KAAKuD,OAAS,IAAIC,MACE,OAAhBJ,IACFpD,KAAKuD,OAAOH,YAAcA,GAO5BpD,KAAKyD,UAAY,KAMjBzD,KAAK0D,MAAQ,eAMb1D,KAAK2D,mBAAqBN,CAC5B,CAMAO,WACE,OAAO5D,KAAKuD,MACd,CAOAM,oBACE7D,KAAK0D,MAAQ,gBACb1D,KAAK8D,iBACL9D,KAAK+D,SACP,CAOAC,wBAC0BC,IAApBjE,KAAKiD,aACPjD,KAAKiD,YAAa,IAAAiB,WAAUlE,KAAKgD,QAAUhD,KAAKuD,OAAOY,QAEzDnE,KAAK0D,MAAQ,iBACb1D,KAAK8D,iBACL9D,KAAK+D,SACP,CAQAK,OACMpE,KAAK0D,OAAS,gBAAmB1D,KAAK0D,OAAS,kBACjD1D,KAAK0D,MAAQ,kBACb1D,KAAK+D,UACL/D,KAAK2D,mBAAmB3D,KAAMA,KAAKsD,MACnCtD,KAAKyD,UAAYY,EACfrE,KAAKuD,OACLvD,KAAKgE,iBAAiBM,KAAKtE,MAC3BA,KAAK6D,kBAAkBS,KAAKtE,OAGlC,CAKAuE,SAASC,GACPxE,KAAKuD,OAASiB,EACdxE,KAAKiD,YAAa,IAAAiB,WAAUlE,KAAKgD,QAAUhD,KAAKuD,OAAOY,MACzD,CAOAL,iBACM9D,KAAKyD,YACPzD,KAAKyD,YACLzD,KAAKyD,UAAY,KAErB,EASK,SAASY,EAAYG,EAAOC,EAAaC,GAC9C,MAAMC,EAAsC,EAC5C,IAAIC,GAAY,EACZC,GAAW,EACXC,GAAS,EAEb,MAAMC,EAAe,EACnB,IAAAC,YAAWL,EAAK,gBAAgB,WAC9BG,GAAS,EACJD,GACHJ,GAEJ,KAyBF,OAtBIE,EAAIxB,KAAO,EAAA8B,cACbJ,GAAW,EACXF,EACGO,SACAC,MAAK,WACAP,GACFH,GAEJ,IACCW,OAAM,SAAUC,GACXT,IACEE,EACFL,IAEAC,IAGN,KAEFK,EAAatD,MAAK,IAAAuD,YAAWL,EAAK,gBAAiBD,IAG9C,WACLE,GAAY,EACZG,EAAarD,QAAQ,EAAA4D,cACvB,CACF,CAEA,gNCjMA,MAAMC,UAAkB,UAOtB3F,YAAYoD,EAAQC,EAAYC,EAAYQ,GAC1C3D,QAMAC,KAAKgD,OAASA,EAMdhD,KAAKwF,YAActC,EAMnBlD,KAAKiD,WAAaA,EAMlBjD,KAAK0D,MAAQA,CACf,CAKAK,UACE/D,KAAKkC,cAAc,iBACrB,CAKAuD,YACE,OAAOzF,KAAKgD,MACd,CAMAY,WACE,OAAO,IAAA8B,WACT,CAKAC,gBACE,OAAO3F,KAAKwF,WACd,CAKAI,gBACE,OAA8B5F,KAAe,UAC/C,CAKA6F,WACE,OAAO7F,KAAK0D,KACd,CAMAU,QACE,IAAAsB,WACF,EAGF,qFC1FA,SACEI,KAAM,EACNC,QAAS,EACTC,OAAQ,EACRC,MAAO,EACPC,MAAO,0NCJT,MAAMC,UAAkB,UAStBvG,YAAYwG,EAAW1C,EAAOP,EAAKC,EAAaiD,EAAkB7F,GAChET,MAAMqG,EAAW1C,EAAOlD,GAMxBR,KAAKsG,aAAelD,EAQpBpD,KAAKsD,KAAOH,EAEZnD,KAAKuG,IAAMpD,EAMXnD,KAAKuD,OAAS,IAAIC,MACE,OAAhBJ,IACFpD,KAAKuD,OAAOH,YAAcA,GAO5BpD,KAAKyD,UAAY,KAMjBzD,KAAKwG,kBAAoBH,CAC3B,CAOAzC,WACE,OAAO5D,KAAKuD,MACd,CAMAgB,SAAS3F,GACPoB,KAAKuD,OAAS3E,EACdoB,KAAK0D,MAAQ,iBACb1D,KAAK8D,iBACL9D,KAAK+D,SACP,CAOAF,oBACE7D,KAAK0D,MAAQ,gBACb1D,KAAK8D,iBACL9D,KAAKuD,OA8FT,WACE,MAAMkD,GAAM,IAAAC,uBAAsB,EAAG,GAGrC,OAFAD,EAAIE,UAAY,gBAChBF,EAAIG,SAAS,EAAG,EAAG,EAAG,GACfH,EAAII,MACb,CAnGkBC,GACd9G,KAAK+D,SACP,CAOAC,mBACE,MAAMQ,EAAyCxE,KAAW,OACtDwE,EAAMuC,cAAgBvC,EAAMwC,cAC9BhH,KAAK0D,MAAQ,iBAEb1D,KAAK0D,MAAQ,gBAEf1D,KAAK8D,iBACL9D,KAAK+D,SACP,CAuCAK,OACMpE,KAAK0D,OAAS,kBAChB1D,KAAK0D,MAAQ,eACb1D,KAAKuD,OAAS,IAAIC,MACQ,OAAtBxD,KAAKsG,eACPtG,KAAKuD,OAAOH,YAAcpD,KAAKsG,eAG/BtG,KAAK0D,OAAS,iBAChB1D,KAAK0D,MAAQ,kBACb1D,KAAK+D,UACL/D,KAAKwG,kBAAkBxG,KAAMA,KAAKsD,MAClCtD,KAAKyD,WAAY,IAAAY,aACfrE,KAAKuD,OACLvD,KAAKgE,iBAAiBM,KAAKtE,MAC3BA,KAAK6D,kBAAkBS,KAAKtE,OAGlC,CAOA8D,iBACM9D,KAAKyD,YACPzD,KAAKyD,YACLzD,KAAKyD,UAAY,KAErB,EAcF,kFC9DA,QAnHA,MAOE7D,YAAYqH,EAAOC,EAAaC,GAK9BnH,KAAKoH,OAASH,EAMdjH,KAAKqH,aAAeH,EAMpBlH,KAAKsH,OAASH,EAMdnH,KAAKuH,QAAU,GAMfvH,KAAKwH,OAAS,EAMdxH,KAAKyH,iBAAmB,CAC1B,CAKAC,QACE1H,KAAKuH,QAAQtG,OAAS,EACtBjB,KAAKwH,OAAS,EACdxH,KAAKyH,iBAAmB,CAC1B,CAMAE,OAAOC,EAAGC,GACR7H,KAAKuH,QAAQ9F,KAAKmG,EAAGC,EAAGC,KAAKC,MAC/B,CAKAC,MACE,GAAIhI,KAAKuH,QAAQtG,OAAS,EAGxB,OAAO,EAET,MAAMkG,EAAQW,KAAKC,MAAQ/H,KAAKsH,OAC1BW,EAAYjI,KAAKuH,QAAQtG,OAAS,EACxC,GAAIjB,KAAKuH,QAAQU,EAAY,GAAKd,EAGhC,OAAO,EAIT,IAAIe,EAAaD,EAAY,EAC7B,KAAOC,EAAa,GAAKlI,KAAKuH,QAAQW,EAAa,GAAKf,GACtDe,GAAc,EAGhB,MAAMC,EAAWnI,KAAKuH,QAAQU,EAAY,GAAKjI,KAAKuH,QAAQW,EAAa,GAIzE,GAAIC,EAAW,IAAO,GACpB,OAAO,EAGT,MAAMC,EAAKpI,KAAKuH,QAAQU,GAAajI,KAAKuH,QAAQW,GAC5CG,EAAKrI,KAAKuH,QAAQU,EAAY,GAAKjI,KAAKuH,QAAQW,EAAa,GAGnE,OAFAlI,KAAKwH,OAASc,KAAKC,MAAMF,EAAID,GAC7BpI,KAAKyH,iBAAmBa,KAAKE,KAAKJ,EAAKA,EAAKC,EAAKA,GAAMF,EAChDnI,KAAKyH,iBAAmBzH,KAAKqH,YACtC,CAKAoB,cACE,OAAQzI,KAAKqH,aAAerH,KAAKyH,kBAAoBzH,KAAKoH,MAC5D,CAKAsB,WACE,OAAO1I,KAAKwH,MACd,s2CCoCF,SAASmB,EAAuBC,GAC1BA,aAAiB,UACnBA,EAAMC,eAAe,MAGnBD,aAAiB,WACnBA,EAAME,YAAYpH,QAAQiH,EAE9B,CAMA,SAASI,EAAoBH,EAAOI,GAClC,GAAIJ,aAAiB,UACnBA,EAAMC,eAAeG,QAGvB,GAAIJ,aAAiB,UAAY,CAC/B,MAAMzJ,EAASyJ,EAAME,YAAYlH,WACjC,IAAK,IAAIb,EAAI,EAAGC,EAAK7B,EAAO8B,OAAQF,EAAIC,IAAMD,EAC5CgI,EAAoB5J,EAAO4B,GAAIiI,EAEnC,CACF,CAsDA,MAAMC,UAAY,UAIhBrJ,YAAYY,GACVT,QAEAS,EAAUA,GAAW,CAAC,EAKtBR,KAAKS,GAKLT,KAAKU,KAKLV,KAAKW,GAEL,MAAMuI,EAm9CV,SAA+B1I,GAI7B,IAAI2I,EAAsB,UACUlF,IAAhCzD,EAAQ2I,sBACVA,EACyC,iBAAhC3I,EAAQ2I,oBACXC,SAASC,eAAe7I,EAAQ2I,qBAChC3I,EAAQ2I,qBAMhB,MAAMG,EAAS,CAAC,EAEVC,EACJ/I,EAAQrB,QACiD,mBAA/BqB,EAAc,OAAW,UACpBA,EAAc,OACzC,IAAI,UAAW,CACbrB,OAEIqB,EACF,SAUV,IAAIgJ,EAcAC,EAeAC,EArCJJ,EAAO,sBAA0BC,EAEjCD,EAAO,kBAAsB9I,EAAQnB,OAErCiK,EAAO,gBACL9I,EAAQlB,gBAAgB,UAAOkB,EAAQlB,KAAO,IAAI,eAI3B2E,IAArBzD,EAAQgJ,WACNG,MAAMC,QAAQpJ,EAAQgJ,UACxBA,EAAW,IAAI,UAAWhJ,EAAQgJ,SAASK,WAE3C,IAAAC,QAC4D,mBAAhCtJ,EAAgB,SAAU,SACpD,IAEFgJ,EAAWhJ,EAAQgJ,gBAMMvF,IAAzBzD,EAAQiJ,eACNE,MAAMC,QAAQpJ,EAAQiJ,cACxBA,EAAe,IAAI,UAAWjJ,EAAQiJ,aAAaI,WAEnD,IAAAC,QAEI,mBADwBtJ,EAAoB,aAAU,SAExD,IAEFiJ,EAAejJ,EAAQiJ,oBAMFxF,IAArBzD,EAAQkJ,SACNC,MAAMC,QAAQpJ,EAAQkJ,UACxBA,EAAW,IAAI,UAAWlJ,EAAQkJ,SAASG,WAE3C,IAAAC,QAC4D,mBAAhCtJ,EAAgB,SAAU,SACpD,IAEFkJ,EAAWlJ,EAAQkJ,UAGrBA,EAAW,IAAI,UAGjB,MAAO,CACLF,SAAUA,EACVC,aAAcA,EACdN,oBAAqBA,EACrBO,SAAUA,EACVJ,OAAQA,EAEZ,CAziD4BS,CAAsBvJ,GAM9CR,KAAKgK,gBAMLhK,KAAKiK,SAAU,EAGfjK,KAAKkK,yBAA2BlK,KAAKmK,mBAAmB7F,KAAKtE,MAM7DA,KAAKoK,sBACyBnG,IAA5BzD,EAAQ6J,gBAAgC7J,EAAQ6J,gBAAkB,GAMpErK,KAAKwF,iBACoBvB,IAAvBzD,EAAQ0C,WACJ1C,EAAQ0C,WACR,EAAAoH,mBAMNtK,KAAKuK,yBAMLvK,KAAKwK,mBAKLxK,KAAKyK,gBAAkBzK,KAAKyK,gBAAgBnG,KAAKtE,MAMjDA,KAAK0K,6BAA8B,IAAAC,UAMnC3K,KAAK4K,6BAA8B,IAAAD,UAMnC3K,KAAK6K,YAAc,EAMnB7K,KAAK8K,YAAc,KAOnB9K,KAAK+K,gBAAkB,KAMvB/K,KAAKgL,yBAA2B,KAMhChL,KAAKiL,uBAAyB,KAM9BjL,KAAKkL,gCAAkC,KAMvClL,KAAKmL,UAAY/B,SAASgC,cAAc,OACxCpL,KAAKmL,UAAUE,UACb,eAAiB,iBAAkBC,OAAS,YAAc,IAC5DtL,KAAKmL,UAAUI,MAAMC,SAAW,WAChCxL,KAAKmL,UAAUI,MAAME,SAAW,SAChCzL,KAAKmL,UAAUI,MAAMG,MAAQ,OAC7B1L,KAAKmL,UAAUI,MAAMpH,OAAS,OAM9BnE,KAAK2L,kBAAoBvC,SAASgC,cAAc,OAChDpL,KAAK2L,kBAAkBJ,MAAMC,SAAW,WACxCxL,KAAK2L,kBAAkBJ,MAAMK,OAAS,IACtC5L,KAAK2L,kBAAkBJ,MAAMG,MAAQ,OACrC1L,KAAK2L,kBAAkBJ,MAAMpH,OAAS,OACtCnE,KAAK2L,kBAAkBJ,MAAMM,cAAgB,OAC7C7L,KAAK2L,kBAAkBN,UAAY,sBACnCrL,KAAKmL,UAAUW,YAAY9L,KAAK2L,mBAMhC3L,KAAK+L,2BAA6B3C,SAASgC,cAAc,OACzDpL,KAAK+L,2BAA2BR,MAAMC,SAAW,WACjDxL,KAAK+L,2BAA2BR,MAAMK,OAAS,IAC/C5L,KAAK+L,2BAA2BR,MAAMG,MAAQ,OAC9C1L,KAAK+L,2BAA2BR,MAAMpH,OAAS,OAC/CnE,KAAK+L,2BAA2BR,MAAMM,cAAgB,OACtD7L,KAAK+L,2BAA2BV,UAAY,gCAC5CrL,KAAKmL,UAAUW,YAAY9L,KAAK+L,4BAMhC/L,KAAKgM,wBAA0B,KAM/BhM,KAAKiM,eAAiBzL,EAAQ0L,cAM9BlM,KAAKmM,qBAAuBjD,EAAgBC,oBAM5CnJ,KAAKoM,yBAA2B,KAMhCpM,KAAKqM,eAAiB,KAKtBrM,KAAKsM,gBAAkB,IAAIC,gBAAe,IAAMvM,KAAKwM,eAMrDxM,KAAKwJ,SAAWN,EAAgBM,WAAY,gBAM5CxJ,KAAKyJ,aACHP,EAAgBO,eAChB,cAAoB,CAClBgD,aAAa,IAOjBzM,KAAK0M,UAAYxD,EAAgBQ,SAOjC1J,KAAK2M,gBAAkB,CAAC,EAMxB3M,KAAK4M,UAAY,KAMjB5M,KAAK6M,qBAAuB,GAM5B7M,KAAK8M,WAAa,IAAI,UACpB9M,KAAK+M,gBAAgBzI,KAAKtE,MAC1BA,KAAKgN,kBAAkB1I,KAAKtE,OAG9BA,KAAKiN,kBACH,qBACAjN,KAAKkN,0BAEPlN,KAAKiN,kBAAkB,eAAkBjN,KAAKmN,oBAC9CnN,KAAKiN,kBAAkB,eAAkBjN,KAAKoN,oBAC9CpN,KAAKiN,kBAAkB,iBAAoBjN,KAAKqN,sBAIhDrN,KAAKsN,cAAcpE,EAAgBI,QAEnC,MAAMN,EAAMhJ,MACRQ,EAAQlB,MAAUkB,EAAQlB,gBAAgB,WAC5CkB,EAAQlB,KAAK6F,MAAK,SAAUoI,GAC1BvE,EAAIwE,QAAQ,IAAI,UAAKD,GACvB,IAGFvN,KAAKwJ,SAASiE,iBACZ,eAICC,IACCA,EAAM9O,QAAQ+O,OAAO3N,KAAK,IAI9BA,KAAKwJ,SAASiE,iBACZ,kBAICC,IACCA,EAAM9O,QAAQ+O,OAAO,KAAK,IAI9B3N,KAAKyJ,aAAagE,iBAChB,eAICC,IACCA,EAAM9O,QAAQ+O,OAAO3N,KAAK,IAI9BA,KAAKyJ,aAAagE,iBAChB,kBAICC,IACCA,EAAM9O,QAAQ+O,OAAO,KAAK,IAI9B3N,KAAK0M,UAAUe,iBACb,eAICC,IACC1N,KAAK4N,oBAAoBF,EAAM9O,QAAQ,IAI3CoB,KAAK0M,UAAUe,iBACb,kBAICC,IACC,MAAMG,EAAKH,EAAM9O,QAAQkP,aACd7J,IAAP4J,UACK7N,KAAK2M,gBAAgBkB,EAAGE,YAEjCL,EAAM9O,QAAQ+O,OAAO,KAAK,IAI9B3N,KAAKwJ,SAAS9H,SAIXsM,IACCA,EAAQL,OAAO3N,KAAK,IAIxBA,KAAKyJ,aAAa/H,SAIfuM,IACCA,EAAYN,OAAO3N,KAAK,IAI5BA,KAAK0M,UAAUhL,QAAQ1B,KAAK4N,oBAAoBtJ,KAAKtE,MACvD,CAOAkO,WAAWF,GACThO,KAAKmO,cAAc1M,KAAKuM,EAC1B,CAWAI,eAAeH,GACbjO,KAAKqO,kBAAkB5M,KAAKwM,EAC9B,CASAK,SAAS1F,GACQ5I,KAAKuO,gBAAgBzF,YAC7BrH,KAAKmH,EACd,CAMA4F,gBAAgBd,GACd3E,EAAoB2E,EAAM9E,MAAO5I,KACnC,CAOAyO,WAAWC,GACT1O,KAAK2O,cAAclN,KAAKiN,EAC1B,CAOAd,oBAAoBc,GAClB,MAAMb,EAAKa,EAAQZ,aACR7J,IAAP4J,IACF7N,KAAK2M,gBAAgBkB,EAAGE,YAAcW,GAExCA,EAAQf,OAAO3N,KACjB,CAMA8C,kBACE9C,KAAKwJ,SAASpI,QACdpB,KAAKyJ,aAAarI,QAClBpB,KAAK0M,UAAUtL,QACfpB,KAAKsM,gBAAgBsC,aACrB5O,KAAK6O,UAAU,MACf9O,MAAM+C,iBACR,CAoBAgM,sBAAsBC,EAAOC,EAAUxO,GACrC,IAAKR,KAAK8K,cAAgB9K,KAAK4M,UAC7B,OAEF,MAAMqC,EAAajP,KAAKkP,+BAA+BH,GAEjDI,OACqBlL,KAF3BzD,OAAsByD,IAAZzD,EAAwBA,EAAU,CAAC,GAEnC2O,aAA6B3O,EAAQ2O,aAAe,EACxDC,OACoBnL,IAAxBzD,EAAQ4O,YAA4B5O,EAAQ4O,YAAc,EAAAC,KACtDC,GAAwC,IAAzB9O,EAAQ8O,aAC7B,OAAOtP,KAAK4M,UAAU2C,2BACpBN,EACAjP,KAAK8K,YACLqE,EACAG,EACAN,EACA,KACAI,EACA,KAEJ,CAUAI,mBAAmBT,EAAOvO,GACxB,MAAMiP,EAAW,GAQjB,OAPAzP,KAAK8O,sBACHC,GACA,SAAUW,GACRD,EAAShO,KAAKiO,EAChB,GACAlP,GAEKiP,CACT,CAOAE,eACE,MAAMxQ,EAAS,GAWf,OAVA,SAASyQ,EAAcrG,GACrBA,EAAW7H,SAAQ,SAAUkH,GACvBA,aAAiB,UACnBgH,EAAchH,EAAME,aAEpB3J,EAAOsC,KAAKmH,EAEhB,GACF,CACAgH,CAAc5P,KAAK8I,aACZ3J,CACT,CAUA0Q,kBAAkBd,EAAOvO,GACvB,IAAKR,KAAK8K,cAAgB9K,KAAK4M,UAC7B,OAAO,EAET,MAAMqC,EAAajP,KAAKkP,+BAA+BH,GAEjDK,OACoBnL,KAF1BzD,OAAsByD,IAAZzD,EAAwBA,EAAU,CAAC,GAEnC4O,YAA4B5O,EAAQ4O,YAAc,EAAAC,KACtDF,OACqBlL,IAAzBzD,EAAQ2O,aAA6B3O,EAAQ2O,aAAe,EACxDG,GAAwC,IAAzB9O,EAAQ8O,aAC7B,OAAOtP,KAAK4M,UAAUkD,uBACpBb,EACAjP,KAAK8K,YACLqE,EACAG,EACAF,EACA,KAEJ,CAQAW,mBAAmBrC,GACjB,OAAO1N,KAAKgQ,uBAAuBhQ,KAAKiQ,cAAcvC,GACxD,CAOAwC,2BAA2BxC,GACzB,OAAO1N,KAAKkP,+BAA+BlP,KAAKiQ,cAAcvC,GAChE,CAQAuC,cAAcvC,GACZ,MACMyC,EADWnQ,KAAKmL,UACYiF,wBAC5BC,EAAerQ,KAAKsQ,UACpBC,EAASJ,EAAiBzE,MAAQ2E,EAAa,GAC/CG,EAASL,EAAiBhM,OAASkM,EAAa,GAChDI,EAEJ,mBAAoB/C,EACU,EAAQgD,eAAe,GACvB,EAEhC,MAAO,EACJD,EAAcE,QAAUR,EAAiBS,MAAQL,GACjDE,EAAcI,QAAUV,EAAiBW,KAAON,EAErD,CAWAO,YACE,OACE/Q,KAAK8B,IAAI,iBAEb,CASAkP,mBACE,OAAOhR,KAAKqM,cACd,CASA2D,uBAAuBjB,GACrB,OAAO,IAAAkC,kBACLjR,KAAKkP,+BAA+BH,GACpC/O,KAAKkR,UAAUC,gBAEnB,CAQAjC,+BAA+BH,GAC7B,MAAMqC,EAAapR,KAAK8K,YACxB,OAAKsG,GAGE,IAAAC,OAAeD,EAAWE,2BAA4BvC,EAAMlF,SAF1D,IAGX,CAQAsE,cACE,OAAOnO,KAAKwJ,QACd,CAQAmF,cACE,OAAO3O,KAAK0M,SACd,CAUA6E,eAAe1D,GACb,MAAMa,EAAU1O,KAAK2M,gBAAgBkB,EAAGE,YACxC,YAAmB9J,IAAZyK,EAAwBA,EAAU,IAC3C,CAUAL,kBACE,OAAOrO,KAAKyJ,YACd,CAQA8E,gBACE,OAAkCvO,KAAK8B,IAAI,qBAC7C,CAOA0P,UAAUrS,GACR,MAAMsS,EAAQzR,KAAKuO,gBACnB,GAAIpP,aAAkB,UAEpB,YADAsS,EAAMD,UAAUrS,GAIlB,MAAMuS,EAAaD,EAAM3I,YACzB4I,EAAWtQ,QACXsQ,EAAWnQ,OAAOpC,EACpB,CAOA2J,YAEE,OADe9I,KAAKuO,gBAAgBzF,WAEtC,CAKA6I,uBACE,MAAMC,EAAmB5R,KAAKuO,gBAAgBsD,sBAC9C,IAAK,IAAI9Q,EAAI,EAAGC,EAAK4Q,EAAiB3Q,OAAQF,EAAIC,IAAMD,EAAG,CACzD,MAAM2C,EAAQkO,EAAiB7Q,GAC/B,IAAK2C,EAAMoO,QACT,SAEF,MAAMC,EAAWrO,EAAMkF,MAAMoJ,cAC7B,GAAID,IAAaA,EAASE,MACxB,OAAO,EAET,MAAM7S,EAASsE,EAAMkF,MAAMsJ,YAC3B,GAAI9S,GAAUA,EAAO+S,QACnB,OAAO,CAEX,CACA,OAAO,CACT,CASAC,uBAAuBnD,GACrB,MAAMoD,GAAiB,IAAAC,oBACrBrD,EACAjP,KAAKkR,UAAUC,iBAEjB,OAAOnR,KAAKuS,+BAA+BF,EAC7C,CAQAE,+BAA+BtD,GAC7B,MAAMmC,EAAapR,KAAK8K,YACxB,OAAKsG,GAGE,IAAAC,OACLD,EAAWoB,2BACXvD,EAAWpF,MAAM,EAAG,IAJb,IAMX,CAMAmI,cACE,OAAOhS,KAAK4M,SACd,CAQA0D,UACE,OACEtQ,KAAK8B,IAAI,eAEb,CASAoP,UACE,OAA4BlR,KAAK8B,IAAI,eACvC,CAOA2Q,cACE,OAAOzS,KAAKmL,SACd,CASAuH,sBACE,OAAO1S,KAAK2L,iBACd,CASAgH,+BACE,OAAO3S,KAAK+L,0BACd,CAKA6G,mBACE,MAAMC,EAAgB7S,KAAKgR,mBAC3B,OAAO6B,EAAgBA,EAAcC,cAAgB1J,QACvD,CASA2D,gBAAgBgG,EAAMC,EAAeC,EAAYC,GAC/C,OAAO,IAAAnG,iBACL/M,KAAK8K,YACLiI,EACAC,EACAC,EACAC,EAEJ,CAMA/I,mBAAmBgJ,EAAc/S,GAC/BA,EAAOA,GAAQ+S,EAAa/S,KAC5B,MAAMgT,EAAkB,IAAI,UAAgBhT,EAAMJ,KAAMmT,GACxDnT,KAAKqT,sBAAsBD,EAC7B,CAKAC,sBAAsBD,GACpB,IAAKpT,KAAK8K,YAGR,OAEF,MAAMwI,EACJF,EACF,cACMG,EAAYD,EAAclT,KAChC,GACEmT,IAAc,uBACdA,IAAc,iBACdA,IAAc,kBACd,CACA,MAAMC,EAAMxT,KAAK4S,mBACXa,EAAWzT,KAAKmL,UAAUuI,YAC5B1T,KAAKmL,UAAUuI,cACfF,EACEnU,EAA8BiU,EAAoB,OACxD,GAGEtT,KAAK+L,2BAA2B4H,SAAStU,MAKvCoU,IAAaD,EAAMA,EAAII,gBAAkBH,GAAUE,SAAStU,GAE9D,MAEJ,CAEA,GADA+T,EAAgBhC,WAAapR,KAAK8K,aACU,IAAxC9K,KAAKkC,cAAckR,GAA4B,CACjD,MAAMS,EAAoB7T,KAAKqO,kBAAkBzM,WAAWiI,QAC5D,IAAK,IAAI9I,EAAI8S,EAAkB5S,OAAS,EAAGF,GAAK,EAAGA,IAAK,CACtD,MAAMkN,EAAc4F,EAAkB9S,GACtC,GACEkN,EAAY6F,WAAa9T,OACxBiO,EAAY8F,cACZ/T,KAAKgR,mBAEN,SAGF,IADa/C,EAAY+F,YAAYZ,IACxBA,EAAgBa,mBAC3B,KAEJ,CACF,CACF,CAKAC,mBACE,MAAM9C,EAAapR,KAAK8K,YAWlBqJ,EAAYnU,KAAK8M,WACvB,IAAKqH,EAAUC,UAAW,CACxB,IAAIC,EAAkBrU,KAAKoK,iBACvBkK,EAAcD,EAClB,GAAIjD,EAAY,CACd,MAAMmD,EAAQnD,EAAWoD,UACzB,GAAID,EAAM,sBAAuBA,EAAM,uBAAuB,CAC5D,MAAME,EAAmB3M,KAAKC,MAAQqJ,EAAWsD,KAAO,EACxDL,EAAkBI,EAAmB,EAAI,EACzCH,EAAcG,EAAmB,EAAI,CACvC,CACF,CACIN,EAAUQ,kBAAoBN,IAChCF,EAAUS,eACVT,EAAUU,cAAcR,EAAiBC,GAE7C,CAEIlD,GAAcpR,KAAK4M,YAAcwE,EAAW0D,WACjB,IAAzB9U,KAAKgK,iBACHhK,KAAK+U,YAAY,2BACnB/U,KAAK4M,UAAUoI,oBACb,yBACA5D,IAGiB,IAAjBpR,KAAKiK,UACPjK,KAAKiK,SAAU,EACfjK,KAAKkC,cACH,IAAI,UAAS,kBAAsBlC,KAAMoR,OAGnB,IAAjBpR,KAAKiK,UACdjK,KAAKiK,SAAU,EACfjK,KAAKkC,cACH,IAAI,UAAS,oBAAwBlC,KAAMoR,MAKjD,MAAM6D,EAAsBjV,KAAK6M,qBACjC,IAAK,IAAI9L,EAAI,EAAGC,EAAKiU,EAAoBhU,OAAQF,EAAIC,IAAMD,EACzDkU,EAAoBlU,GAAGf,KAAMoR,GAE/B6D,EAAoBhU,OAAS,CAC/B,CAKAmM,qBACMpN,KAAKkR,YAAclR,KAAKkR,UAAUgE,gBACpClV,KAAKkR,UAAUiE,mBAAmB,GAGpCnV,KAAKoV,QACP,CAKA/H,uBACE,GAAIrN,KAAKgM,wBAAyB,CAChC,IAAK,IAAIjL,EAAI,EAAGC,EAAKhB,KAAKoM,yBAAyBnL,OAAQF,EAAIC,IAAMD,GACnE,IAAAuE,eAActF,KAAKoM,yBAAyBrL,IAE9Cf,KAAKoM,yBAA2B,KAChCpM,KAAKmL,UAAUkK,oBACb,sBACArV,KAAKkK,0BAEPlK,KAAKmL,UAAUkK,oBACb,gBACArV,KAAKkK,0BAEPlK,KAAKgM,wBAAwBnJ,UAC7B7C,KAAKgM,wBAA0B,MAC/B,IAAAsJ,YAAWtV,KAAKmL,UAClB,CAEA,GAAInL,KAAKqM,eAAgB,CACvBrM,KAAKsM,gBAAgBiJ,UAAUvV,KAAKqM,gBACpC,MAAMoH,EAAWzT,KAAKqM,eAAeqH,cACjCD,aAAoB+B,YACtBxV,KAAKsM,gBAAgBiJ,UAAU9B,EAASgC,KAE5C,CAOA,MAAMpW,EAASW,KAAK+Q,YACd8B,EACc,iBAAXxT,EAAsB+J,SAASC,eAAehK,GAAUA,EAEjE,GADAW,KAAKqM,eAAiBwG,EACjBA,EAYE,CACLA,EAAc/G,YAAY9L,KAAKmL,WAC1BnL,KAAK4M,YACR5M,KAAK4M,UAAY,IAAI,UAAqB5M,OAG5CA,KAAKgM,wBAA0B,IAAI,UACjChM,KACAA,KAAKiM,gBAEP,IAAK,MAAM1F,KAAO,UAChBvG,KAAKgM,wBAAwByB,iBAC3B,UAAoBlH,GACpBvG,KAAKqT,sBAAsB/O,KAAKtE,OAGpCA,KAAKmL,UAAUsC,iBACb,sBACAzN,KAAKkK,0BACL,GAEFlK,KAAKmL,UAAUsC,iBACb,gBACAzN,KAAKkK,2BACL,EAAAwL,yBAA0B,CAACC,SAAS,IAGtC,MAAMxM,EAAuBnJ,KAAKmM,qBAE9BnM,KAAKmM,qBADL0G,EAEJ7S,KAAKoM,yBAA2B,EAC9B,IAAAwJ,QACEzM,EACA,kBACAnJ,KAAKmK,mBACLnK,OAEF,IAAA4V,QACEzM,EACA,mBACAnJ,KAAKmK,mBACLnK,OAGJ,MAAMyT,EAAWZ,EAAca,cAC3BD,aAAoB+B,YACtBxV,KAAKsM,gBAAgBuJ,QAAQpC,EAASgC,MAExCzV,KAAKsM,gBAAgBuJ,QAAQhD,EAC/B,MA5DM7S,KAAK4M,YACPkJ,aAAa9V,KAAKuK,0BAClBvK,KAAKuK,8BAA2BtG,EAChCjE,KAAK6M,qBAAqB5L,OAAS,EACnCjB,KAAK4M,UAAU/J,UACf7C,KAAK4M,UAAY,MAEf5M,KAAKwK,qBACPuL,qBAAqB/V,KAAKwK,oBAC1BxK,KAAKwK,wBAAqBvG,GAqD9BjE,KAAKwM,YAGP,CAKAQ,oBACEhN,KAAKoV,QACP,CAKAY,6BACEhW,KAAKoV,QACP,CAKAjI,qBACMnN,KAAKgL,4BACP,IAAA1F,eAActF,KAAKgL,0BACnBhL,KAAKgL,yBAA2B,MAE9BhL,KAAKiL,0BACP,IAAA3F,eAActF,KAAKiL,wBACnBjL,KAAKiL,uBAAyB,MAEhC,MAAM3L,EAAOU,KAAKkR,UACd5R,IACFU,KAAKiW,sBAELjW,KAAKgL,0BAA2B,IAAA4K,QAC9BtW,EACA,yBACAU,KAAKgW,2BACLhW,MAEFA,KAAKiL,wBAAyB,IAAA2K,QAC5BtW,EACA,iBACAU,KAAKgW,2BACLhW,MAGFV,EAAK6V,mBAAmB,IAE1BnV,KAAKoV,QACP,CAKAlI,2BACMlN,KAAKkL,kCACPlL,KAAKkL,gCAAgCxJ,QAAQ,EAAA4D,eAC7CtF,KAAKkL,gCAAkC,MAEzC,MAAM3B,EAAavJ,KAAKuO,gBACpBhF,IACFvJ,KAAKwO,gBAAgB,IAAI,EAAA0H,WAAW,WAAY3M,IAChDvJ,KAAKkL,gCAAkC,EACrC,IAAA0K,QAAOrM,EAAY,yBAAgCvJ,KAAKoV,OAAQpV,OAChE,IAAA4V,QAAOrM,EAAY,iBAAkBvJ,KAAKoV,OAAQpV,OAClD,IAAA4V,QAAOrM,EAAY,WAAYvJ,KAAKwO,gBAAiBxO,OACrD,IAAA4V,QAAOrM,EAAY,cAAevJ,KAAKmW,mBAAoBnW,QAG/DA,KAAKoV,QACP,CAKAgB,aACE,QAASpW,KAAK8K,WAChB,CAKAL,kBACEzK,KAAKwK,wBAAqBvG,EAC1BjE,KAAKqW,aAAavO,KAAKC,MACzB,CAMAuO,aACMtW,KAAKwK,oBACPuL,qBAAqB/V,KAAKwK,oBAE5BxK,KAAKyK,iBACP,CAKA8L,aACE,MAAMC,EAAcxW,KAAKuO,gBAAgBsD,sBACzC,IAAK,IAAI9Q,EAAI,EAAGC,EAAKwV,EAAYvV,OAAQF,EAAIC,IAAMD,EAAG,CACpD,MAAM6H,EAAQ4N,EAAYzV,GAAG6H,MACzBA,EAAM6N,eACR7N,EAAMoJ,cAAc0E,oBAExB,CACF,CAMAtB,SACMpV,KAAK4M,gBAAyC3I,IAA5BjE,KAAKwK,qBACzBxK,KAAKwK,mBAAqBmM,sBAAsB3W,KAAKyK,iBAEzD,CASAmM,cAAc5I,GACZ,OAAOhO,KAAKmO,cAAc9L,OAAO2L,EACnC,CASA6I,kBAAkB5I,GAChB,OAAOjO,KAAKqO,kBAAkBhM,OAAO4L,EACvC,CASA6I,YAAYlO,GAEV,OADe5I,KAAKuO,gBAAgBzF,YACtBzG,OAAOuG,EACvB,CAMAuN,mBAAmBzI,GACjB/E,EAAuB+E,EAAM9E,MAC/B,CASAmO,cAAcrI,GACZ,OAAO1O,KAAK2O,cAActM,OAAOqM,EACnC,CAMA2H,aAAa3B,GACX,MAAMsC,EAAOhX,KAAKsQ,UACZhR,EAAOU,KAAKkR,UACZ+F,EAAqBjX,KAAK8K,YAEhC,IAAIsG,EAAa,KACjB,QAAanN,IAAT+S,IAAsB,IAAAE,SAAQF,IAAS1X,GAAQA,EAAK6X,QAAS,CAC/D,MAAM3C,EAAYlV,EAAK8X,SACrBpX,KAAK8K,YAAc9K,KAAK8K,YAAY0J,eAAYvQ,GAE5CoT,EAAY/X,EAAKuG,WA2BvB,GA1BAuL,EAAa,CACX0D,SAAS,EACTtC,2BAA4BxS,KAAK0K,4BACjC4M,cAAe,KACftU,QAAQ,IAAAuU,mBACNF,EAAUrY,OACVqY,EAAUpU,WACVoU,EAAUG,SACVR,GAEF3W,MAAOL,KAAK6K,cACZ4M,WAAY,EACZ7F,iBAAkB5R,KAAKuO,gBAAgBsD,sBACvC3O,WAAYlD,KAAKwF,YACjB8L,2BAA4BtR,KAAK4K,4BACjCqK,oBAAqB,GACrB+B,KAAMA,EACN7C,UAAWnU,KAAK8M,WAChB4H,KAAMA,EACNgD,UAAW,CAAC,EACZL,UAAWA,EACX7C,UAAWA,EACXmD,YAAa,CAAC,EACdC,OAAO,IAAAC,QAAO7X,MACd8X,cAAe,CAAC,GAEdT,EAAUU,YAAcV,EAAUW,eAAgB,CACpD,MAAMR,EAAWS,MAAMZ,EAAUa,cAC7Bb,EAAUG,SACVH,EAAUa,aAEd9G,EAAW+G,YAAa,IAAAZ,mBACtBF,EAAUU,WACVV,EAAUW,eACVR,EACAR,EAEJ,CACF,CAKA,GAHAhX,KAAK8K,YAAcsG,EACnBpR,KAAK4M,UAAUwL,YAAYhH,GAEvBA,EAAY,CASd,GARIA,EAAW0D,SACb9U,KAAKoV,SAEPzL,MAAM0O,UAAU5W,KAAK4P,MACnBrR,KAAK6M,qBACLuE,EAAW6D,qBAGTgC,EAAoB,GAEnBjX,KAAK+K,mBACJ,IAAAqJ,SAAQpU,KAAK+K,oBACZ,IAAAuN,QAAalH,EAAWpO,OAAQhD,KAAK+K,oBAExC/K,KAAKkC,cACH,IAAI,UAAS,oBAAwBlC,KAAMiX,IAE7CjX,KAAK+K,iBAAkB,IAAAwN,qBAAoBvY,KAAK+K,iBAEpD,CAGE/K,KAAK+K,kBACJqG,EAAWoD,UAAU,uBACrBpD,EAAWoD,UAAU,0BACrB,IAAA8D,QAAalH,EAAWpO,OAAQhD,KAAK+K,mBAGtC/K,KAAKkC,cACH,IAAI,UAAS,kBAAsBlC,KAAMoR,KAE3C,IAAAoH,OAAMpH,EAAWpO,OAAQhD,KAAK+K,iBAElC,CAEA/K,KAAKkC,cAAc,IAAI,UAAS,qBAAyBlC,KAAMoR,IAE/DpR,KAAKgK,gBACHhK,KAAK+U,YAAY,sBACjB/U,KAAK+U,YAAY,oBACjB/U,KAAK+U,YAAY,2BACZ/U,KAAK8M,WAAW6H,oBAChB3U,KAAK8M,WAAW2L,aAChBzY,KAAK2R,4BACN1N,EAEDjE,KAAKuK,2BACRvK,KAAKuK,yBAA2BmO,YAAW,KACzC1Y,KAAKuK,8BAA2BtG,EAChCjE,KAAKkU,kBAAkB,GACtB,GAEP,CAQAyE,cAAcpP,GACZ,MAAMqP,EAAgB5Y,KAAKuO,gBACvBqK,GACF5Y,KAAKmW,mBAAmB,IAAI,EAAAD,WAAW,cAAe0C,IAExD5Y,KAAKwC,IAAI,qBAAwB+G,EACnC,CAQAsP,QAAQ7B,GACNhX,KAAKwC,IAAI,eAAkBwU,EAC7B,CASAnI,UAAUxP,GACRW,KAAKwC,IAAI,iBAAoBnD,EAC/B,CAWAmO,QAAQlO,GACN,IAAKA,GAAQA,aAAgB,UAE3B,YADAU,KAAKwC,IAAI,eAAkBlD,GAG7BU,KAAKwC,IAAI,eAAkB,IAAI,WAE/B,MAAMwG,EAAMhJ,KACZV,EAAK6F,MAAK,SAAUoI,GAClBvE,EAAIwE,QAAQ,IAAI,UAAKD,GACvB,GACF,CAOAf,aACE,MAAMqG,EAAgB7S,KAAKgR,mBAE3B,IAAIgG,EACJ,GAAInE,EAAe,CACjB,MAAMiG,EAAgBC,iBAAiBlG,GACjCnH,EACJmH,EAAcmG,YACdC,WAAWH,EAA+B,iBAC1CG,WAAWH,EAA2B,aACtCG,WAAWH,EAA4B,cACvCG,WAAWH,EAAgC,kBACvC3U,EACJ0O,EAAcqG,aACdD,WAAWH,EAA8B,gBACzCG,WAAWH,EAA0B,YACrCG,WAAWH,EAA6B,eACxCG,WAAWH,EAAiC,mBACzCb,MAAMvM,IAAWuM,MAAM9T,KAC1B6S,EAAO,CAACtL,EAAOvH,KAEZ,IAAA+S,SAAQF,KAEPnE,EAAcmG,aACdnG,EAAcqG,cACdrG,EAAcsG,iBAAiBlY,UAGjC,IAAAmY,MACE,qEAIR,CAEA,MAAMC,EAAUrZ,KAAKsQ,WACjB0G,GAAUqC,IAAY,IAAAf,QAAOtB,EAAMqC,KACrCrZ,KAAK6Y,QAAQ7B,GACbhX,KAAKiW,sBAET,CAMAA,sBACE,MAAM3W,EAAOU,KAAKkR,UAClB,GAAI5R,EAAM,CACR,IAAI0X,EACJ,MAAM8B,EAAgBC,iBAAiB/Y,KAAKmL,WACxC2N,EAAcpN,OAASoN,EAAc3U,SACvC6S,EAAO,CACLsC,SAASR,EAAcpN,MAAO,IAC9B4N,SAASR,EAAc3U,OAAQ,MAGnC7E,EAAKia,gBAAgBvC,EACvB,CACF,EA8FF,mICpyDA,MAAMwC,UAAwB,UAS5B5Z,YAAYQ,EAAM4I,EAAKsK,EAAemG,EAAUrI,EAAYsI,GAC1D3Z,MAAMK,EAAM4I,EAAKoI,GAQjBpR,KAAKsT,cAAgBA,EAMrBtT,KAAK2Z,OAAS,KAMd3Z,KAAK4Z,YAAc,KASnB5Z,KAAKyZ,cAAwBxV,IAAbwV,GAAyBA,EAKzCzZ,KAAK0Z,eAAiBA,CACxB,CAOI3K,YAIF,OAHK/O,KAAK2Z,SACR3Z,KAAK2Z,OAAS3Z,KAAKgJ,IAAIiH,cAAcjQ,KAAKsT,gBAErCtT,KAAK2Z,MACd,CACI5K,UAAMA,GACR/O,KAAK2Z,OAAS5K,CAChB,CAQIE,iBAIF,OAHKjP,KAAK4Z,cACR5Z,KAAK4Z,YAAc5Z,KAAKgJ,IAAIgH,uBAAuBhQ,KAAK+O,QAEnD/O,KAAK4Z,WACd,CACI3K,eAAWA,GACbjP,KAAK4Z,YAAc3K,CACrB,CAOA4K,iBACE9Z,MAAM8Z,iBACF,mBAAoB7Z,KAAKsT,eACHtT,KAAkB,cAAE6Z,gBAEhD,CAOAC,kBACE/Z,MAAM+Z,kBACF,oBAAqB9Z,KAAKsT,eACJtT,KAAkB,cAAE8Z,iBAEhD,EAGF,+aCrGA,MAAMC,UAA+B,UAKnCna,YAAYoJ,EAAKkD,GACfnM,MAAMiJ,GAONhJ,KAAKga,KAAOhR,EAMZhJ,KAAKia,gBAMLja,KAAKka,gBAAiB,EAMtBla,KAAKma,WAAY,EAMjBna,KAAKoa,kBAAoB,GAMzBpa,KAAKiM,oBAAmChI,IAAlBiI,EAA8B,EAAIA,EAQxDlM,KAAKqa,MAAQ,KAEb,MAAMzb,EAAUoB,KAAKga,KAAKvH,cAM1BzS,KAAKsa,gBAAkB,GAMvBta,KAAKua,gBAAkB,CAAC,EAExBva,KAAKwa,SAAW5b,EAMhBoB,KAAKya,yBAA0B,IAAA7E,QAC7BhX,EACA,sBACAoB,KAAK0a,mBACL1a,MAOFA,KAAK2a,0BAML3a,KAAK4a,qBAAsB,IAAAhF,QACzBhX,EACA,sBACAoB,KAAK6a,gBACL7a,MAMFA,KAAK8a,sBAAwB9a,KAAK+a,iBAAiBzW,KAAKtE,MAExDA,KAAKwa,SAAS/M,iBACZ,oBACAzN,KAAK8a,wBACL,EAAApF,yBAA0B,CAACC,SAAS,GAExC,CAOAqF,cAAcC,GACZ,IAAIC,EAAW,IAAI,UACjB,gBACAlb,KAAKga,KACLiB,GAEFjb,KAAKkC,cAAcgZ,QACUjX,IAAzBjE,KAAKia,iBAEPnE,aAAa9V,KAAKia,iBAClBja,KAAKia,qBAAkBhW,EACvBiX,EAAW,IAAI,UACb,mBACAlb,KAAKga,KACLiB,GAEFjb,KAAKkC,cAAcgZ,IAGnBlb,KAAKia,gBAAkBvB,YAAW,KAChC1Y,KAAKia,qBAAkBhW,EACvB,MAAMiX,EAAW,IAAI,UACnB,sBACAlb,KAAKga,KACLiB,GAEFjb,KAAKkC,cAAcgZ,EAAS,GAC3B,IAEP,CASAC,sBAAsBF,GACpB,MAAMvN,EAAQuN,EACRpN,EAAKH,EAAM0N,UAEjB,GACE1N,EAAMtN,MAAQ,qBACdsN,EAAMtN,MAAQ,wBACd,QACOJ,KAAKua,gBAAgB1M,GAC5B,IAAK,MAAMuN,KAAapb,KAAKua,gBAC3B,GAAIva,KAAKua,gBAAgBa,GAAW/b,SAAWqO,EAAMrO,OAAQ,QAKpDW,KAAKua,gBAAgBa,GAC5B,KACF,CAEJ,MACE1N,EAAMtN,MAAQ,uBACdsN,EAAMtN,MAAQ,wBAEdJ,KAAKua,gBAAgB1M,GAAMH,GAE7B1N,KAAKsa,gBAAkBe,OAAO/R,OAAOtJ,KAAKua,gBAC5C,CAOAe,iBAAiBL,GACfjb,KAAKmb,sBAAsBF,GAC3B,MAAMC,EAAW,IAAI,UACnB,oBACAlb,KAAKga,KACLiB,OACAhX,OACAA,EACAjE,KAAKsa,iBAEPta,KAAKkC,cAAcgZ,GASjBlb,KAAKka,iBACJgB,EAASK,mBACTvb,KAAKma,WACNna,KAAKwb,qBAAqBP,IAE1Bjb,KAAKgb,cAAchb,KAAKqa,OAGU,IAAhCra,KAAKsa,gBAAgBrZ,SACvBjB,KAAKoa,kBAAkB1Y,QAAQ,EAAA4D,eAC/BtF,KAAKoa,kBAAkBnZ,OAAS,EAChCjB,KAAKma,WAAY,EACjBna,KAAKqa,MAAQ,KAEjB,CAQAmB,qBAAqBP,GACnB,OAA+B,IAAxBA,EAAaQ,MACtB,CAOAf,mBAAmBO,GACjBjb,KAAKka,eAAiD,IAAhCla,KAAKsa,gBAAgBrZ,OAC3CjB,KAAKmb,sBAAsBF,GAC3B,MAAMC,EAAW,IAAI,UACnB,sBACAlb,KAAKga,KACLiB,OACAhX,OACAA,EACAjE,KAAKsa,iBAEPta,KAAKkC,cAAcgZ,GAGnBlb,KAAKqa,MAAoC,CAAG,EAC5C,IAAK,MAAMqB,KAAYT,EAAc,CACnC,MAAMU,EAAQV,EAAaS,GAC3B1b,KAAKqa,MAAMqB,GAA6B,mBAAVC,EAAuB,EAAAC,KAAOD,CAC9D,CAEA,GAAsC,IAAlC3b,KAAKoa,kBAAkBnZ,OAAc,CACvC,MAAMuS,EAAMxT,KAAKga,KAAKpH,mBACtB5S,KAAKoa,kBAAkB3Y,MACrB,IAAAmU,QACEpC,EACA,sBACAxT,KAAK6b,mBACL7b,OAEF,IAAA4V,QAAOpC,EAAK,oBAA+BxT,KAAKsb,iBAAkBtb,OAclE,IAAA4V,QACE5V,KAAKwa,SACL,wBACAxa,KAAKsb,iBACLtb,OAGAA,KAAKwa,SAAS9G,aAAe1T,KAAKwa,SAAS9G,gBAAkBF,GAC/DxT,KAAKoa,kBAAkB3Y,MACrB,IAAAmU,QACE5V,KAAKwa,SAAS9G,cACd,oBACA1T,KAAKsb,iBACLtb,MAIR,CACF,CAOA6b,mBAAmBZ,GAIjB,GAAIjb,KAAK8b,UAAUb,GAAe,CAChCjb,KAAKmb,sBAAsBF,GAC3Bjb,KAAKma,WAAY,EACjB,MAAMe,EAAW,IAAI,UACnB,sBACAlb,KAAKga,KACLiB,EACAjb,KAAKma,eACLlW,EACAjE,KAAKsa,iBAEPta,KAAKkC,cAAcgZ,EACrB,CACF,CAQAL,gBAAgBI,GACdjb,KAAK2a,0BAA4BM,EACjC,MAAMxB,KAAczZ,KAAKqa,QAASra,KAAK8b,UAAUb,IACjDjb,KAAKkC,cACH,IAAI,UACF,sBACAlC,KAAKga,KACLiB,EACAxB,GAGN,CAUAsB,iBAAiBrN,GAGf,MAAM4F,EAAgBtT,KAAK2a,0BAEvBrH,IAAiBA,EAAciI,kBACJ,kBAArB7N,EAAMqO,aAAiD,IAArBrO,EAAMqO,YAEhDrO,EAAMmM,gBAEV,CAQAiC,UAAUb,GACR,OACEjb,KAAKma,WACL7R,KAAK0T,IAAIf,EAAatK,QAAU3Q,KAAKqa,MAAM1J,SACzC3Q,KAAKiM,gBACP3D,KAAK0T,IAAIf,EAAapK,QAAU7Q,KAAKqa,MAAMxJ,SAAW7Q,KAAKiM,cAE/D,CAKAnJ,kBACM9C,KAAK4a,uBACP,IAAAtV,eAActF,KAAK4a,qBACnB5a,KAAK4a,oBAAsB,MAE7B5a,KAAKwa,SAASnF,oBACZ,oBACArV,KAAK8a,uBAGH9a,KAAKya,2BACP,IAAAnV,eAActF,KAAKya,yBACnBza,KAAKya,wBAA0B,MAGjCza,KAAKoa,kBAAkB1Y,QAAQ,EAAA4D,eAC/BtF,KAAKoa,kBAAkBnZ,OAAS,EAEhCjB,KAAKwa,SAAW,KAChBza,MAAM+C,iBACR,EAGF,+ICtZA,SAOEmZ,YAAa,cAObC,MAAO,gBAOPC,SAAU,mBAOVC,YAAa,cAQbC,YAAa,cAEbC,YAAa,cACbC,UAAW,YACXC,YAAa,cACbC,WAAY,aACZC,aAAc,eACdC,aAAc,eACdC,cAAe,uIC3CjB,MAAMC,UAAiB,UAMrBjd,YAAYQ,EAAM4I,EAAKoI,GACrBrR,MAAMK,GAONJ,KAAKgJ,IAAMA,EAOXhJ,KAAKoR,gBAA4BnN,IAAfmN,EAA2BA,EAAa,IAC5D,EAGF,uFC5BA,SAME0L,WAAY,aAOZC,UAAW,YAOXC,QAAS,UAOTC,UAAW,YAOXC,QAAS,uFClCX,SACEC,WAAY,aACZC,KAAM,OACNC,OAAQ,SACRC,KAAM,kSCED,MAAMC,UAAoB,UAM/B3d,YAAYQ,EAAMmG,EAAKiX,GACrBzd,MAAMK,GAONJ,KAAKuG,IAAMA,EAQXvG,KAAKwd,SAAWA,CAClB,EAqDF,MAAMC,UAAmB,UAIvB7d,YAAY0J,GACVvJ,QAKAC,KAAKS,GAKLT,KAAKU,KAKLV,KAAKW,IAML,IAAAkX,QAAO7X,MAMPA,KAAK0d,QAAU,UAEAzZ,IAAXqF,GACFtJ,KAAKsN,cAAchE,EAEvB,CAQAxH,IAAIyE,GACF,IAAIoV,EAIJ,OAHI3b,KAAK0d,SAAW1d,KAAK0d,QAAQC,eAAepX,KAC9CoV,EAAQ3b,KAAK0d,QAAQnX,IAEhBoV,CACT,CAOAiC,UACE,OAAQ5d,KAAK0d,SAAWrC,OAAOwC,KAAK7d,KAAK0d,UAAa,EACxD,CAOAI,gBACE,OAAQ9d,KAAK0d,SAAWrC,OAAO0C,OAAO,CAAC,EAAG/d,KAAK0d,UAAa,CAAC,CAC/D,CAKAM,gBACE,QAAShe,KAAK0d,OAChB,CAMAO,OAAO1X,EAAKiX,GACV,IAAIjK,EACJA,EAAY,UAAUhN,IAClBvG,KAAK+U,YAAYxB,IACnBvT,KAAKkC,cAAc,IAAIqb,EAAYhK,EAAWhN,EAAKiX,IAErDjK,EAAY,yBACRvT,KAAK+U,YAAYxB,IACnBvT,KAAKkC,cAAc,IAAIqb,EAAYhK,EAAWhN,EAAKiX,GAEvD,CAMAvQ,kBAAkB1G,EAAK2X,GACrBle,KAAKyN,iBAAiB,UAAUlH,IAAO2X,EACzC,CAMAC,qBAAqB5X,EAAK2X,GACxBle,KAAKqV,oBAAoB,UAAU9O,IAAO2X,EAC5C,CASA1b,IAAI+D,EAAKoV,EAAOyC,GACd,MAAM9U,EAAStJ,KAAK0d,UAAY1d,KAAK0d,QAAU,CAAC,GAChD,GAAIU,EACF9U,EAAO/C,GAAOoV,MACT,CACL,MAAM6B,EAAWlU,EAAO/C,GACxB+C,EAAO/C,GAAOoV,EACV6B,IAAa7B,GACf3b,KAAKie,OAAO1X,EAAKiX,EAErB,CACF,CASAlQ,cAAchE,EAAQ8U,GACpB,IAAK,MAAM7X,KAAO+C,EAChBtJ,KAAKwC,IAAI+D,EAAK+C,EAAO/C,GAAM6X,EAE/B,CAOAC,gBAAgBjf,GACTA,EAAOse,SAGZrC,OAAO0C,OAAO/d,KAAK0d,UAAY1d,KAAK0d,QAAU,CAAC,GAAIte,EAAOse,QAC5D,CAQAY,MAAM/X,EAAK6X,GACT,GAAIpe,KAAK0d,SAAWnX,KAAOvG,KAAK0d,QAAS,CACvC,MAAMF,EAAWxd,KAAK0d,QAAQnX,UACvBvG,KAAK0d,QAAQnX,IAChB,IAAA6N,SAAQpU,KAAK0d,WACf1d,KAAK0d,QAAU,MAEZU,GACHpe,KAAKie,OAAO1X,EAAKiX,EAErB,CACF,EAGF,0FCjQA,SAMEe,eAAgB,yOC2BlB,MAAMC,UAAmB,UACvB5e,cACEG,QAEAC,KAAKS,GAEDT,KACF,WAEFA,KAAKU,KAEDV,KACF,aAEFA,KAAKW,GAAiDX,KAAe,WAMrEA,KAAKye,UAAY,CACnB,CAMA1a,YACI/D,KAAKye,UACPze,KAAKkC,cAAc,iBACrB,CAQAwc,cACE,OAAO1e,KAAKye,SACd,CAQAE,WAAWve,EAAM8d,GACf,GAAIvU,MAAMC,QAAQxJ,GAAO,CACvB,MAAMwe,EAAMxe,EAAKa,OACX4c,EAAO,IAAIlU,MAAMiV,GACvB,IAAK,IAAI7d,EAAI,EAAGA,EAAI6d,IAAO7d,EACzB8c,EAAK9c,IAAK,IAAA6U,QAAO5V,KAAMI,EAAKW,GAAImd,GAElC,OAAOL,CACT,CACA,OAAO,IAAAjI,QAAO5V,KAA4B,EAAQke,EACpD,CAQAW,aAAaze,EAAM8d,GACjB,IAAI3X,EACJ,GAAIoD,MAAMC,QAAQxJ,GAAO,CACvB,MAAMwe,EAAMxe,EAAKa,OACjBsF,EAAM,IAAIoD,MAAMiV,GAChB,IAAK,IAAI7d,EAAI,EAAGA,EAAI6d,IAAO7d,EACzBwF,EAAIxF,IAAK,IAAAiE,YAAWhF,KAAMI,EAAKW,GAAImd,EAEvC,MACE3X,GAAM,IAAAvB,YAAWhF,KAA4B,EAAQke,GAGvD,OADsB,EAAWY,OAASvY,EACnCA,CACT,CAQAwY,WAAW3e,EAAM8d,GACf,MAAM3X,EAA4B,EAAWuY,OAC7C,GAAIvY,EACFyY,EAAQzY,QACH,GAAIoD,MAAMC,QAAQxJ,GACvB,IAAK,IAAIW,EAAI,EAAGC,EAAKZ,EAAKa,OAAQF,EAAIC,IAAMD,EAC1Cf,KAAKqV,oBAAoBjV,EAAKW,GAAImd,QAGpCle,KAAKqV,oBAAoBjV,EAAM8d,EAEnC,EA0CK,SAASc,EAAQzY,GACtB,GAAIoD,MAAMC,QAAQrD,GAChB,IAAK,IAAIxF,EAAI,EAAGC,EAAKuF,EAAItF,OAAQF,EAAIC,IAAMD,GACzC,IAAAuE,eAAciB,EAAIxF,SAGpB,IAAAuE,eAA6D,EAEjE,CArCAkZ,EAAWnG,UAAU5X,GAYrB+d,EAAWnG,UAAU3X,KASrB8d,EAAWnG,UAAU1X,GAkBrB,oRClHA,MAAMse,UAAa,UAMjBrf,YAAYwG,EAAW1C,EAAOlD,GAC5BT,QAEAS,EAAUA,GAAoB,CAAC,EAK/BR,KAAKoG,UAAYA,EAMjBpG,KAAK0D,MAAQA,EAQb1D,KAAKkf,YAAc,KAQnBlf,KAAKuG,IAAM,GAMXvG,KAAKmf,iBACoBlb,IAAvBzD,EAAQ4e,WAA2B,IAAM5e,EAAQ4e,WAOnDpf,KAAKqf,kBAAoB,CAAC,EAK1Brf,KAAKsf,cAAgB9e,EAAQ8e,WAC/B,CAKAvb,UACE/D,KAAKkC,cAAc,iBACrB,CAKAqd,UACMvf,KAAK0D,QAAU,iBAEjB1D,KAAKwf,SAAS,gBAElB,CAKAC,SACE,OAAOzf,KAAKuG,IAAM,IAAMvG,KAAKoG,SAC/B,CAQAsZ,iBACE,IAAK1f,KAAKkf,YAER,OAAOlf,KAET,IAAI+S,EAAO/S,KAAKkf,YAMhB,EAAG,CACD,GAAInM,EAAKlN,YAAc,iBAIrB,OADA7F,KAAKmf,YAAc,EACZpM,EAETA,EAAOA,EAAKmM,WACd,OAASnM,GAGT,OAAO/S,IACT,CAMA2f,sBACE,IAAK3f,KAAKkf,YACR,OAGF,IAAInM,EAAO/S,KAAKkf,YAKZ5c,EAAOtC,KAEX,EAAG,CACD,GAAI+S,EAAKlN,YAAc,iBAAkB,CAIvCkN,EAAKmM,YAAc,KACnB,KACF,CAAWnM,EAAKlN,YAAc,kBAG5BvD,EAAOyQ,EACEA,EAAKlN,YAAc,eAG5BvD,EAAK4c,YAAcnM,EAAKmM,YAExB5c,EAAOyQ,EAETA,EAAOzQ,EAAK4c,WACd,OAASnM,EACX,CAOA6M,eACE,OAAO5f,KAAKoG,SACd,CAKAP,WACE,OAAO7F,KAAK0D,KACd,CAUA8b,SAAS9b,GACP,GAAI1D,KAAK0D,QAAU,iBAAmB1D,KAAK0D,MAAQA,EACjD,MAAM,IAAI/D,MAAM,gCAElBK,KAAK0D,MAAQA,EACb1D,KAAK+D,SACP,CASAK,QACE,IAAAsB,WACF,CAQAma,SAAShS,EAAI6G,GACX,IAAK1U,KAAKmf,YACR,OAAO,EAGT,IAAIW,EAAQ9f,KAAKqf,kBAAkBxR,GACnC,GAAKiS,GAGE,IAAe,IAAXA,EACT,OAAO,OAHPA,EAAQpL,EACR1U,KAAKqf,kBAAkBxR,GAAMiS,EAK/B,MAAMC,EAAQrL,EAAOoL,EAAQ,IAAO,GACpC,OAAIC,GAAS/f,KAAKmf,YACT,GAEF,IAAAa,QAAOD,EAAQ/f,KAAKmf,YAC7B,CASAc,aAAapS,GACX,QAAK7N,KAAKmf,cAG6B,IAAhCnf,KAAKqf,kBAAkBxR,EAChC,CAMAqS,cAAcrS,GACR7N,KAAKmf,cACPnf,KAAKqf,kBAAkBxR,IAAO,EAElC,EAGF,2KC3TA,MAAMsS,UAAkB,UACtB/e,QACE,KAAOpB,KAAKyY,WAAa,GACvBzY,KAAKsB,MAAMie,UAEbxf,MAAMqB,OACR,CAKAgf,YAAY1I,GACV,KAAO1X,KAAKqgB,kBAAkB,CAE5B,GADargB,KAAKsgB,WACTb,WAAY/H,EACnB,MAEA1X,KAAKsB,MAAMie,SAEf,CACF,CAKAgB,qBACE,GAAwB,IAApBvgB,KAAKyY,WACP,OAEF,MAAMlS,EAAMvG,KAAKwgB,eAEXC,GADY,IAAAC,SAAQna,GACN,GACpBvG,KAAK0B,SAASqR,IACRA,EAAK3M,UAAU,KAAOqa,IACxBzgB,KAAKqC,QAAO,IAAAod,QAAO1M,EAAK3M,YACxB2M,EAAKwM,UACP,GAEJ,EAGF,mPCpCA,MAAMoB,UAAkB,UAKtB/gB,YAAYghB,EAAsBC,GAChC9gB,OAKE,SAAUnB,GACR,OAAOgiB,EAAqBvP,MAAM,KAAMzS,EAC1C,IAKA,SAAUA,GACR,OAAmDA,EAAQ,GAAI6gB,QACjE,IAIFzf,KAAK8gB,uBAAyB9gB,KAAK+gB,iBAAiBzc,KAAKtE,MAMzDA,KAAKghB,oBAAsBH,EAM3B7gB,KAAKihB,cAAgB,EAMrBjhB,KAAKkhB,kBAAoB,CAAC,CAC5B,CAMAC,QAAQviB,GACN,MAAMwiB,EAAQrhB,MAAMohB,QAAQviB,GAC5B,GAAIwiB,EAAO,CACIxiB,EAAQ,GAChB6O,iBAAiB,iBAAkBzN,KAAK8gB,uBAC/C,CACA,OAAOM,CACT,CAKAzM,kBACE,OAAO3U,KAAKihB,aACd,CAMAF,iBAAiBrT,GACf,MAAMqF,EAAmDrF,EAAY,OAC/DhK,EAAQqP,EAAKlN,WACnB,GACEnC,IAAU,kBACVA,IAAU,iBACVA,IAAU,gBACV,CACIA,IAAU,iBACZqP,EAAKsC,oBAAoB,iBAAkBrV,KAAK8gB,wBAElD,MAAMO,EAAUtO,EAAK0M,SACjB4B,KAAWrhB,KAAKkhB,2BACXlhB,KAAKkhB,kBAAkBG,KAC5BrhB,KAAKihB,eAETjhB,KAAKghB,qBACP,CACF,CAMAnM,cAAcR,EAAiBC,GAC7B,IACI5Q,EAAOqP,EAAMsO,EADbC,EAAW,EAEf,KACEthB,KAAKihB,cAAgB5M,GACrBiN,EAAWhN,GACXtU,KAAKyY,WAAa,GAElB1F,EAAmD/S,KAAKuhB,UAAU,GAClEF,EAAUtO,EAAK0M,SACf/b,EAAQqP,EAAKlN,WACTnC,IAAU,gBAAoB2d,KAAWrhB,KAAKkhB,oBAChDlhB,KAAKkhB,kBAAkBG,IAAW,IAChCrhB,KAAKihB,gBACLK,EACFvO,EAAK3O,OAGX,EAGF,UAUO,SAAS2I,EACdqE,EACA2B,EACAC,EACAC,EACAC,GAIA,IAAK9B,KAAgB4B,KAAiB5B,EAAWuG,aAC/C,OAAO,EAAA6J,KAET,IAAKpQ,EAAWuG,YAAY3E,GAAeD,EAAK0M,UAC9C,OAAO,EAAA+B,KAQT,MAAMxiB,EAASoS,EAAWiG,UAAUrY,OAC9ByiB,EAASxO,EAAW,GAAKjU,EAAO,GAChC0iB,EAASzO,EAAW,GAAKjU,EAAO,GACtC,OACE,MAAQsJ,KAAKqZ,IAAIzO,GACjB5K,KAAKE,KAAKiZ,EAASA,EAASC,EAASA,GAAUxO,CAEnD,iGC3JA,MAAM0O,EAOJhiB,YAAYiiB,EAAMC,EAAMC,EAAMC,GAI5BhiB,KAAK6hB,KAAOA,EAKZ7hB,KAAK8hB,KAAOA,EAKZ9hB,KAAK+hB,KAAOA,EAKZ/hB,KAAKgiB,KAAOA,CACd,CAMArO,SAASvN,GACP,OAAOpG,KAAKiiB,WAAW7b,EAAU,GAAIA,EAAU,GACjD,CAMA8b,kBAAkBC,GAChB,OACEniB,KAAK6hB,MAAQM,EAAUN,MACvBM,EAAUL,MAAQ9hB,KAAK8hB,MACvB9hB,KAAK+hB,MAAQI,EAAUJ,MACvBI,EAAUH,MAAQhiB,KAAKgiB,IAE3B,CAOAC,WAAWra,EAAGC,GACZ,OAAO7H,KAAK6hB,MAAQja,GAAKA,GAAK5H,KAAK8hB,MAAQ9hB,KAAK+hB,MAAQla,GAAKA,GAAK7H,KAAKgiB,IACzE,CAMA1J,OAAO6J,GACL,OACEniB,KAAK6hB,MAAQM,EAAUN,MACvB7hB,KAAK+hB,MAAQI,EAAUJ,MACvB/hB,KAAK8hB,MAAQK,EAAUL,MACvB9hB,KAAKgiB,MAAQG,EAAUH,IAE3B,CAKAzgB,OAAO4gB,GACDA,EAAUN,KAAO7hB,KAAK6hB,OACxB7hB,KAAK6hB,KAAOM,EAAUN,MAEpBM,EAAUL,KAAO9hB,KAAK8hB,OACxB9hB,KAAK8hB,KAAOK,EAAUL,MAEpBK,EAAUJ,KAAO/hB,KAAK+hB,OACxB/hB,KAAK+hB,KAAOI,EAAUJ,MAEpBI,EAAUH,KAAOhiB,KAAKgiB,OACxBhiB,KAAKgiB,KAAOG,EAAUH,KAE1B,CAKA9d,YACE,OAAOlE,KAAKgiB,KAAOhiB,KAAK+hB,KAAO,CACjC,CAKAzR,UACE,MAAO,CAACtQ,KAAKoiB,WAAYpiB,KAAKkE,YAChC,CAKAke,WACE,OAAOpiB,KAAK8hB,KAAO9hB,KAAK6hB,KAAO,CACjC,CAMAQ,WAAWF,GACT,OACEniB,KAAK6hB,MAAQM,EAAUL,MACvB9hB,KAAK8hB,MAAQK,EAAUN,MACvB7hB,KAAK+hB,MAAQI,EAAUH,MACvBhiB,KAAKgiB,MAAQG,EAAUJ,IAE3B,EAWK,SAASO,EAAeT,EAAMC,EAAMC,EAAMC,EAAMG,GACrD,YAAkBle,IAAdke,GACFA,EAAUN,KAAOA,EACjBM,EAAUL,KAAOA,EACjBK,EAAUJ,KAAOA,EACjBI,EAAUH,KAAOA,EACVG,GAEF,IAAIP,EAAUC,EAAMC,EAAMC,EAAMC,EACzC,CAEA,oFCjJA,SACElc,KAAM,EACNC,QAAS,EACTC,OAAQ,EAKRC,MAAO,EACPC,MAAO,6yBC0MT,MAAMqc,EAAmB,EAqFzB,MAAMC,UAAa,UAIjB5iB,YAAYY,GACVT,QAKAC,KAAKS,GAKLT,KAAKU,KAKLV,KAAKW,GAELH,EAAU6a,OAAO0C,OAAO,CAAC,EAAGvd,GAM5BR,KAAKyiB,OAAS,CAAC,EAAG,GAMlBziB,KAAK0iB,YAAc,GAMnB1iB,KAAK2iB,oBAOL3iB,KAAK4iB,aAAc,IAAAC,kBAAiBriB,EAAQsiB,WAAY,aAMxD9iB,KAAK+iB,cAAgB,CAAC,IAAK,KAM3B/iB,KAAKgjB,cAAgB,KAMrBhjB,KAAKijB,kBAMLjjB,KAAKkjB,gBAMLljB,KAAKmjB,YAAc,KAMnBnjB,KAAKojB,gBAMLpjB,KAAKqjB,cAMLrjB,KAAKsjB,mBAAgBrf,EAEjBzD,EAAQsiB,aACV,IAAAS,4BAEE/iB,EAAQxB,SACVwB,EAAQxB,QAAS,IAAAsT,oBAAmB9R,EAAQxB,OAAQgB,KAAK4iB,cAEvDpiB,EAAQwC,SACVxC,EAAQwC,QAAS,IAAAwgB,gBAAehjB,EAAQwC,OAAQhD,KAAK4iB,cAGvD5iB,KAAKyjB,cAAcjjB,EACrB,CAMAijB,cAAcjjB,GACZ,MAAMkjB,EAAarI,OAAO0C,OAAO,CAAC,EAAGvd,GACrC,IAAK,MAAM+F,KAAO,iBACTmd,EAAWnd,GAEpBvG,KAAKsN,cAAcoW,GAAY,GAE/B,MAAMC,EAA2BC,EAA2BpjB,GAM5DR,KAAK6jB,eAAiBF,EAAyBG,cAM/C9jB,KAAK+jB,eAAiBJ,EAAyBK,cAM/ChkB,KAAKikB,YAAcN,EAAyBO,WAM5ClkB,KAAKmkB,aAAe3jB,EAAQ4jB,YAM5BpkB,KAAKqkB,SAAW7jB,EAAQ8jB,QAMxBtkB,KAAKukB,SAAWZ,EAAyBnkB,QAEzC,MAAMglB,EAAmBC,EAAuBjkB,GAC1CkkB,EAAuBf,EAAyBgB,WAChDC,EAAqBC,EAAyBrkB,GAMpDR,KAAK8kB,aAAe,CAClB9lB,OAAQwlB,EACRvhB,WAAYyhB,EACZlN,SAAUoN,GAGZ5kB,KAAK+kB,iBAAiC9gB,IAArBzD,EAAQgX,SAAyBhX,EAAQgX,SAAW,GACrExX,KAAKglB,uBACgB/gB,IAAnBzD,EAAQxB,OAAuBwB,EAAQxB,OAAS,WAEvBiF,IAAvBzD,EAAQyC,WACVjD,KAAKilB,cAAczkB,EAAQyC,iBACDgB,IAAjBzD,EAAQjB,MACjBS,KAAKklB,QAAQ1kB,EAAQjB,KAEzB,CAWI+kB,cACF,OAAOtkB,KAAKqkB,QACd,CACIC,YAAQA,GACV,IAAIa,EAAanlB,KAAKqkB,SACtBrkB,KAAKqkB,SAAWC,EAChB,MAAMtlB,EAASgB,KAAKolB,YACpB,GAAIpmB,EAAQ,CACV,MAAMqmB,EAAaf,GAAW,CAAC,EAAG,EAAG,EAAG,GACxCa,EAAaA,GAAc,CAAC,EAAG,EAAG,EAAG,GACrC,MAAMliB,EAAajD,KAAK4F,gBAClB0f,EACHriB,EAAa,GACboiB,EAAW,GAAKF,EAAW,GAAKA,EAAW,GAAKE,EAAW,IACxDE,EACHtiB,EAAa,GACboiB,EAAW,GAAKF,EAAW,GAAKA,EAAW,GAAKE,EAAW,IAC9DrlB,KAAKglB,kBAAkB,CAAChmB,EAAO,GAAKsmB,EAAStmB,EAAO,GAAKumB,GAC3D,CACF,CAUAC,mBAAmBC,GACjB,MAAMjlB,EAAUR,KAAK8d,gBAerB,YAZ2B7Z,IAAvBzD,EAAQyC,WACVzC,EAAQyC,WAAajD,KAAK4F,gBAE1BpF,EAAQjB,KAAOS,KAAK0lB,UAItBllB,EAAQxB,OAASgB,KAAK2lB,oBAGtBnlB,EAAQgX,SAAWxX,KAAK4lB,cAEjBvK,OAAO0C,OAAO,CAAC,EAAGvd,EAASilB,EACpC,CAmCA3Q,QAAQ+Q,GACF7lB,KAAKmX,UAAYnX,KAAKkV,gBACxBlV,KAAKmV,mBAAmB,GAE1B,MAAM2Q,EAAO,IAAInc,MAAMoc,UAAU9kB,QACjC,IAAK,IAAIF,EAAI,EAAGA,EAAI+kB,EAAK7kB,SAAUF,EAAG,CACpC,IAAIP,EAAUulB,UAAUhlB,GACpBP,EAAQxB,SACVwB,EAAU6a,OAAO0C,OAAO,CAAC,EAAGvd,GAC5BA,EAAQxB,QAAS,IAAAsT,oBACf9R,EAAQxB,OACRgB,KAAKmR,kBAGL3Q,EAAQwlB,SACVxlB,EAAU6a,OAAO0C,OAAO,CAAC,EAAGvd,GAC5BA,EAAQwlB,QAAS,IAAA1T,oBACf9R,EAAQwlB,OACRhmB,KAAKmR,kBAGT2U,EAAK/kB,GAAKP,CACZ,CACAR,KAAKimB,gBAAgB5U,MAAMrR,KAAM8lB,EACnC,CAKAG,gBAAgBJ,GACd,IACI7W,EADAkX,EAAiBH,UAAU9kB,OAG7BilB,EAAiB,GACwB,mBAAlCH,UAAUG,EAAiB,KAElClX,EAAW+W,UAAUG,EAAiB,KACpCA,GAGJ,IAAInlB,EAAI,EACR,KAAOA,EAAImlB,IAAmBlmB,KAAKmX,UAAWpW,EAAG,CAE/C,MAAM2C,EAAQqiB,UAAUhlB,GACpB2C,EAAM1E,QACRgB,KAAKglB,kBAAkBthB,EAAM1E,aAEZiF,IAAfP,EAAMnE,KACRS,KAAKklB,QAAQxhB,EAAMnE,MACVmE,EAAMT,YACfjD,KAAKilB,cAAcvhB,EAAMT,iBAEJgB,IAAnBP,EAAM8T,UACRxX,KAAK+kB,YAAYrhB,EAAM8T,SAE3B,CACA,GAAIzW,IAAMmlB,EAIR,YAHIlX,GACFmX,EAAkBnX,GAAU,IAKhC,IAAI8Q,EAAQhY,KAAKC,MACb/I,EAASgB,KAAKgjB,cAAcnZ,QAC5B5G,EAAajD,KAAKijB,kBAClBzL,EAAWxX,KAAKkjB,gBACpB,MAAMkD,EAAS,GACf,KAAOrlB,EAAImlB,IAAkBnlB,EAAG,CAC9B,MAAMP,EAA2CulB,UAAUhlB,GAErDslB,EAAY,CAChBvG,MAAOA,EACPwG,UAAU,EACVN,OAAQxlB,EAAQwlB,OAChB7d,cAA+BlE,IAArBzD,EAAQ2H,SAAyB3H,EAAQ2H,SAAW,IAC9Doe,OAAQ/lB,EAAQ+lB,QAAU,EAAAC,SAC1BxX,SAAUA,GAmBZ,GAhBIxO,EAAQxB,SACVqnB,EAAUI,aAAeznB,EACzBqnB,EAAUK,aAAelmB,EAAQxB,OAAO6K,QACxC7K,EAASqnB,EAAUK,mBAGAziB,IAAjBzD,EAAQjB,MACV8mB,EAAUM,iBAAmB1jB,EAC7BojB,EAAUO,iBAAmB5mB,KAAK6mB,qBAAqBrmB,EAAQjB,MAC/D0D,EAAaojB,EAAUO,kBACdpmB,EAAQyC,aACjBojB,EAAUM,iBAAmB1jB,EAC7BojB,EAAUO,iBAAmBpmB,EAAQyC,WACrCA,EAAaojB,EAAUO,uBAGA3iB,IAArBzD,EAAQgX,SAAwB,CAClC6O,EAAUS,eAAiBtP,EAC3B,MAAMuI,GACJ,IAAAgH,QAAOvmB,EAAQgX,SAAWA,EAAWlP,KAAK0e,GAAI,EAAI1e,KAAK0e,IAAM1e,KAAK0e,GACpEX,EAAUY,eAAiBzP,EAAWuI,EACtCvI,EAAW6O,EAAUY,cACvB,CAGIC,EAAgBb,GAClBA,EAAUC,UAAW,EAGrBxG,GAASuG,EAAUle,SAErBie,EAAO3kB,KAAK4kB,EACd,CACArmB,KAAK0iB,YAAYjhB,KAAK2kB,GACtBpmB,KAAKmnB,QAAQ,oBAAoB,GACjCnnB,KAAKonB,mBACP,CAOAlS,eACE,OAAOlV,KAAKyiB,OAAO,qBAAsB,CAC3C,CAOA4E,iBACE,OAAOrnB,KAAKyiB,OAAO,uBAAwB,CAC7C,CAMA6E,mBAEE,IAAItB,EADJhmB,KAAKmnB,QAAQ,qBAAqBnnB,KAAKyiB,OAAO,sBAE9C,IAAK,IAAI1hB,EAAI,EAAGC,EAAKhB,KAAK0iB,YAAYzhB,OAAQF,EAAIC,IAAMD,EAAG,CACzD,MAAMqlB,EAASpmB,KAAK0iB,YAAY3hB,GAIhC,GAHIqlB,EAAO,GAAGpX,UACZmX,EAAkBC,EAAO,GAAGpX,UAAU,IAEnCgX,EACH,IAAK,IAAIuB,EAAI,EAAGC,EAAKpB,EAAOnlB,OAAQsmB,EAAIC,IAAMD,EAAG,CAC/C,MAAMlB,EAAYD,EAAOmB,GACzB,IAAKlB,EAAUC,SAAU,CACvBN,EAASK,EAAUL,OACnB,KACF,CACF,CAEJ,CACAhmB,KAAK0iB,YAAYzhB,OAAS,EAC1BjB,KAAKsjB,cAAgB0C,EACrBhmB,KAAKmjB,YAAc,KACnBnjB,KAAKojB,gBAAkBqE,IACvBznB,KAAKqjB,cAAgBoE,GACvB,CAKAL,oBAKE,QAJiCnjB,IAA7BjE,KAAK2iB,sBACP5M,qBAAqB/V,KAAK2iB,qBAC1B3iB,KAAK2iB,yBAAsB1e,IAExBjE,KAAKkV,eACR,OAEF,MAAMnN,EAAMD,KAAKC,MACjB,IAAI2f,GAAO,EACX,IAAK,IAAI3mB,EAAIf,KAAK0iB,YAAYzhB,OAAS,EAAGF,GAAK,IAAKA,EAAG,CACrD,MAAMqlB,EAASpmB,KAAK0iB,YAAY3hB,GAChC,IAAI4mB,GAAiB,EACrB,IAAK,IAAIJ,EAAI,EAAGC,EAAKpB,EAAOnlB,OAAQsmB,EAAIC,IAAMD,EAAG,CAC/C,MAAMlB,EAAYD,EAAOmB,GACzB,GAAIlB,EAAUC,SACZ,SAEF,MAAMsB,EAAU7f,EAAMse,EAAUvG,MAChC,IAAI+H,EACFxB,EAAUle,SAAW,EAAIyf,EAAUvB,EAAUle,SAAW,EACtD0f,GAAY,GACdxB,EAAUC,UAAW,EACrBuB,EAAW,GAEXF,GAAiB,EAEnB,MAAMG,EAAWzB,EAAUE,OAAOsB,GAClC,GAAIxB,EAAUI,aAAc,CAC1B,MAAMsB,EAAK1B,EAAUI,aAAa,GAC5BuB,EAAK3B,EAAUI,aAAa,GAC5BwB,EAAK5B,EAAUK,aAAa,GAC5BwB,EAAK7B,EAAUK,aAAa,GAClC1mB,KAAKmjB,YAAckD,EAAUK,aAC7B,MAAM9e,EAAImgB,EAAKD,GAAYG,EAAKF,GAC1BlgB,EAAImgB,EAAKF,GAAYI,EAAKF,GAChChoB,KAAKgjB,cAAgB,CAACpb,EAAGC,EAC3B,CACA,GAAIwe,EAAUM,kBAAoBN,EAAUO,iBAAkB,CAC5D,MAAM3jB,EACS,IAAb6kB,EACIzB,EAAUO,iBACVP,EAAUM,iBACVmB,GACGzB,EAAUO,iBAAmBP,EAAUM,kBAChD,GAAIN,EAAUL,OAAQ,CACpB,MAAMhP,EAAOhX,KAAKmoB,iBAAiBnoB,KAAK4lB,eAClCwC,EAAwBpoB,KAAK8kB,aAAa7hB,WAC9CA,EACA,EACA+T,GACA,GAEFhX,KAAKgjB,cAAgBhjB,KAAKqoB,oBACxBD,EACA/B,EAAUL,OAEd,CACAhmB,KAAKojB,gBAAkBiD,EAAUO,iBACjC5mB,KAAKijB,kBAAoBhgB,EACzBjD,KAAKsoB,mBAAkB,EACzB,CACA,QAC+BrkB,IAA7BoiB,EAAUS,qBACmB7iB,IAA7BoiB,EAAUY,eACV,CACA,MAAMzP,EACS,IAAbsQ,GACI,IAAAf,QAAOV,EAAUY,eAAiB3e,KAAK0e,GAAI,EAAI1e,KAAK0e,IACpD1e,KAAK0e,GACLX,EAAUS,eACVgB,GACGzB,EAAUY,eAAiBZ,EAAUS,gBAC9C,GAAIT,EAAUL,OAAQ,CACpB,MAAMuC,EAAsBvoB,KAAK8kB,aAAatN,SAC5CA,GACA,GAEFxX,KAAKgjB,cAAgBhjB,KAAKwoB,sBACxBD,EACAlC,EAAUL,OAEd,CACAhmB,KAAKqjB,cAAgBgD,EAAUY,eAC/BjnB,KAAKkjB,gBAAkB1L,CACzB,CAGA,GAFAxX,KAAKsoB,mBAAkB,GACvBZ,GAAO,GACFrB,EAAUC,SACb,KAEJ,CACA,GAAIqB,EAAgB,CAClB3nB,KAAK0iB,YAAY3hB,GAAK,KACtBf,KAAKmnB,QAAQ,qBAAqB,GAClCnnB,KAAKmjB,YAAc,KACnBnjB,KAAKojB,gBAAkBqE,IACvBznB,KAAKqjB,cAAgBoE,IACrB,MAAMzY,EAAWoX,EAAO,GAAGpX,SACvBA,GACFmX,EAAkBnX,GAAU,EAEhC,CACF,CAEAhP,KAAK0iB,YAAc1iB,KAAK0iB,YAAY+F,OAAOC,SACvChB,QAAqCzjB,IAA7BjE,KAAK2iB,sBACf3iB,KAAK2iB,oBAAsBhM,sBACzB3W,KAAKonB,kBAAkB9iB,KAAKtE,OAGlC,CAOAwoB,sBAAsBhR,EAAUwO,GAC9B,IAAIhnB,EACJ,MAAM2pB,EAAgB3oB,KAAK2lB,oBAM3B,YALsB1hB,IAAlB0kB,IACF3pB,EAAS,CAAC2pB,EAAc,GAAK3C,EAAO,GAAI2C,EAAc,GAAK3C,EAAO,KAClE,IAAA4C,QAAiB5pB,EAAQwY,EAAWxX,KAAK4lB,gBACzC,IAAAiD,KAAc7pB,EAAQgnB,IAEjBhnB,CACT,CAOAqpB,oBAAoBplB,EAAY+iB,GAC9B,IAAIhnB,EACJ,MAAM2pB,EAAgB3oB,KAAK2lB,oBACrBmD,EAAoB9oB,KAAK4F,gBAC/B,QAAsB3B,IAAlB0kB,QAAqD1kB,IAAtB6kB,EAAiC,CAOlE9pB,EAAS,CALPgnB,EAAO,GACN/iB,GAAc+iB,EAAO,GAAK2C,EAAc,IAAOG,EAEhD9C,EAAO,GACN/iB,GAAc+iB,EAAO,GAAK2C,EAAc,IAAOG,EAEpD,CACA,OAAO9pB,CACT,CAQAmpB,iBAAiB3Q,GACf,MAAMR,EAAOhX,KAAK+iB,cAClB,GAAIvL,EAAU,CACZ,MAAMuR,EAAI/R,EAAK,GACTgS,EAAIhS,EAAK,GACf,MAAO,CACL1O,KAAK0T,IAAI+M,EAAIzgB,KAAK2gB,IAAIzR,IAAalP,KAAK0T,IAAIgN,EAAI1gB,KAAK4gB,IAAI1R,IACzDlP,KAAK0T,IAAI+M,EAAIzgB,KAAK4gB,IAAI1R,IAAalP,KAAK0T,IAAIgN,EAAI1gB,KAAK2gB,IAAIzR,IAE7D,CACA,OAAOR,CACT,CASAuC,gBAAgBvC,GACdhX,KAAK+iB,cAAgBpZ,MAAMC,QAAQoN,GAAQA,EAAKnN,QAAU,CAAC,IAAK,KAC3D7J,KAAKkV,gBACRlV,KAAKmV,mBAAmB,EAE5B,CAQAiQ,YACE,MAAMpmB,EAASgB,KAAK2lB,oBACpB,OAAK3mB,GAGE,IAAAiS,kBAAiBjS,EAAQgB,KAAKmR,iBAF5BnS,CAGX,CAMA2mB,oBACE,OACE3lB,KAAK8B,IAAI,iBAEb,CAKAqnB,iBACE,OAAOnpB,KAAK8kB,YACd,CAKAsE,yBACE,OAAOppB,KAAK8B,IAAI,sBAClB,CAMAsV,SAAS7C,GACP,YAActQ,IAAVsQ,GACFA,EAAM,GAAKvU,KAAKyiB,OAAO,GACvBlO,EAAM,GAAKvU,KAAKyiB,OAAO,GAChBlO,GAEFvU,KAAKyiB,OAAO5Y,OACrB,CAYAwf,gBAAgBrS,GACd,MAAMhU,EAAShD,KAAKspB,wBAAwBtS,GAC5C,OAAO,IAAAuS,cAAavmB,EAAQhD,KAAKmR,gBACnC,CAOAmY,wBAAwBtS,GACtBA,EAAOA,GAAQhX,KAAKwpB,+BACpB,MAAMxqB,EACJgB,KAAK2lB,qBAEP,IAAA7b,QAAO9K,EAAQ,GACf,MAAMiE,EAAqCjD,KAAK4F,iBAChD,IAAAkE,aAAsB7F,IAAfhB,EAA0B,GACjC,MAAMuU,EAAmCxX,KAAK4lB,cAG9C,OAFA,IAAA9b,aAAoB7F,IAAbuT,EAAwB,IAExB,IAAAD,mBAAkBvY,EAAQiE,EAAYuU,EAAUR,EACzD,CAOAyS,mBACE,OAAOzpB,KAAK6jB,cACd,CAOA6F,mBACE,OAAO1pB,KAAK+jB,cACd,CAOA4F,aACE,OACE3pB,KAAK4pB,qBAAqB5pB,KAAK+jB,eAEnC,CAOA8F,WAAWtqB,GACTS,KAAKyjB,cAAczjB,KAAKwlB,mBAAmB,CAACsE,QAASvqB,IACvD,CAOAwqB,aACE,OACE/pB,KAAK4pB,qBAAqB5pB,KAAK6jB,eAEnC,CAOAmG,WAAWzqB,GACTS,KAAKyjB,cAAczjB,KAAKwlB,mBAAmB,CAAChmB,QAASD,IACvD,CAOA0qB,uBAAuBC,GACrBlqB,KAAKyjB,cAAczjB,KAAKwlB,mBAAmB,CAAC2E,oBAAqBD,IACnE,CAOA/Y,gBACE,OAAOnR,KAAK4iB,WACd,CAQAhd,gBACE,OAAwC5F,KAAK8B,IAAI,qBACnD,CAQAsoB,iBACE,OAAOpqB,KAAKmkB,YACd,CAUAkG,uBAAuBrnB,EAAQgU,GAC7B,OAAOhX,KAAKsqB,gCACV,IAAA9G,gBAAexgB,EAAQhD,KAAKmR,iBAC5B6F,EAEJ,CASAsT,+BAA+BtnB,EAAQgU,GACrCA,EAAOA,GAAQhX,KAAKwpB,+BACpB,MAAMe,GAAc,IAAAnI,UAASpf,GAAUgU,EAAK,GACtCwT,GAAc,IAAAtmB,WAAUlB,GAAUgU,EAAK,GAC7C,OAAO1O,KAAKmiB,IAAIF,EAAaC,EAC/B,CAQAE,8BAA8BC,GAC5BA,EAAQA,GAAS,EACjB,MAAM7G,EAAgB9jB,KAAK4qB,yBAAyB5qB,KAAK6jB,gBACnDG,EAAgBhkB,KAAK+jB,eACrB0G,EAAMniB,KAAKqZ,IAAImC,EAAgBE,GAAiB1b,KAAKqZ,IAAIgJ,GAC/D,OAAO,SAKKhP,GAER,OADmBmI,EAAgBxb,KAAKuiB,IAAIF,EAAOhP,EAAQ8O,EAG/D,CACF,CAQA7E,cACE,OAA8B5lB,KAAK8B,IAAI,mBACzC,CAQAgpB,8BAA8BH,GAC5B,MAAMI,EAAWziB,KAAKqZ,IAAIgJ,GAAS,GAC7B7G,EAAgB9jB,KAAK4qB,yBAAyB5qB,KAAK6jB,gBACnDG,EAAgBhkB,KAAK+jB,eACrB0G,EAAMniB,KAAKqZ,IAAImC,EAAgBE,GAAiB+G,EACtD,OAAO,SAKK9nB,GAER,OADcqF,KAAKqZ,IAAImC,EAAgB7gB,GAAc8nB,EAAWN,CAGpE,CACF,CAQAjB,6BAA6BhS,GAC3B,IAAIR,EAAOhX,KAAKmoB,iBAAiB3Q,GACjC,MAAM8M,EAAUtkB,KAAKqkB,SAOrB,OANIC,IACFtN,EAAO,CACLA,EAAK,GAAKsN,EAAQ,GAAKA,EAAQ,GAC/BtN,EAAK,GAAKsN,EAAQ,GAAKA,EAAQ,KAG5BtN,CACT,CAKAnR,WACE,MAAMid,EAAa9iB,KAAKmR,gBAClBlO,EAAajD,KAAK4F,gBAClB4R,EAAWxX,KAAK4lB,cACtB,IAAI5mB,EACFgB,KAAK2lB,oBAEP,MAAMrB,EAAUtkB,KAAKqkB,SACrB,GAAIC,EAAS,CACX,MAAM0G,EAAchrB,KAAKwpB,+BACzBxqB,EAASisB,EACPjsB,EACAgB,KAAKmoB,mBACL,CAAC6C,EAAY,GAAK,EAAI1G,EAAQ,GAAI0G,EAAY,GAAK,EAAI1G,EAAQ,IAC/DrhB,EACAuU,EAEJ,CACA,MAAO,CACLxY,OAAQA,EAAO6K,MAAM,GACrBiZ,gBAA2B7e,IAAf6e,EAA2BA,EAAa,KACpD7f,WAAYA,EACZ8U,WAAY/X,KAAKmjB,YACjBnL,eAAgBhY,KAAKojB,gBACrBlL,aAAclY,KAAKqjB,cACnB7L,SAAUA,EACVjY,KAAMS,KAAK0lB,UAEf,CASAA,UACE,IAAInmB,EACJ,MAAM0D,EAAajD,KAAK4F,gBAIxB,YAHmB3B,IAAfhB,IACF1D,EAAOS,KAAK4pB,qBAAqB3mB,IAE5B1D,CACT,CAQAqqB,qBAAqB3mB,GACnB,IACIwnB,EAAKvG,EADLgH,EAASlrB,KAAKukB,UAAY,EAE9B,GAAIvkB,KAAKmkB,aAAc,CACrB,MAAMgH,GAAU,IAAAC,mBAAkBprB,KAAKmkB,aAAclhB,EAAY,GACjEioB,EAASC,EACTV,EAAMzqB,KAAKmkB,aAAagH,GAEtBjH,EADEiH,GAAWnrB,KAAKmkB,aAAaljB,OAAS,EAC3B,EAEAwpB,EAAMzqB,KAAKmkB,aAAagH,EAAU,EAEnD,MACEV,EAAMzqB,KAAK6jB,eACXK,EAAalkB,KAAKikB,YAEpB,OAAOiH,EAAS5iB,KAAKqZ,IAAI8I,EAAMxnB,GAAcqF,KAAKqZ,IAAIuC,EACxD,CAQA2C,qBAAqBtnB,GACnB,GAAIS,KAAKmkB,aAAc,CACrB,GAAInkB,KAAKmkB,aAAaljB,QAAU,EAC9B,OAAO,EAET,MAAMoqB,GAAY,IAAAC,OAChBhjB,KAAKijB,MAAMhsB,GACX,EACAS,KAAKmkB,aAAaljB,OAAS,GAEvBijB,EACJlkB,KAAKmkB,aAAakH,GAAarrB,KAAKmkB,aAAakH,EAAY,GAC/D,OACErrB,KAAKmkB,aAAakH,GAClB/iB,KAAKuiB,IAAI3G,GAAY,IAAAoH,OAAM/rB,EAAO8rB,EAAW,EAAG,GAEpD,CACA,OACErrB,KAAK6jB,eAAiBvb,KAAKuiB,IAAI7qB,KAAKikB,YAAa1kB,EAAOS,KAAKukB,SAEjE,CAYAiH,IAAIC,EAAkBjrB,GAEpB,IAAIkrB,EAOJ,IANA,IAAA5hB,QACEH,MAAMC,QAAQ6hB,IAEV,mBADuB,EAAwC,sBAEnE,IAEE9hB,MAAMC,QAAQ6hB,GAAmB,EACnC,IAAA3hB,UAAQ,IAAAsK,SAAQqX,GAAmB,IACnC,MAAMzoB,GAAS,IAAAwgB,gBAAeiI,EAAkBzrB,KAAKmR,iBACrDua,GAAW,gBAAkB1oB,EAC/B,MAAO,GAAmC,WAA/ByoB,EAAiBE,UAAwB,CAClD,MAAM3oB,GAAS,IAAAwgB,gBACbiI,EAAiBhmB,YACjBzF,KAAKmR,iBAEPua,GAAW,gBAAkB1oB,GAC7B0oB,EAAS9C,OAAO5oB,KAAK4lB,eAAe,IAAAR,WAAUpiB,GAChD,KAAO,CACL,MAAM4oB,GAAiB,IAAAC,qBAErBH,EADEE,EAEAH,EACGjT,QACAsT,UAAUF,EAAgB5rB,KAAKmR,iBAGzBsa,CAEf,CAEAzrB,KAAK+rB,YAAYL,EAAUlrB,EAC7B,CAOAwrB,yBAAyBN,GACvB,MAAMlU,EAAWxX,KAAK4lB,cAChBqG,EAAW3jB,KAAK2gB,IAAIzR,GACpB0U,EAAW5jB,KAAK4gB,KAAK1R,GACrB2U,EAAST,EAASU,qBAClBC,EAASX,EAASY,YACxB,IAAIC,EAAWC,IACXC,EAAWD,IACXE,GAAWF,IACXG,GAAWH,IACf,IAAK,IAAIzrB,EAAI,EAAGC,EAAKmrB,EAAOlrB,OAAQF,EAAIC,EAAID,GAAKsrB,EAAQ,CACvD,MAAMO,EAAOT,EAAOprB,GAAKkrB,EAAWE,EAAOprB,EAAI,GAAKmrB,EAC9CW,EAAOV,EAAOprB,GAAKmrB,EAAWC,EAAOprB,EAAI,GAAKkrB,EACpDM,EAAUjkB,KAAKwkB,IAAIP,EAASK,GAC5BH,EAAUnkB,KAAKwkB,IAAIL,EAASI,GAC5BH,EAAUpkB,KAAKmiB,IAAIiC,EAASE,GAC5BD,EAAUrkB,KAAKmiB,IAAIkC,EAASE,EAC9B,CACA,MAAO,CAACN,EAASE,EAASC,EAASC,EACrC,CAMAZ,YAAYL,EAAUlrB,GAEpB,IAAIwW,GADJxW,EAAUA,GAAW,CAAC,GACHwW,KACdA,IACHA,EAAOhX,KAAKwpB,gCAEd,MAAMlF,OACgBrgB,IAApBzD,EAAQ8jB,QAAwB9jB,EAAQ8jB,QAAU,CAAC,EAAG,EAAG,EAAG,GACxD6G,OAA8BlnB,IAApBzD,EAAQ2qB,SAAwB3qB,EAAQ2qB,QACxD,IAAInH,EAEFA,OAD4B/f,IAA1BzD,EAAQwjB,cACMxjB,EAAQwjB,mBACK/f,IAApBzD,EAAQspB,QACD9pB,KAAK6mB,qBAAqBrmB,EAAQspB,SAElC,EAGlB,MAAMiD,EAAgB/sB,KAAKgsB,yBAAyBN,GAGpD,IAAIzoB,EAAajD,KAAKsqB,+BAA+ByC,EAAe,CAClE/V,EAAK,GAAKsN,EAAQ,GAAKA,EAAQ,GAC/BtN,EAAK,GAAKsN,EAAQ,GAAKA,EAAQ,KAEjCrhB,EAAagV,MAAMhV,GACf+gB,EACA1b,KAAKmiB,IAAIxnB,EAAY+gB,GACzB/gB,EAAajD,KAAK4qB,yBAAyB3nB,EAAYkoB,EAAU,EAAI,GAGrE,MAAM3T,EAAWxX,KAAK4lB,cAChBsG,EAAW5jB,KAAK4gB,IAAI1R,GACpByU,EAAW3jB,KAAK2gB,IAAIzR,GACpBwV,GAAY,IAAA5H,WAAU2H,GAC5BC,EAAU,KAAQ1I,EAAQ,GAAKA,EAAQ,IAAM,EAAKrhB,EAClD+pB,EAAU,KAAQ1I,EAAQ,GAAKA,EAAQ,IAAM,EAAKrhB,EAClD,MAAMgqB,EAAUD,EAAU,GAAKf,EAAWe,EAAU,GAAKd,EACnDgB,EAAUF,EAAU,GAAKf,EAAWe,EAAU,GAAKd,EACnDltB,EAASgB,KAAKmtB,qBAAqB,CAACF,EAASC,GAAUjqB,GACvD+L,EAAWxO,EAAQwO,SAAWxO,EAAQwO,SAAW,EAAA4M,UAE9B3X,IAArBzD,EAAQ2H,SACVnI,KAAKimB,gBACH,CACEhjB,WAAYA,EACZjE,OAAQA,EACRmJ,SAAU3H,EAAQ2H,SAClBoe,OAAQ/lB,EAAQ+lB,QAElBvX,IAGFhP,KAAKijB,kBAAoBhgB,EACzBjD,KAAKgjB,cAAgBhkB,EACrBgB,KAAKsoB,mBAAkB,GAAO,GAC9BnC,EAAkBnX,GAAU,GAEhC,CASAoe,SAASne,EAAY+H,EAAMxL,GACzBxL,KAAKqtB,kBACH,IAAA/a,oBAAmBrD,EAAYjP,KAAKmR,iBACpC6F,EACAxL,EAEJ,CAOA6hB,iBAAiBpe,EAAY+H,EAAMxL,GACjCxL,KAAKglB,kBACHiG,EACEhc,EACA+H,EACAxL,EACAxL,KAAK4F,gBACL5F,KAAK4lB,eAGX,CAUA0H,qBAAqBtuB,EAAQiE,EAAYuU,EAAUR,GACjD,IAAIuW,EACJ,MAAMjJ,EAAUtkB,KAAKqkB,SACrB,GAAIC,GAAWtlB,EAAQ,CACrB,MAAMgsB,EAAchrB,KAAKwpB,8BAA8BhS,GACjDgW,EAAgBvC,EACpBjsB,EACAgY,EACA,CAACgU,EAAY,GAAK,EAAI1G,EAAQ,GAAI0G,EAAY,GAAK,EAAI1G,EAAQ,IAC/DrhB,EACAuU,GAEF+V,EAAc,CACZvuB,EAAO,GAAKwuB,EAAc,GAC1BxuB,EAAO,GAAKwuB,EAAc,GAE9B,CACA,OAAOD,CACT,CAKApW,QACE,QAASnX,KAAK2lB,0BAAgD1hB,IAAzBjE,KAAK4F,eAC5C,CAOA6nB,aAAaC,GACX,MAAM1uB,GAAS,IAAAiS,kBAAiBjR,KAAKgjB,cAAehjB,KAAKmR,iBACzDnR,KAAK2tB,UAAU,CACb3uB,EAAO,GAAK0uB,EAAiB,GAC7B1uB,EAAO,GAAK0uB,EAAiB,IAEjC,CAMAE,qBAAqBF,GACnB,MAAM1uB,EAASgB,KAAKgjB,cACpBhjB,KAAKglB,kBAAkB,CACrBhmB,EAAO,GAAK0uB,EAAiB,GAC7B1uB,EAAO,GAAK0uB,EAAiB,IAEjC,CASAG,iBAAiBC,EAAO9H,GACtBA,EAASA,IAAU,IAAA1T,oBAAmB0T,EAAQhmB,KAAKmR,iBACnDnR,KAAK+tB,yBAAyBD,EAAO9H,EACvC,CAQA+H,yBAAyBD,EAAO9H,GAC9B,MAAMgI,EAAWhuB,KAAKkV,gBAAkBlV,KAAKqnB,iBACvCrQ,EAAOhX,KAAKmoB,iBAAiBnoB,KAAK4lB,eAClCqI,EAAgBjuB,KAAK8kB,aAAa7hB,WACtCjD,KAAKijB,kBAAoB6K,EACzB,EACA9W,EACAgX,GAGEhI,IACFhmB,KAAKgjB,cAAgBhjB,KAAKqoB,oBAAoB4F,EAAejI,IAG/DhmB,KAAKijB,mBAAqB6K,EAC1B9tB,KAAKsoB,mBACP,CASA4F,WAAWnO,EAAOiG,GAChBhmB,KAAK6tB,iBAAiBvlB,KAAKuiB,IAAI7qB,KAAKikB,aAAclE,GAAQiG,EAC5D,CASAmI,eAAepO,EAAOiG,GAChBA,IACFA,GAAS,IAAA1T,oBAAmB0T,EAAQhmB,KAAKmR,kBAE3CnR,KAAKouB,uBAAuBrO,EAAOiG,EACrC,CAMAoI,uBAAuBrO,EAAOiG,GAC5B,MAAMgI,EAAWhuB,KAAKkV,gBAAkBlV,KAAKqnB,iBACvCgH,EAAcruB,KAAK8kB,aAAatN,SACpCxX,KAAKkjB,gBAAkBnD,EACvBiO,GAEEhI,IACFhmB,KAAKgjB,cAAgBhjB,KAAKwoB,sBAAsB6F,EAAarI,IAE/DhmB,KAAKkjB,iBAAmBnD,EACxB/f,KAAKsoB,mBACP,CAQAqF,UAAU3uB,GACRgB,KAAKglB,kBACHhmB,GAAS,IAAAsT,oBAAmBtT,EAAQgB,KAAKmR,iBAAmBnS,EAEhE,CAMAgmB,kBAAkBhmB,GAChBgB,KAAKgjB,cAAgBhkB,EACrBgB,KAAKsoB,mBACP,CAOAnB,QAAQmH,EAAMvO,GAGZ,OAFA/f,KAAKyiB,OAAO6L,IAASvO,EACrB/f,KAAK+D,UACE/D,KAAKyiB,OAAO6L,EACrB,CAQArJ,cAAchiB,GACZjD,KAAKijB,kBAAoBhgB,EACzBjD,KAAKsoB,mBACP,CAQAvD,YAAYvN,GACVxX,KAAKkjB,gBAAkB1L,EACvBxX,KAAKsoB,mBACP,CAOApD,QAAQ3lB,GACNS,KAAKilB,cAAcjlB,KAAK6mB,qBAAqBtnB,GAC/C,CAUA+oB,kBAAkBiG,EAAkBC,GAClC,MAAMR,EACJhuB,KAAKkV,gBAAkBlV,KAAKqnB,kBAAoBmH,EAG5CH,EAAcruB,KAAK8kB,aAAatN,SACpCxX,KAAKkjB,gBACL8K,GAEIhX,EAAOhX,KAAKmoB,iBAAiBkG,GAC7BJ,EAAgBjuB,KAAK8kB,aAAa7hB,WACtCjD,KAAKijB,kBACL,EACAjM,EACAgX,GAEIS,EAAYzuB,KAAK8kB,aAAa9lB,OAClCgB,KAAKgjB,cACLiL,EACAjX,EACAgX,EACAhuB,KAAKstB,qBACHttB,KAAKgjB,cACLiL,EACAI,EACArX,IAIAhX,KAAK8B,IAAI,sBAA2BusB,GACtCruB,KAAKwC,IAAI,mBAAuB6rB,GAE9BruB,KAAK8B,IAAI,wBAA6BmsB,IACxCjuB,KAAKwC,IAAI,qBAAyByrB,GAClCjuB,KAAKwC,IAAI,OAAQxC,KAAK0lB,WAAW,IAGhC+I,GACAzuB,KAAK8B,IAAI,oBACT,IAAAwW,QAAOtY,KAAK8B,IAAI,kBAAsB2sB,IAEvCzuB,KAAKwC,IAAI,iBAAqBisB,GAG5BzuB,KAAKkV,iBAAmBqZ,GAC1BvuB,KAAKsnB,mBAEPtnB,KAAKsjB,mBAAgBrf,CACvB,CAWAkR,mBAAmBhN,EAAUumB,EAAqB1I,GAChD7d,OAAwBlE,IAAbkE,EAAyBA,EAAW,IAC/C,MAAMwmB,EAAYD,GAAuB,EAEnCL,EAAcruB,KAAK8kB,aAAatN,SAASxX,KAAKkjB,iBAC9ClM,EAAOhX,KAAKmoB,iBAAiBkG,GAC7BJ,EAAgBjuB,KAAK8kB,aAAa7hB,WACtCjD,KAAKijB,kBACL0L,EACA3X,GAEIyX,EAAYzuB,KAAK8kB,aAAa9lB,OAClCgB,KAAKgjB,cACLiL,EACAjX,GACA,EACAhX,KAAKstB,qBACHttB,KAAKgjB,cACLiL,EACAI,EACArX,IAIJ,GAAiB,IAAb7O,IAAmBnI,KAAKsjB,cAK1B,OAJAtjB,KAAKijB,kBAAoBgL,EACzBjuB,KAAKkjB,gBAAkBmL,EACvBruB,KAAKgjB,cAAgByL,OACrBzuB,KAAKsoB,oBAIPtC,EAASA,IAAwB,IAAb7d,EAAiBnI,KAAKsjB,mBAAgBrf,GAC1DjE,KAAKsjB,mBAAgBrf,EAGnBjE,KAAK4F,kBAAoBqoB,GACzBjuB,KAAK4lB,gBAAkByI,GACtBruB,KAAK2lB,sBACL,IAAArN,QAAOtY,KAAK2lB,oBAAqB8I,KAE9BzuB,KAAKkV,gBACPlV,KAAKsnB,mBAGPtnB,KAAKimB,gBAAgB,CACnBzO,SAAU6W,EACVrvB,OAAQyvB,EACRxrB,WAAYgrB,EACZ9lB,SAAUA,EACVoe,OAAQ,EAAAqI,QACR5I,OAAQA,IAGd,CAQA6I,mBACE7uB,KAAKmV,mBAAmB,GAExBnV,KAAKmnB,QAAQ,sBAAsB,EACrC,CAUA2H,eAAe3mB,EAAUumB,EAAqB1I,GAC5CA,EAASA,IAAU,IAAA1T,oBAAmB0T,EAAQhmB,KAAKmR,iBACnDnR,KAAK+uB,uBAAuB5mB,EAAUumB,EAAqB1I,EAC7D,CASA+I,uBAAuB5mB,EAAUumB,EAAqB1I,GACpDhmB,KAAKmnB,QAAQ,uBAAuB,GAEpCnnB,KAAKmV,mBAAmBhN,EAAUumB,EAAqB1I,EACzD,CASAmH,qBAAqBzG,EAAcE,GACjC,MAAM5P,EAAOhX,KAAKmoB,iBAAiBnoB,KAAK4lB,eACxC,OAAO5lB,KAAK8kB,aAAa9lB,OACvB0nB,EACAE,GAAoB5mB,KAAK4F,gBACzBoR,EAEJ,CAWAgY,mBAAmBC,EAAYN,GAC7B,MAAMO,EAAYlvB,KAAK6mB,qBAAqBoI,GAC5C,OAAOjvB,KAAK4pB,qBACV5pB,KAAK4qB,yBAAyBsE,EAAWP,GAE7C,CAWA/D,yBAAyBhE,EAAkB+H,GACzCA,EAAYA,GAAa,EACzB,MAAM3X,EAAOhX,KAAKmoB,iBAAiBnoB,KAAK4lB,eAExC,OAAO5lB,KAAK8kB,aAAa7hB,WAAW2jB,EAAkB+H,EAAW3X,EACnE,EAOF,SAASmP,EAAkBnX,EAAUmgB,GACnCzW,YAAW,WACT1J,EAASmgB,EACX,GAAG,EACL,CAMO,SAAS1K,EAAuBjkB,GACrC,QAAuByD,IAAnBzD,EAAQwC,OAAsB,CAChC,MAAMosB,OAC+BnrB,IAAnCzD,EAAQ6uB,wBACJ7uB,EAAQ6uB,uBAEd,OAAO,IAAAC,cAAa9uB,EAAQwC,OAAQxC,EAAQ+uB,oBAAqBH,EACnE,CAEA,MAAMtM,GAAa,IAAAD,kBAAiBriB,EAAQsiB,WAAY,aACxD,IAA2B,IAAvBtiB,EAAQgvB,YAAuB1M,EAAW2M,WAAY,CACxD,MAAMzsB,EAAS8f,EAAWrd,YAAYoE,QAGtC,OAFA7G,EAAO,IAAMwpB,IACbxpB,EAAO,GAAKwpB,KACL,IAAA8C,cAAatsB,GAAQ,GAAO,EACrC,CAEA,OAAO,MACT,CAOO,SAAS4gB,EAA2BpjB,GACzC,IAAIkkB,EACAZ,EACAE,EAOJ,IAAIxkB,OACkByE,IAApBzD,EAAQhB,QAAwBgB,EAAQhB,QAAU+iB,EAEhDuH,OACkB7lB,IAApBzD,EAAQspB,QAAwBtpB,EAAQspB,QAPnB,GASvB,MAAM5F,OACmBjgB,IAAvBzD,EAAQ0jB,WAA2B1jB,EAAQ0jB,WATnB,EAWpBsL,OACmBvrB,IAAvBzD,EAAQgvB,YAA2BhvB,EAAQgvB,WAEvCJ,OACmCnrB,IAAvCzD,EAAQkvB,4BACJlvB,EAAQkvB,2BAGRC,OACuB1rB,IAA3BzD,EAAQmvB,gBAA+BnvB,EAAQmvB,eAE3C7M,GAAa,IAAAD,kBAAiBriB,EAAQsiB,WAAY,aAClD8M,EAAa9M,EAAWrd,YAC9B,IAAI8pB,EAAsB/uB,EAAQ+uB,oBAC9BvsB,EAASxC,EAAQwC,OAMrB,GALKwsB,GAAexsB,IAAU8f,EAAW2M,aACvCF,GAAsB,EACtBvsB,EAAS4sB,QAGiB3rB,IAAxBzD,EAAQ4jB,YAA2B,CACrC,MAAMA,EAAc5jB,EAAQ4jB,YAC5BN,EAAgBM,EAAY5kB,GAC5BwkB,OAC2B/f,IAAzBmgB,EAAY0F,GACR1F,EAAY0F,GACZ1F,EAAYA,EAAYnjB,OAAS,GAGrCyjB,EADElkB,EAAQ2pB,qBACa,IAAA0F,yBACrBzL,EACAgL,GACCG,GAAuBvsB,EACxB2sB,IAGqB,IAAAG,wBACrBhM,EACAE,EACAoL,GACCG,GAAuBvsB,EACxB2sB,EAGN,KAAO,CAEL,MAKMI,GALQH,EAGVtnB,KAAKmiB,KAAI,IAAArI,UAASwN,IAAa,IAAA1rB,WAAU0rB,IADxC,IAAM,EAAAI,gBAAA,QAA2BlN,EAAWmN,oBAIxC,EAAAC,kBAAoB5nB,KAAKuiB,IA/DV,EA+DiCtI,GAEnD4N,EACJJ,EACAznB,KAAKuiB,IAnEiB,EADH,GAoE0BtI,GAG/CuB,EAAgBtjB,EAAQsjB,mBACF7f,IAAlB6f,EACFtkB,EAAU,EAEVskB,EAAgBiM,EAAuBznB,KAAKuiB,IAAI3G,EAAY1kB,GAI9DwkB,EAAgBxjB,EAAQwjB,mBACF/f,IAAlB+f,IAGEA,OAFoB/f,IAApBzD,EAAQspB,aACoB7lB,IAA1BzD,EAAQsjB,cACMA,EAAgBxb,KAAKuiB,IAAI3G,EAAY4F,GAErCiG,EAAuBznB,KAAKuiB,IAAI3G,EAAY4F,GAG9CqG,GAKpBrG,EACEtqB,EACA8I,KAAKijB,MACHjjB,KAAKqZ,IAAImC,EAAgBE,GAAiB1b,KAAKqZ,IAAIuC,IAEvDF,EAAgBF,EAAgBxb,KAAKuiB,IAAI3G,EAAY4F,EAAUtqB,GAG7DklB,EADElkB,EAAQ2pB,qBACa,IAAAiG,mBACrBlM,EACAJ,EACAE,EACAoL,GACCG,GAAuBvsB,EACxB2sB,IAGqB,IAAAG,wBACrBhM,EACAE,EACAoL,GACCG,GAAuBvsB,EACxB2sB,EAGN,CACA,MAAO,CACLhL,WAAYD,EACZZ,cAAeA,EACfE,cAAeA,EACfxkB,QAASA,EACT0kB,WAAYA,EAEhB,CAMO,SAASW,EAAyBrkB,GAGvC,QAD6ByD,IAA3BzD,EAAQ6vB,gBAA+B7vB,EAAQ6vB,eAC7B,CAClB,MAAMC,EAAoB9vB,EAAQ8vB,kBAClC,YAA0BrsB,IAAtBqsB,IAAyD,IAAtBA,GAC9B,IAAAC,qBACwB,IAAtBD,EACF,OAC+B,iBAAtBA,GACT,IAAAE,eAAcF,GAEhB,MACT,CACA,OAAO,EAAAG,OACT,CAOO,SAASvJ,EAAgBb,GAC9B,QAAIA,EAAUI,cAAgBJ,EAAUK,gBACjC,YAAiBL,EAAUI,aAAcJ,EAAUK,iBAItDL,EAAUM,mBAAqBN,EAAUO,kBAGzCP,EAAUS,iBAAmBT,EAAUY,eAI7C,CAUA,SAASgE,EAAkBhc,EAAY+H,EAAMxL,EAAUvI,EAAYuU,GAEjE,MAAMyU,EAAW3jB,KAAK2gB,KAAKzR,GAC3B,IAAI0U,EAAW5jB,KAAK4gB,KAAK1R,GACrBoV,EAAO3d,EAAW,GAAKgd,EAAWhd,EAAW,GAAKid,EAClDW,EAAO5d,EAAW,GAAKgd,EAAWhd,EAAW,GAAKid,EACtDU,IAAS5V,EAAK,GAAK,EAAIxL,EAAS,IAAMvI,EACtC4pB,IAASrhB,EAAS,GAAKwL,EAAK,GAAK,GAAK/T,EAGtCipB,GAAYA,EAIZ,MAAO,CAHSU,EAAOX,EAAWY,EAAOX,EACzBW,EAAOZ,EAAWW,EAAOV,EAG3C,CAEA,mFC9kEA,SACEwE,UAAW,EACXC,YAAa,gFCFf,SACEC,OAAQ,SACRC,WAAY,aACZC,SAAU,oDCGL,SAASC,EAAaC,EAAUC,EAAQC,GAC7C,IAAIC,EAAKC,EACTF,EAAaA,GAAcG,EAC3B,IAAIC,EAAM,EACNC,EAAOP,EAAS/vB,OAChBuwB,GAAQ,EAEZ,KAAOF,EAAMC,GAGXJ,EAAMG,GAAQC,EAAOD,GAAQ,GAC7BF,GAAOF,EAAWF,EAASG,GAAMF,GAE7BG,EAAM,EAERE,EAAMH,EAAM,GAGZI,EAAOJ,EACPK,GAASJ,GAKb,OAAOI,EAAQF,GAAOA,CACxB,CASO,SAASD,EAAUI,EAAGC,GAC3B,OAAOD,EAAIC,EAAI,EAAID,EAAIC,GAAK,EAAI,CAClC,CAyBO,SAAStG,EAAkB5pB,EAAKnC,EAAQsvB,GAC7C,MAAMvsB,EAAIZ,EAAIP,OACd,GAAIO,EAAI,IAAMnC,EACZ,OAAO,EACF,GAAIA,GAAUmC,EAAIY,EAAI,GAC3B,OAAOA,EAAI,EAEb,IAAIrB,EACJ,GAAI4tB,EAAY,GACd,IAAK5tB,EAAI,EAAGA,EAAIqB,IAAKrB,EACnB,GAAIS,EAAIT,GAAK1B,EACX,OAAO0B,EAAI,OAGV,GAAI4tB,EAAY,GACrB,IAAK5tB,EAAI,EAAGA,EAAIqB,IAAKrB,EACnB,GAAIS,EAAIT,IAAM1B,EACZ,OAAO0B,OAIX,IAAKA,EAAI,EAAGA,EAAIqB,IAAKrB,EAAG,CACtB,GAAIS,EAAIT,IAAM1B,EACZ,OAAO0B,EACF,GAAIS,EAAIT,GAAK1B,EAClB,MAAyB,mBAAdsvB,EACLA,EAAUtvB,EAAQmC,EAAIT,EAAI,GAAIS,EAAIT,IAAM,EACnCA,EAAI,EAENA,EACES,EAAIT,EAAI,GAAK1B,EAASA,EAASmC,EAAIT,GACrCA,EAAI,EAENA,CAEX,CAEF,OAAOqB,EAAI,CACb,CAOO,SAASuvB,EAAgBnwB,EAAKkG,EAAOM,GAC1C,KAAON,EAAQM,GAAK,CAClB,MAAM4pB,EAAMpwB,EAAIkG,GAChBlG,EAAIkG,GAASlG,EAAIwG,GACjBxG,EAAIwG,GAAO4pB,IACTlqB,IACAM,CACJ,CACF,CAOO,SAASzG,EAAOC,EAAKqwB,GAC1B,MAAMC,EAAYnoB,MAAMC,QAAQioB,GAAQA,EAAO,CAACA,GAC1C5wB,EAAS6wB,EAAU7wB,OACzB,IAAK,IAAIF,EAAI,EAAGA,EAAIE,EAAQF,IAC1BS,EAAIA,EAAIP,QAAU6wB,EAAU/wB,EAEhC,CAQO,SAASsB,EAAOb,EAAKuwB,GAC1B,MAAMhxB,EAAIS,EAAIwwB,QAAQD,GAChBP,EAAQzwB,GAAK,EAInB,OAHIywB,GACFhwB,EAAIS,OAAOlB,EAAG,GAETywB,CACT,CAOO,SAASlZ,EAAO2Z,EAAMC,GAC3B,MAAMC,EAAOF,EAAKhxB,OAClB,GAAIkxB,IAASD,EAAKjxB,OAChB,OAAO,EAET,IAAK,IAAIF,EAAI,EAAGA,EAAIoxB,EAAMpxB,IACxB,GAAIkxB,EAAKlxB,KAAOmxB,EAAKnxB,GACnB,OAAO,EAGX,OAAO,CACT,CASO,SAASqxB,EAAW5wB,EAAK6wB,GAC9B,MAAMpxB,EAASO,EAAIP,OACb2wB,EAAMjoB,MAAMnI,EAAIP,QACtB,IAAIF,EACJ,IAAKA,EAAI,EAAGA,EAAIE,EAAQF,IACtB6wB,EAAI7wB,GAAK,CAACV,MAAOU,EAAG4a,MAAOna,EAAIT,IAKjC,IAHA6wB,EAAIU,MAAK,SAAUb,EAAGC,GACpB,OAAOW,EAAWZ,EAAE9V,MAAO+V,EAAE/V,QAAU8V,EAAEpxB,MAAQqxB,EAAErxB,KACrD,IACKU,EAAI,EAAGA,EAAIS,EAAIP,OAAQF,IAC1BS,EAAIT,GAAK6wB,EAAI7wB,GAAG4a,KAEpB,CAQO,SAAS4W,EAAS/wB,EAAKgxB,EAAMC,GAClC,MAAMC,EAAUF,GAAQnB,EACxB,OAAO7vB,EAAImxB,OAAM,SAAUC,EAAYvyB,GACrC,GAAc,IAAVA,EACF,OAAO,EAET,MAAMwyB,EAAMH,EAAQlxB,EAAInB,EAAQ,GAAIuyB,GACpC,QAASC,EAAM,GAAMJ,GAAkB,IAARI,EACjC,GACF,+RC3MO,SAAS/oB,EAAOgpB,EAAWC,GAChC,IAAKD,EACH,MAAM,IAAI,UAAeC,EAE7B,wICGO,SAASzD,EAAatsB,EAAQgwB,EAAY5D,GAC/C,OAAO,SASKpwB,EAAQiE,EAAY+T,EAAMgX,EAAUT,GAC5C,IAAKvuB,EACH,OAEF,IAAKiE,IAAe+vB,EAClB,OAAOh0B,EAET,MAAMi0B,EAAYD,EAAa,EAAIhc,EAAK,GAAK/T,EACvCiwB,EAAaF,EAAa,EAAIhc,EAAK,GAAK/T,EACxCkwB,EAAS5F,EAAcA,EAAY,GAAK,EACxC6F,EAAS7F,EAAcA,EAAY,GAAK,EAC9C,IAAI1L,EAAO7e,EAAO,GAAKiwB,EAAY,EAAIE,EACnCrR,EAAO9e,EAAO,GAAKiwB,EAAY,EAAIE,EACnCpR,EAAO/e,EAAO,GAAKkwB,EAAa,EAAIE,EACpCpR,EAAOhf,EAAO,GAAKkwB,EAAa,EAAIE,EAIpCvR,EAAOC,IACTD,GAAQC,EAAOD,GAAQ,EACvBC,EAAOD,GAELE,EAAOC,IACTD,GAAQC,EAAOD,GAAQ,EACvBC,EAAOD,GAGT,IAAIna,GAAI,IAAA0jB,OAAMtsB,EAAO,GAAI6iB,EAAMC,GAC3Bja,GAAI,IAAAyjB,OAAMtsB,EAAO,GAAI+iB,EAAMC,GAG/B,GAAIgM,GAAYoB,GAAUnsB,EAAY,CACpC,MAAM6qB,EAAQ,GAAK7qB,EACnB2E,IACGkmB,EAAQxlB,KAAKqZ,IAAI,EAAIrZ,KAAKmiB,IAAI,EAAG5I,EAAO7iB,EAAO,IAAM8uB,GACtDA,EAAQxlB,KAAKqZ,IAAI,EAAIrZ,KAAKmiB,IAAI,EAAGzrB,EAAO,GAAK8iB,GAAQgM,GACvDjmB,IACGimB,EAAQxlB,KAAKqZ,IAAI,EAAIrZ,KAAKmiB,IAAI,EAAG1I,EAAO/iB,EAAO,IAAM8uB,GACtDA,EAAQxlB,KAAKqZ,IAAI,EAAIrZ,KAAKmiB,IAAI,EAAGzrB,EAAO,GAAKgjB,GAAQ8L,EACzD,CAEA,MAAO,CAAClmB,EAAGC,EAEf,CACF,CAMO,SAASwrB,EAAKr0B,GACnB,OAAOA,CACT,oOCzDA,MAAMs0B,EAAgB,oDAQhBC,EAAkB,4BAQjB,SAASC,EAASC,GACvB,MAAqB,iBAAVA,EACFA,EAEF1lB,EAAS0lB,EAClB,CAOA,SAASC,EAAUD,GACjB,MAAME,EAAKvqB,SAASgC,cAAc,OAElC,GADAuoB,EAAGpoB,MAAMkoB,MAAQA,EACM,KAAnBE,EAAGpoB,MAAMkoB,MAAc,CACzBrqB,SAASwqB,KAAK9nB,YAAY6nB,GAC1B,MAAME,EAAM9a,iBAAiB4a,GAAIF,MAEjC,OADArqB,SAASwqB,KAAKE,YAAYH,GACnBE,CACT,CACA,MAAO,EACT,CAMO,MAAME,EAAa,WASxB,MAKMC,EAAQ,CAAC,EAKf,IAAIC,EAAY,EAEhB,OAAO,SAKKC,GACR,IAAIT,EACJ,GAAIO,EAAMrW,eAAeuW,GACvBT,EAAQO,EAAME,OACT,CACL,GAAID,GAtBa,KAsBgB,CAC/B,IAAIlzB,EAAI,EACR,IAAK,MAAMwF,KAAOytB,EACE,IAAP,EAANjzB,cACIizB,EAAMztB,KACX0tB,EAGR,CACAR,EA4BR,SAA6BS,GAC3B,IAAIC,EAAGC,EAAG1C,EAAGD,EAAGgC,EAEZF,EAAgBc,KAAKH,KACvBA,EAAIR,EAAUQ,IAGhB,GAAIZ,EAAce,KAAKH,GAAI,CAEzB,MAAM9xB,EAAI8xB,EAAEjzB,OAAS,EACrB,IAAIqzB,EAEFA,EADElyB,GAAK,EACH,EAEA,EAEN,MAAMmyB,EAAiB,IAANnyB,GAAiB,IAANA,EAC5B+xB,EAAI7a,SAAS4a,EAAEM,OAAO,EAAI,EAAIF,EAAGA,GAAI,IACrCF,EAAI9a,SAAS4a,EAAEM,OAAO,EAAI,EAAIF,EAAGA,GAAI,IACrC5C,EAAIpY,SAAS4a,EAAEM,OAAO,EAAI,EAAIF,EAAGA,GAAI,IAEnC7C,EADE8C,EACEjb,SAAS4a,EAAEM,OAAO,EAAI,EAAIF,EAAGA,GAAI,IAEjC,IAEG,GAALA,IACFH,GAAKA,GAAK,GAAKA,EACfC,GAAKA,GAAK,GAAKA,EACf1C,GAAKA,GAAK,GAAKA,EACX6C,IACF9C,GAAKA,GAAK,GAAKA,IAGnBgC,EAAQ,CAACU,EAAGC,EAAG1C,EAAGD,EAAI,IACxB,MAAWyC,EAAEO,WAAW,UAEtBhB,EAAQS,EAAErqB,MAAM,GAAI,GAAG6qB,MAAM,KAAK1rB,IAAI2rB,QACtCC,EAAUnB,IACDS,EAAEO,WAAW,SAEtBhB,EAAQS,EAAErqB,MAAM,GAAI,GAAG6qB,MAAM,KAAK1rB,IAAI2rB,QACtClB,EAAMhyB,KAAK,GACXmzB,EAAUnB,KAEV,IAAA3pB,SAAO,EAAO,IAEhB,OAAO2pB,CACT,CA3EgBoB,CAAoBX,GAC5BF,EAAME,GAAKT,IACTQ,CACJ,CACA,OAAOR,CAEX,CACD,CA/CyB,GAwDnB,SAASqB,EAAQrB,GACtB,OAAI9pB,MAAMC,QAAQ6pB,GACTA,EAEFM,EAAWN,EACpB,CA6DO,SAASmB,EAAUnB,GAKxB,OAJAA,EAAM,IAAK,IAAAnI,OAAOmI,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,IAAK,IAAAnI,OAAOmI,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,IAAK,IAAAnI,OAAOmI,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,IAAK,IAAAnI,OAAMmI,EAAM,GAAI,EAAG,GACvBA,CACT,CAMO,SAAS1lB,EAAS0lB,GACvB,IAAIU,EAAIV,EAAM,GACVU,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,GAElB,IAAIC,EAAIX,EAAM,GACVW,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,GAElB,IAAI1C,EAAI+B,EAAM,GACV/B,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,GAGlB,MAAO,QAAUyC,EAAI,IAAMC,EAAI,IAAM1C,EAAI,UADlBztB,IAAbwvB,EAAM,GAAmB,EAAInrB,KAAKysB,MAAiB,IAAXtB,EAAM,IAAY,KACjB,GACrD,CAMO,SAASuB,EAAcd,GAI5B,OAHIX,EAAgB0B,KAAKf,KACvBA,EAAIR,EAAUQ,IAETZ,EAAc2B,KAAKf,IAAMA,EAAEO,WAAW,UAAYP,EAAEO,WAAW,OACxE,4GCtNA,MAAMS,EAAS,CACbC,KAAM,EACN/b,KAAM,EACN/T,MAAO,EACPguB,KAAM,GAMR,IAAI+B,EAAQF,EAAOC,KASZ,SAASE,EAASC,GACvBF,EAAQF,EAAOI,EACjB,CAEO,SAAS3T,KAAOmE,GACjBsP,EAAQF,EAAOC,MAGnBI,QAAQ5T,OAAOmE,EACjB,CAEO,SAAS1M,KAAQ0M,GAClBsP,EAAQF,EAAO9b,MAGnBmc,QAAQnc,QAAQ0M,EAClB,CAEO,SAASzgB,KAASygB,GACnBsP,EAAQF,EAAO7vB,OAGnBkwB,QAAQlwB,SAASygB,EACnB,6TCPA,MAAM0P,UAAoB,UAIxB51B,YAAYY,GACVA,EAAUA,GAAoB,CAAC,EAE/BT,MAAM,CACJnB,QAASwK,SAASgC,cAAc,OAChCgK,OAAQ5U,EAAQ4U,OAChB/V,OAAQmB,EAAQnB,SAOlBW,KAAKy1B,WAAarsB,SAASgC,cAAc,MAMzCpL,KAAK01B,gBACmBzxB,IAAtBzD,EAAQm1B,WAA0Bn1B,EAAQm1B,UAM5C31B,KAAK41B,eAAiB51B,KAAK01B,WAM3B11B,KAAK61B,0BAA+C5xB,IAAxBzD,EAAQs1B,YAMpC91B,KAAK+1B,kBACqB9xB,IAAxBzD,EAAQs1B,aAA4Bt1B,EAAQs1B,YAEzC91B,KAAK+1B,eACR/1B,KAAK01B,YAAa,GAGpB,MAAMrqB,OACkBpH,IAAtBzD,EAAQ6K,UAA0B7K,EAAQ6K,UAAY,iBAElD2qB,OACiB/xB,IAArBzD,EAAQw1B,SAAyBx1B,EAAQw1B,SAAW,eAEhDC,OACwBhyB,IAA5BzD,EAAQy1B,gBACJz1B,EAAQy1B,gBACR5qB,EAAY,UAEZ6qB,OACsBjyB,IAA1BzD,EAAQ01B,cAA8B11B,EAAQ01B,cAAgB,IAE1DC,OAC0BlyB,IAA9BzD,EAAQ21B,kBACJ31B,EAAQ21B,kBACR9qB,EAAY,YAEW,iBAAlB6qB,GAKTl2B,KAAKo2B,eAAiBhtB,SAASgC,cAAc,QAC7CpL,KAAKo2B,eAAeC,YAAcH,EAClCl2B,KAAKo2B,eAAe/qB,UAAY8qB,GAEhCn2B,KAAKo2B,eAAiBF,EAGxB,MAAMI,OAA0BryB,IAAlBzD,EAAQ81B,MAAsB91B,EAAQ81B,MAAQ,IAEvC,iBAAVA,GAKTt2B,KAAKu2B,OAASntB,SAASgC,cAAc,QACrCpL,KAAKu2B,OAAOF,YAAcC,EAC1Bt2B,KAAKu2B,OAAOlrB,UAAY4qB,GAExBj2B,KAAKu2B,OAASD,EAGhB,MAAME,EACJx2B,KAAK+1B,eAAiB/1B,KAAK01B,WAAa11B,KAAKo2B,eAAiBp2B,KAAKu2B,OAMrEv2B,KAAKy2B,cAAgBrtB,SAASgC,cAAc,UAC5CpL,KAAKy2B,cAAcC,aAAa,OAAQ,UACxC12B,KAAKy2B,cAAcC,aAAa,gBAAiBC,QAAQ32B,KAAK01B,aAC9D11B,KAAKy2B,cAAcG,MAAQZ,EAC3Bh2B,KAAKy2B,cAAc3qB,YAAY0qB,GAE/Bx2B,KAAKy2B,cAAchpB,iBACjB,gBACAzN,KAAK62B,aAAavyB,KAAKtE,OACvB,GAGF,MAAM82B,EACJzrB,EACA,IACA,EAAA0rB,mBACA,IACA,EAAAC,eACCh3B,KAAK01B,YAAc11B,KAAK+1B,aAAe,IAAM,EAAAkB,gBAAkB,KAC/Dj3B,KAAK+1B,aAAe,GAAK,qBACtBn3B,EAAUoB,KAAKpB,QACrBA,EAAQyM,UAAYyrB,EACpBl4B,EAAQkN,YAAY9L,KAAKy2B,eACzB73B,EAAQkN,YAAY9L,KAAKy1B,YAOzBz1B,KAAKk3B,sBAAwB,GAM7Bl3B,KAAKm3B,kBAAmB,CAC1B,CAQAC,2BAA2BhmB,GAKzB,MAAMimB,EAAS,CAAC,EAMVC,EAAsB,GAE5B,IAAIxB,GAAc,EAClB,MAAMlkB,EAAmBR,EAAWQ,iBACpC,IAAK,IAAI7Q,EAAI,EAAGC,EAAK4Q,EAAiB3Q,OAAQF,EAAIC,IAAMD,EAAG,CACzD,MAAMw2B,EAAa3lB,EAAiB7Q,GACpC,KAAK,IAAAy2B,QAAOD,EAAYnmB,EAAWiG,WACjC,SAGF,MAAMjY,EACJm4B,EACF,MAAErlB,YACF,IAAK9S,EACH,SAGF,MAAMq4B,EAAoBr4B,EAAOs4B,kBACjC,IAAKD,EACH,SAGF,MAAM34B,EAAe24B,EAAkBrmB,GACvC,GAAKtS,EAOL,GAHAg3B,EACEA,IAAuD,IAAxC12B,EAAOu4B,6BAEpBhuB,MAAMC,QAAQ9K,GAChB,IAAK,IAAIyoB,EAAI,EAAGC,EAAK1oB,EAAamC,OAAQsmB,EAAIC,IAAMD,EAC5CzoB,EAAayoB,KAAM8P,IACvBC,EAAoB71B,KAAK3C,EAAayoB,IACtC8P,EAAOv4B,EAAayoB,KAAM,QAIxBzoB,KAAgBu4B,IACpBC,EAAoB71B,KAAK3C,GACzBu4B,EAAOv4B,IAAgB,EAG7B,CAIA,OAHKkB,KAAK61B,sBACR71B,KAAK43B,eAAe9B,GAEfwB,CACT,CAMAO,eAAezmB,GACb,IAAKA,EAKH,YAJIpR,KAAKm3B,mBACPn3B,KAAKpB,QAAQ2M,MAAMusB,QAAU,OAC7B93B,KAAKm3B,kBAAmB,IAK5B,MAAMr4B,EAAekB,KAAKo3B,2BAA2BhmB,GAE/CU,EAAUhT,EAAamC,OAAS,EAMtC,GALIjB,KAAKm3B,kBAAoBrlB,IAC3B9R,KAAKpB,QAAQ2M,MAAMusB,QAAUhmB,EAAU,GAAK,OAC5C9R,KAAKm3B,iBAAmBrlB,KAGtB,IAAAwG,QAAOxZ,EAAckB,KAAKk3B,uBAA9B,EAIA,IAAAa,gBAAe/3B,KAAKy1B,YAGpB,IAAK,IAAI10B,EAAI,EAAGC,EAAKlC,EAAamC,OAAQF,EAAIC,IAAMD,EAAG,CACrD,MAAMnC,EAAUwK,SAASgC,cAAc,MACvCxM,EAAQo5B,UAAYl5B,EAAaiC,GACjCf,KAAKy1B,WAAW3pB,YAAYlN,EAC9B,CAEAoB,KAAKk3B,sBAAwBp4B,CAX7B,CAYF,CAMA+3B,aAAanpB,GACXA,EAAMmM,iBACN7Z,KAAKi4B,gBACLj4B,KAAK41B,eAAiB51B,KAAK01B,UAC7B,CAKAuC,gBACEj4B,KAAKpB,QAAQs5B,UAAUC,OAAO,EAAAlB,iBAC1Bj3B,KAAK01B,YACP,IAAA0C,aAAYp4B,KAAKo2B,eAAgBp2B,KAAKu2B,SAEtC,IAAA6B,aAAYp4B,KAAKu2B,OAAQv2B,KAAKo2B,gBAEhCp2B,KAAK01B,YAAc11B,KAAK01B,WACxB11B,KAAKy2B,cAAcC,aAAa,gBAAiBC,QAAQ32B,KAAK01B,YAChE,CAOA2C,iBACE,OAAOr4B,KAAK+1B,YACd,CAOA6B,eAAe9B,GACT91B,KAAK+1B,eAAiBD,IAG1B91B,KAAK+1B,aAAeD,EACpB91B,KAAKpB,QAAQs5B,UAAUC,OAAO,oBAC1Bn4B,KAAK41B,gBACP51B,KAAKi4B,gBAET,CASAK,aAAa3C,GACX31B,KAAK41B,eAAiBD,EACjB31B,KAAK+1B,cAAgB/1B,KAAK01B,aAAeC,GAG9C31B,KAAKi4B,eACP,CAQAM,eACE,OAAOv4B,KAAK01B,UACd,CAOAtgB,OAAOojB,GACLx4B,KAAK63B,eAAeW,EAASpnB,WAC/B,EAGF,mRCzUA,MAAMqnB,UAAgB,UAIpB74B,YAAYY,GACVT,QAEA,MAAMnB,EAAU4B,EAAQ5B,SACpBA,GAAY4B,EAAQnB,QAAWT,EAAQ2M,MAAMM,gBAC/CjN,EAAQ2M,MAAMM,cAAgB,QAOhC7L,KAAKpB,QAAUA,GAAoB,KAMnCoB,KAAK04B,QAAU,KAMf14B,KAAKga,KAAO,KAMZha,KAAK+E,aAAe,GAEhBvE,EAAQ4U,SACVpV,KAAKoV,OAAS5U,EAAQ4U,QAGpB5U,EAAQnB,QACVW,KAAK6O,UAAUrO,EAAQnB,OAE3B,CAKAyD,mBACE,IAAAwS,YAAWtV,KAAKpB,SAChBmB,MAAM+C,iBACR,CAOAgR,SACE,OAAO9T,KAAKga,IACd,CAUArM,OAAO3E,GACDhJ,KAAKga,OACP,IAAA1E,YAAWtV,KAAKpB,SAElB,IAAK,IAAImC,EAAI,EAAGC,EAAKhB,KAAK+E,aAAa9D,OAAQF,EAAIC,IAAMD,GACvD,IAAAuE,eAActF,KAAK+E,aAAahE,IAIlC,GAFAf,KAAK+E,aAAa9D,OAAS,EAC3BjB,KAAKga,KAAOhR,EACRA,EAAK,EACQhJ,KAAK04B,QAChB14B,KAAK04B,QACL1vB,EAAI2J,gCACD7G,YAAY9L,KAAKpB,SACpBoB,KAAKoV,SAAW,EAAAwG,MAClB5b,KAAK+E,aAAatD,MAChB,IAAAmU,QAAO5M,EAAK,qBAAyBhJ,KAAKoV,OAAQpV,OAGtDgJ,EAAIoM,QACN,CACF,CAOAA,OAAOojB,GAAW,CAWlB3pB,UAAUxP,GACRW,KAAK04B,QACe,iBAAXr5B,EAAsB+J,SAASC,eAAehK,GAAUA,CACnE,EAGF,yPC/HA,MAAMs5B,UAAe,UAInB/4B,YAAYY,GACVA,EAAUA,GAAoB,CAAC,EAE/BT,MAAM,CACJnB,QAASwK,SAASgC,cAAc,OAChCgK,OAAQ5U,EAAQ4U,OAChB/V,OAAQmB,EAAQnB,SAGlB,MAAMgM,OACkBpH,IAAtBzD,EAAQ6K,UAA0B7K,EAAQ6K,UAAY,YAElDirB,OAA0BryB,IAAlBzD,EAAQ81B,MAAsB91B,EAAQ81B,MAAQ,IAEtDsC,OACyB30B,IAA7BzD,EAAQo4B,iBACJp4B,EAAQo4B,iBACR,aAMN54B,KAAKu2B,OAAS,KAEO,iBAAVD,GACTt2B,KAAKu2B,OAASntB,SAASgC,cAAc,QACrCpL,KAAKu2B,OAAOlrB,UAAYutB,EACxB54B,KAAKu2B,OAAOF,YAAcC,IAE1Bt2B,KAAKu2B,OAASD,EACdt2B,KAAKu2B,OAAO2B,UAAUrP,IAAI+P,IAG5B,MAAM5C,EAAWx1B,EAAQw1B,SAAWx1B,EAAQw1B,SAAW,iBAEjDva,EAASrS,SAASgC,cAAc,UACtCqQ,EAAOpQ,UAAYA,EAAY,SAC/BoQ,EAAOib,aAAa,OAAQ,UAC5Bjb,EAAOmb,MAAQZ,EACfva,EAAO3P,YAAY9L,KAAKu2B,QAExB9a,EAAOhO,iBACL,gBACAzN,KAAK62B,aAAavyB,KAAKtE,OACvB,GAGF,MAAM82B,EACJzrB,EAAY,IAAM,EAAA0rB,mBAAqB,IAAM,EAAAC,cACzCp4B,EAAUoB,KAAKpB,QACrBA,EAAQyM,UAAYyrB,EACpBl4B,EAAQkN,YAAY2P,GAEpBzb,KAAK64B,gBAAkBr4B,EAAQs4B,WAAat4B,EAAQs4B,gBAAa70B,EAMjEjE,KAAK+4B,eAAiC90B,IAArBzD,EAAQ2H,SAAyB3H,EAAQ2H,SAAW,IAMrEnI,KAAKg5B,eAAiC/0B,IAArBzD,EAAQy4B,UAAyBz4B,EAAQy4B,SAM1Dj5B,KAAKk5B,eAAYj1B,EAEbjE,KAAKg5B,WACPh5B,KAAKpB,QAAQs5B,UAAUrP,IAAI,EAAAsQ,aAE/B,CAMAtC,aAAanpB,GACXA,EAAMmM,sBACuB5V,IAAzBjE,KAAK64B,gBACP74B,KAAK64B,kBAEL74B,KAAKo5B,aAET,CAKAA,cACE,MACM95B,EADMU,KAAK8T,SACA5C,UACjB,IAAK5R,EAGH,OAEF,MAAMkY,EAAWlY,EAAKsmB,mBACL3hB,IAAbuT,IACExX,KAAK+4B,UAAY,GAAKvhB,GAAY,EAAIlP,KAAK0e,KAAQ,EACrD1nB,EAAKwV,QAAQ,CACX0C,SAAU,EACVrP,SAAUnI,KAAK+4B,UACfxS,OAAQ,EAAAqI,UAGVtvB,EAAKylB,YAAY,GAGvB,CAOA3P,OAAOojB,GACL,MAAMpnB,EAAaonB,EAASpnB,WAC5B,IAAKA,EACH,OAEF,MAAMoG,EAAWpG,EAAWiG,UAAUG,SACtC,GAAIA,GAAYxX,KAAKk5B,UAAW,CAC9B,MAAMpN,EAAY,UAAYtU,EAAW,OACzC,GAAIxX,KAAKg5B,UAAW,CAClB,MAAMrlB,EAAW3T,KAAKpB,QAAQs5B,UAAUvkB,SAAS,EAAAwlB,cAC5CxlB,GAAyB,IAAb6D,EAEN7D,GAAyB,IAAb6D,GACrBxX,KAAKpB,QAAQs5B,UAAU71B,OAAO,EAAA82B,cAF9Bn5B,KAAKpB,QAAQs5B,UAAUrP,IAAI,EAAAsQ,aAI/B,CACAn5B,KAAKu2B,OAAOhrB,MAAMugB,UAAYA,CAChC,CACA9rB,KAAKk5B,UAAY1hB,CACnB,EAGF,uPCpJA,MAAM6hB,UAAa,UAIjBz5B,YAAYY,GACVA,EAAUA,GAAoB,CAAC,EAE/BT,MAAM,CACJnB,QAASwK,SAASgC,cAAc,OAChC/L,OAAQmB,EAAQnB,SAGlB,MAAMgM,OACkBpH,IAAtBzD,EAAQ6K,UAA0B7K,EAAQ6K,UAAY,UAElD0U,OAA0B9b,IAAlBzD,EAAQuf,MAAsBvf,EAAQuf,MAAQ,EAEtDuZ,OACwBr1B,IAA5BzD,EAAQ84B,gBACJ94B,EAAQ84B,gBACRjuB,EAAY,MAEZkuB,OACyBt1B,IAA7BzD,EAAQ+4B,iBACJ/4B,EAAQ+4B,iBACRluB,EAAY,OAEZmuB,OACoBv1B,IAAxBzD,EAAQg5B,YAA4Bh5B,EAAQg5B,YAAc,IACtDC,OACqBx1B,IAAzBzD,EAAQi5B,aAA6Bj5B,EAAQi5B,aAAe,IAExDC,OACuBz1B,IAA3BzD,EAAQk5B,eAA+Bl5B,EAAQk5B,eAAiB,UAC5DC,OACwB11B,IAA5BzD,EAAQm5B,gBACJn5B,EAAQm5B,gBACR,WAEAC,EAAYxwB,SAASgC,cAAc,UACzCwuB,EAAUvuB,UAAYiuB,EACtBM,EAAUlD,aAAa,OAAQ,UAC/BkD,EAAUhD,MAAQ8C,EAClBE,EAAU9tB,YACe,iBAAhB0tB,EACHpwB,SAASywB,eAAeL,GACxBA,GAGNI,EAAUnsB,iBACR,gBACAzN,KAAK62B,aAAavyB,KAAKtE,KAAM+f,IAC7B,GAGF,MAAM+Z,EAAa1wB,SAASgC,cAAc,UAC1C0uB,EAAWzuB,UAAYkuB,EACvBO,EAAWpD,aAAa,OAAQ,UAChCoD,EAAWlD,MAAQ+C,EACnBG,EAAWhuB,YACe,iBAAjB2tB,EACHrwB,SAASywB,eAAeJ,GACxBA,GAGNK,EAAWrsB,iBACT,gBACAzN,KAAK62B,aAAavyB,KAAKtE,MAAO+f,IAC9B,GAGF,MAAM+W,EACJzrB,EAAY,IAAM,EAAA0rB,mBAAqB,IAAM,EAAAC,cACzCp4B,EAAUoB,KAAKpB,QACrBA,EAAQyM,UAAYyrB,EACpBl4B,EAAQkN,YAAY8tB,GACpBh7B,EAAQkN,YAAYguB,GAMpB95B,KAAK+4B,eAAiC90B,IAArBzD,EAAQ2H,SAAyB3H,EAAQ2H,SAAW,GACvE,CAOA0uB,aAAa9W,EAAOrS,GAClBA,EAAMmM,iBACN7Z,KAAK+5B,aAAaha,EACpB,CAMAga,aAAaha,GACX,MACMzgB,EADMU,KAAK8T,SACA5C,UACjB,IAAK5R,EAGH,OAEF,MAAM06B,EAAc16B,EAAKomB,UACzB,QAAoBzhB,IAAhB+1B,EAA2B,CAC7B,MAAMC,EAAU36B,EAAK0vB,mBAAmBgL,EAAcja,GAClD/f,KAAK+4B,UAAY,GACfz5B,EAAK4V,gBACP5V,EAAKgoB,mBAEPhoB,EAAKwV,QAAQ,CACXvV,KAAM06B,EACN9xB,SAAUnI,KAAK+4B,UACfxS,OAAQ,EAAAqI,WAGVtvB,EAAK4lB,QAAQ+U,EAEjB,CACF,EAGF,2QC3HO,SAASC,EAAS15B,GACvBA,EAAUA,GAAoB,CAAC,EAG/B,MAAMgJ,EAAW,IAAI,gBAEgBvF,IAAjBzD,EAAQjB,MAAqBiB,EAAQjB,OAEvDiK,EAAS/H,KAAK,IAAI,UAAKjB,EAAQ25B,oBAGQl2B,IAAnBzD,EAAQooB,QAAuBpoB,EAAQooB,SAE3Dpf,EAAS/H,KAAK,IAAI,UAAOjB,EAAQ45B,gBASnC,YAL0Bn2B,IAAxBzD,EAAQ65B,aAA4B75B,EAAQ65B,cAE5C7wB,EAAS/H,KAAK,IAAI,UAAYjB,EAAQ85B,qBAGjC9wB,CACT,2cCpBO,SAASqf,EAAI5Z,EAAY8Q,GAG9B,OAFA9Q,EAAW,KAAO8Q,EAAM,GACxB9Q,EAAW,KAAO8Q,EAAM,GACjB9Q,CACT,CASO,SAASsrB,EAAgBtrB,EAAYurB,GAC1C,MAAMrG,EAAIqG,EAAOC,YACXz7B,EAASw7B,EAAOpV,YAChB2C,EAAK/oB,EAAO,GACZgpB,EAAKhpB,EAAO,GAIlB,IAAIoJ,EAHO6G,EAAW,GAGR8Y,EACd,MAAM1f,EAHK4G,EAAW,GAGN+Y,EACL,IAAP5f,GAAmB,IAAPC,IACdD,EAAK,GAEP,MAAMksB,EAAIhsB,KAAKE,KAAKJ,EAAKA,EAAKC,EAAKA,GAKnC,MAAO,CAHG0f,EAAMoM,EAAI/rB,EAAMksB,EAChBtM,EAAMmM,EAAI9rB,EAAMisB,EAG5B,CAcO,SAASoG,EAAiBzrB,EAAY0rB,GAC3C,MAAM5S,EAAK9Y,EAAW,GAChB+Y,EAAK/Y,EAAW,GAChB6Q,EAAQ6a,EAAQ,GAChB3yB,EAAM2yB,EAAQ,GACd1S,EAAKnI,EAAM,GACXoI,EAAKpI,EAAM,GACX8a,EAAK5yB,EAAI,GACT6yB,EAAK7yB,EAAI,GACTI,EAAKwyB,EAAK3S,EACV5f,EAAKwyB,EAAK3S,EACV4S,EACG,IAAP1yB,GAAmB,IAAPC,EACR,GACCD,GAAM2f,EAAKE,GAAM5f,GAAM2f,EAAKE,KAAQ9f,EAAKA,EAAKC,EAAKA,GAAM,GAChE,IAAIT,EAAGC,EAWP,OAVIizB,GAAS,GACXlzB,EAAIqgB,EACJpgB,EAAIqgB,GACK4S,GAAS,GAClBlzB,EAAIgzB,EACJ/yB,EAAIgzB,IAEJjzB,EAAIqgB,EAAK6S,EAAQ1yB,EACjBP,EAAIqgB,EAAK4S,EAAQzyB,GAEZ,CAACT,EAAGC,EACb,CA8BO,SAASkzB,EAAeC,GAC7B,OAAO,SAKK/rB,GACR,OAAOgsB,EAAWhsB,EAAY+rB,EAElC,CACF,CASO,SAASE,EAAoBC,EAAaC,EAASJ,GACxD,MAAMK,GAAoB,IAAAtU,QAAOqU,EAAU,IAAK,KAAO,IACjDxzB,EAAIU,KAAK0T,IAAI,KAAOqf,GACpBC,EAAWN,GAAkB,EAEnC,IAAIO,EAAMjzB,KAAKijB,MAAM3jB,EAAI,MACrBklB,EAAMxkB,KAAKijB,OAAO3jB,EAAU,KAAN2zB,GAAc,IACpCC,GAAM,IAAAC,SAAQ7zB,EAAU,KAAN2zB,EAAmB,GAANzO,EAAUwO,GAEzCE,GAAO,KACTA,EAAM,EACN1O,GAAO,GAGLA,GAAO,KACTA,EAAM,EACNyO,GAAO,GAGT,IAAIG,EAAOH,EAAM,IAWjB,OAVY,IAARzO,GAAqB,IAAR0O,IACfE,GAAQ,KAAM,IAAAC,WAAU7O,EAAK,GAAK,KAExB,IAAR0O,IACFE,GAAQ,KAAM,IAAAC,WAAUH,EAAK,EAAGF,GAAY,KAEpB,IAAtBD,IACFK,GAAQ,IAAMP,EAAYS,OAAOP,EAAoB,EAAI,EAAI,IAGxDK,CACT,CAiCO,SAASG,EAAO5sB,EAAY6sB,EAAUd,GAC3C,OAAI/rB,EACK6sB,EACJC,QAAQ,MAAO9sB,EAAW,GAAGwsB,QAAQT,IACrCe,QAAQ,MAAO9sB,EAAW,GAAGwsB,QAAQT,IAEnC,EACT,CAOO,SAAS1iB,EAAO0jB,EAAaC,GAClC,IAAI3jB,GAAS,EACb,IAAK,IAAIvX,EAAIi7B,EAAY/6B,OAAS,EAAGF,GAAK,IAAKA,EAC7C,GAAIi7B,EAAYj7B,IAAMk7B,EAAYl7B,GAAI,CACpCuX,GAAS,EACT,KACF,CAEF,OAAOA,CACT,CAoBO,SAASsQ,EAAO3Z,EAAYitB,GACjC,MAAMjQ,EAAW3jB,KAAK2gB,IAAIiT,GACpBhQ,EAAW5jB,KAAK4gB,IAAIgT,GACpBt0B,EAAIqH,EAAW,GAAKgd,EAAWhd,EAAW,GAAKid,EAC/CrkB,EAAIoH,EAAW,GAAKgd,EAAWhd,EAAW,GAAKid,EAGrD,OAFAjd,EAAW,GAAKrH,EAChBqH,EAAW,GAAKpH,EACToH,CACT,CAmBO,SAASktB,EAAMltB,EAAYktB,GAGhC,OAFAltB,EAAW,IAAMktB,EACjBltB,EAAW,IAAMktB,EACVltB,CACT,CAOO,SAASmtB,EAAgBC,EAAQC,GACtC,MAAMl0B,EAAKi0B,EAAO,GAAKC,EAAO,GACxBj0B,EAAKg0B,EAAO,GAAKC,EAAO,GAC9B,OAAOl0B,EAAKA,EAAKC,EAAKA,CACxB,CAOO,SAASk0B,EAASF,EAAQC,GAC/B,OAAOh0B,KAAKE,KAAK4zB,EAAgBC,EAAQC,GAC3C,CAUO,SAASE,EAAyBvtB,EAAY0rB,GACnD,OAAOyB,EAAgBntB,EAAYyrB,EAAiBzrB,EAAY0rB,GAClE,CA4BO,SAAS8B,EAAaxtB,EAAY+rB,GACvC,OAAI/rB,EAEAisB,EAAoB,KAAMjsB,EAAW,GAAI+rB,GACzC,IACAE,EAAoB,KAAMjsB,EAAW,GAAI+rB,GAGtC,EACT,CA2BO,SAASC,EAAWhsB,EAAY+rB,GACrC,OAAOa,EAAO5sB,EAAY,WAAY+rB,EACxC,CAWO,SAAS0B,EAAMztB,EAAY6T,GAChC,GAAIA,EAAW6Z,WAAY,CACzB,MAAMC,GAAa,IAAAxa,UAASU,EAAWrd,aACjCo3B,EAAaC,EAAc7tB,EAAY6T,EAAY8Z,GACrDC,IACF5tB,EAAW,IAAM4tB,EAAaD,EAElC,CACA,OAAO3tB,CACT,CAOO,SAAS6tB,EAAc7tB,EAAY6T,EAAYia,GACpD,MAAMC,EAAmBla,EAAWrd,YACpC,IAAIo3B,EAAa,EAUjB,OARE/Z,EAAW6Z,aACV1tB,EAAW,GAAK+tB,EAAiB,IAAM/tB,EAAW,GAAK+tB,EAAiB,MAEzED,EAAoBA,IAAqB,IAAA3a,UAAS4a,GAClDH,EAAav0B,KAAKijB,OACftc,EAAW,GAAK+tB,EAAiB,IAAMD,IAGrCF,CACT,qNChaO,MAAM1D,EAAe,YAQf8D,EAAmB,gBAQnBlG,EAAqB,kBAQrBmG,EAAoB,iBAQpBlG,EAAgB,aAShBC,EAAkB,eAMzBkG,EAAY,IAAIC,OACpB,CACE,qDACA,4CACA,8DACA,gDACA,8EACA,gEACA,mCACAC,KAAK,IACP,KAEIC,EAAsB,CAC1B,QACA,UACA,SACA,OACA,aACA,UASWC,EAAoB,SAAUC,GACzC,MAAMC,EAAQD,EAASC,MAAMN,GAC7B,IAAKM,EACH,OAAO,KAET,MAAMlyB,EAAsC,CAC1CmyB,WAAY,SACZ1mB,KAAM,QACNzL,MAAO,SACPoyB,OAAQ,SACRC,QAAS,UAEX,IAAK,IAAI78B,EAAI,EAAGC,EAAKs8B,EAAoBr8B,OAAQF,EAAIC,IAAMD,EAAG,CAC5D,MAAM4a,EAAQ8hB,EAAM18B,EAAI,QACVkD,IAAV0X,IACFpQ,EAAM+xB,EAAoBv8B,IAAM4a,EAEpC,CAEA,OADApQ,EAAMsyB,SAAWtyB,EAAMuyB,OAAOpJ,MAAM,QAC7BnpB,CACT,6PCpGO,SAAS7E,EAAsBgF,EAAOvH,EAAQ45B,EAAYC,GAE/D,IAAIn3B,EAeJ,OAbEA,EADEk3B,GAAcA,EAAW98B,OAClB88B,EAAWE,QACX,EAAAC,wBACA,IAAIC,gBAAgBzyB,GAAS,IAAKvH,GAAU,KAE5CiF,SAASgC,cAAc,UAE9BM,IACF7E,EAAO6E,MAAQA,GAEbvH,IACF0C,EAAO1C,OAASA,GAIhB0C,EAAOu3B,WAAW,KAAMJ,EAE5B,CAOO,SAASK,EAAcC,GAC5B,MAAMz3B,EAASy3B,EAAQz3B,OACvBA,EAAO6E,MAAQ,EACf7E,EAAO1C,OAAS,EAChBm6B,EAAQC,UAAU,EAAG,EAAG,EAAG,EAC7B,CASO,SAASC,EAAW5/B,GACzB,IAAI8M,EAAQ9M,EAAQoa,YACpB,MAAMzN,EAAQwN,iBAAiBna,GAG/B,OAFA8M,GAAS4N,SAAS/N,EAAMkzB,WAAY,IAAMnlB,SAAS/N,EAAMmzB,YAAa,IAE/DhzB,CACT,CASO,SAASizB,EAAY//B,GAC1B,IAAIuF,EAASvF,EAAQsa,aACrB,MAAM3N,EAAQwN,iBAAiBna,GAG/B,OAFAuF,GAAUmV,SAAS/N,EAAMqzB,UAAW,IAAMtlB,SAAS/N,EAAMszB,aAAc,IAEhE16B,CACT,CAMO,SAASi0B,EAAY0G,EAASC,GACnC,MAAMC,EAASD,EAAQE,WACnBD,GACFA,EAAOE,aAAaJ,EAASC,EAEjC,CAMO,SAASzpB,EAAW6pB,GACzB,OAAOA,GAAQA,EAAKF,WAAaE,EAAKF,WAAWnL,YAAYqL,GAAQ,IACvE,CAKO,SAASpH,EAAeoH,GAC7B,KAAOA,EAAKC,WACVD,EAAKrL,YAAYqL,EAAKC,UAE1B,CAUO,SAASC,EAAgBF,EAAMG,GACpC,MAAMC,EAAcJ,EAAKK,WAEzB,IAAK,IAAIz+B,EAAI,KAAWA,EAAG,CACzB,MAAM0+B,EAAWF,EAAYx+B,GACvB2+B,EAAWJ,EAASv+B,GAG1B,IAAK0+B,IAAaC,EAChB,MAIED,IAAaC,IAKZD,EAMAC,EAOLP,EAAKQ,aAAaD,EAAUD,IAN1BN,EAAKrL,YAAY2L,KACf1+B,GAPFo+B,EAAKrzB,YAAY4zB,GAarB,CACF,2CC1IO,SAAS1f,EAAO4f,GACrB,OAAOt3B,KAAKuiB,IAAI+U,EAAG,EACrB,CAQO,SAAShR,EAAQgR,GACtB,OAAO,EAAI5f,EAAO,EAAI4f,EACxB,CAQO,SAASpZ,EAASoZ,GACvB,OAAO,EAAIA,EAAIA,EAAI,EAAIA,EAAIA,EAAIA,CACjC,CAQO,SAASC,EAAOD,GACrB,OAAOA,CACT,CAUO,SAASE,EAAUF,GACxB,OAAIA,EAAI,GACCpZ,EAAS,EAAIoZ,GAEf,EAAIpZ,EAAS,GAAKoZ,EAAI,IAC/B,uOCXO,SAAShqB,EAAOvW,EAAQe,EAAM8d,EAAU6hB,EAASr/B,GAItD,GAHIq/B,GAAWA,IAAY1gC,IACzB6e,EAAWA,EAAS5Z,KAAKy7B,IAEvBr/B,EAAM,CACR,MAAMs/B,EAAmB9hB,EACzBA,EAAW,WACT7e,EAAOgW,oBAAoBjV,EAAM8d,GACjC8hB,EAAiB3uB,MAAMrR,KAAM+lB,UAC/B,CACF,CACA,MAAMka,EAAY,CAChB5gC,OAAQA,EACRe,KAAMA,EACN8d,SAAUA,GAGZ,OADA7e,EAAOoO,iBAAiBrN,EAAM8d,GACvB+hB,CACT,CAsBO,SAASj7B,EAAW3F,EAAQe,EAAM8d,EAAU6hB,GACjD,OAAOnqB,EAAOvW,EAAQe,EAAM8d,EAAU6hB,GAAS,EACjD,CAWO,SAASz6B,EAAciB,GACxBA,GAAOA,EAAIlH,SACbkH,EAAIlH,OAAOgW,oBAAoB9O,EAAInG,KAAMmG,EAAI2X,WAC7C,IAAA9c,OAAMmF,GAEV,0HCvCO,SAASuT,EAAgBomB,GAC9BA,EAAIpmB,iBACN,CAKO,SAASD,EAAeqmB,GAC7BA,EAAIrmB,gBACN,CAEA,QA9DA,MAIEja,YAAYQ,GAIVJ,KAAKiU,mBAKLjU,KAAKub,iBAOLvb,KAAKI,KAAOA,EAOZJ,KAAKX,OAAS,IAChB,CAOAwa,iBACE7Z,KAAKub,kBAAmB,CAC1B,CAMAzB,kBACE9Z,KAAKiU,oBAAqB,CAC5B,oFCnDF,SAMEksB,OAAQ,SAORl6B,MAAO,QAEPm6B,KAAM,OACNC,MAAO,QACPC,YAAa,cACbpkB,MAAO,QACPC,SAAU,WACVokB,UAAW,YACXC,SAAU,WACVhf,KAAM,OACNif,MAAO,QACPC,QAAS,UACTC,SAAU,WACVC,KAAM,OACNC,OAAQ,SACRC,UAAW,YACXC,MAAO,wFC7BT,SACEC,KAAM,GACNC,GAAI,GACJC,MAAO,GACPC,KAAM,4OCeR,MAAMC,UAAe,UAInBxhC,YAAYP,GACVU,QAMAC,KAAKqhC,aAAehiC,EAMpBW,KAAKshC,iBAAmB,KAMxBthC,KAAKuhC,aAAe,KAMpBvhC,KAAKwhC,WAAa,IACpB,CAMA/zB,iBAAiBrN,EAAM8d,GACrB,IAAK9d,IAAS8d,EACZ,OAEF,MAAMujB,EAAYzhC,KAAKwhC,aAAexhC,KAAKwhC,WAAa,CAAC,GACnDE,EAAmBD,EAAUrhC,KAAUqhC,EAAUrhC,GAAQ,IAC1DshC,EAAiBC,SAASzjB,IAC7BwjB,EAAiBjgC,KAAKyc,EAE1B,CAYAhc,cAAcwL,GACZ,MAAMk0B,EAA4B,iBAAVl0B,EAClBtN,EAAOwhC,EAAWl0B,EAAQA,EAAMtN,KAChCqhC,EAAYzhC,KAAKwhC,YAAcxhC,KAAKwhC,WAAWphC,GACrD,IAAKqhC,EACH,OAGF,MAAMvB,EAAM0B,EAAW,IAAI,UAAMl0B,GAA8B,EAC1DwyB,EAAI7gC,SACP6gC,EAAI7gC,OAASW,KAAKqhC,cAAgBrhC,MAEpC,MAAM6hC,EAAc7hC,KAAKuhC,eAAiBvhC,KAAKuhC,aAAe,CAAC,GACzDO,EACJ9hC,KAAKshC,mBAAqBthC,KAAKshC,iBAAmB,CAAC,GAMrD,IAAIS,EALE3hC,KAAQyhC,IACZA,EAAYzhC,GAAQ,EACpB0hC,EAAgB1hC,GAAQ,KAExByhC,EAAYzhC,GAEd,IAAK,IAAIW,EAAI,EAAGC,EAAKygC,EAAUxgC,OAAQF,EAAIC,IAAMD,EAU/C,GAREghC,EADE,gBAAiBN,EAAU1gC,GAE3B0gC,EAAU1gC,GACViT,YAAYksB,GAGZuB,EAAU1gC,GACVihC,KAAKhiC,KAAMkgC,IAEG,IAAd6B,GAAuB7B,EAAIjsB,mBAAoB,CACjD8tB,GAAY,EACZ,KACF,CAEF,GAA4B,KAAtBF,EAAYzhC,GAAa,CAC7B,IAAI6hC,EAAKH,EAAgB1hC,GAEzB,WADO0hC,EAAgB1hC,GAChB6hC,KACLjiC,KAAKqV,oBAAoBjV,EAAM,EAAAwb,aAE1BimB,EAAYzhC,EACrB,CACA,OAAO2hC,CACT,CAKAj/B,kBACE9C,KAAKwhC,aAAc,IAAApgC,OAAMpB,KAAKwhC,WAChC,CASAU,aAAa9hC,GACX,OAAQJ,KAAKwhC,YAAcxhC,KAAKwhC,WAAWphC,SAAU6D,CACvD,CAOA8Q,YAAY3U,GACV,QAAKJ,KAAKwhC,aAGHphC,EACHA,KAAQJ,KAAKwhC,WACbnmB,OAAOwC,KAAK7d,KAAKwhC,YAAYvgC,OAAS,EAC5C,CAMAoU,oBAAoBjV,EAAM8d,GACxB,MAAMujB,EAAYzhC,KAAKwhC,YAAcxhC,KAAKwhC,WAAWphC,GACrD,GAAIqhC,EAAW,CACb,MAAMphC,EAAQohC,EAAUzP,QAAQ9T,IACjB,IAAX7d,IACEL,KAAKshC,kBAAoBlhC,KAAQJ,KAAKshC,kBAExCG,EAAUphC,GAAS,EAAAub,OACjB5b,KAAKshC,iBAAiBlhC,KAExBqhC,EAAUx/B,OAAO5B,EAAO,GACC,IAArBohC,EAAUxgC,eACLjB,KAAKwhC,WAAWphC,IAI/B,CACF,EAGF,olBCvKO,SAAS+hC,EAAItc,GAClB,MAAMuc,EAAarc,UAKnB,OAAO,SAAUrY,GACf,IAAI20B,GAAO,EACX,IAAK,IAAIthC,EAAI,EAAGC,EAAKohC,EAAWnhC,OAAQF,EAAIC,IAC1CqhC,EAAOA,GAAQD,EAAWrhC,GAAG2M,GACxB20B,KAF2CthC,GAMlD,OAAOshC,CACT,CACF,CAUO,MAAMC,EAAa,SAAUlvB,GAClC,MAAME,EACJF,EACF,cACA,OACEE,EAAcivB,UACZjvB,EAAckvB,SAAWlvB,EAAcmvB,WACxCnvB,EAAcovB,QAEnB,EAUaC,EAAmB,SAAUvvB,GACxC,MAAME,EACJF,EACF,cACA,OACEE,EAAcivB,UACZjvB,EAAckvB,SAAWlvB,EAAcmvB,UACzCnvB,EAAcovB,QAElB,EAUaE,EAAQ,SAAUl1B,GAC7B,MAAMmF,EAAgBnF,EAAM1E,IAAIgI,mBAC1B6xB,EAAgBn1B,EAAM1E,IAAI4J,mBAAmBiwB,cACnD,OAAOhwB,EAAcc,SAASkvB,EAChC,EAQaC,EAAoB,SAAUp1B,GACzC,OAAOA,EAAM1E,IAAIgI,mBAAmB+xB,aAAa,aAC7CH,EAAMl1B,EAEZ,EASas1B,EAAS,EAAA3zB,KAST4zB,EAAQ,SAAU7vB,GAC7B,OAAOA,EAAgBhT,MAAQ,eACjC,EAWa8iC,EAAoB,SAAU9vB,GACzC,MAAME,EACJF,EACF,cACA,OAA+B,GAAxBE,EAAcmI,UAAiB,EAAA0nB,QAAU,EAAAC,KAAO9vB,EAAcmvB,QACvE,EASaY,EAAQ,EAAAC,MAURC,EAAc,SAAUnwB,GACnC,MAA+B,eAAxBA,EAAgBhT,IACzB,EASaojC,EAAc,SAAUpwB,GACnC,OAAOA,EAAgBhT,MAAQ,qBACjC,EASaqjC,EAAc,SAAUrwB,GACnC,OAAOA,EAAgBhT,MAAQ,kBACjC,EAUasjC,EAAiB,SAAUtwB,GACtC,MAAME,EACJF,EACF,cACA,OACGE,EAAcivB,UACbjvB,EAAckvB,SAAWlvB,EAAcmvB,WACxCnvB,EAAcovB,QAEnB,EAWaiB,EAA0B,SAAUvwB,GAC/C,MAAME,EACJF,EACF,cACA,OACGE,EAAcivB,SACd,EAAAa,IAAM9vB,EAAckvB,QAAUlvB,EAAcmvB,WAC5CnvB,EAAcovB,QAEnB,EAUakB,EAAe,SAAUxwB,GACpC,MAAME,EACJF,EACF,cACA,OACGE,EAAcivB,UACbjvB,EAAckvB,SAAWlvB,EAAcmvB,UACzCnvB,EAAcovB,QAElB,EAWamB,EAAoB,SAAUzwB,GACzC,MAAME,EACJF,EACF,cACM0wB,EAAkCxwB,EAAoB,OAAEwwB,QAC9D,MACc,UAAZA,GACY,WAAZA,GACY,aAAZA,IAICxwB,EAAcjU,OAAO0kC,iBAE1B,EASaC,EAAY,SAAU5wB,GACjC,MAAM6H,EAAmE,EAEvE3H,cAGF,OAFA,IAAAxJ,aAAwB7F,IAAjBgX,EAA4B,IAEA,SAA5BA,EAAagpB,WACtB,EASaC,EAAY,SAAU9wB,GACjC,MAAM+wB,EAAiE,EAErE7wB,cAGF,OAFA,IAAAxJ,aAAsB7F,IAAfkgC,EAA0B,IAEC,UAA3BA,EAAWF,WACpB,EASaG,EAAU,SAAUhxB,GAC/B,MAAM+wB,EAAiE,EAErE7wB,cAGF,OAFA,IAAAxJ,aAAsB7F,IAAfkgC,EAA0B,IAEC,QAA3BA,EAAWF,WACpB,EAWaI,EAAgB,SAAUjxB,GACrC,MAAM6H,EAAmE,EAEvE3H,cAEF,OADA,IAAAxJ,aAAwB7F,IAAjBgX,EAA4B,IAC5BA,EAAaqpB,WAAqC,IAAxBrpB,EAAaQ,MAChD,moCC/SO,SAAS8oB,EAAeC,GAC7B,MAAMxhC,EAASyhC,IACf,IAAK,IAAI1jC,EAAI,EAAGC,EAAKwjC,EAAYvjC,OAAQF,EAAIC,IAAMD,EACjD2jC,EAAiB1hC,EAAQwhC,EAAYzjC,IAEvC,OAAOiC,CACT,CAyBO,SAAS2hC,EAAO3hC,EAAQ2Y,EAAOipB,GACpC,OAAIA,GACFA,EAAK,GAAK5hC,EAAO,GAAK2Y,EACtBipB,EAAK,GAAK5hC,EAAO,GAAK2Y,EACtBipB,EAAK,GAAK5hC,EAAO,GAAK2Y,EACtBipB,EAAK,GAAK5hC,EAAO,GAAK2Y,EACfipB,GAEF,CACL5hC,EAAO,GAAK2Y,EACZ3Y,EAAO,GAAK2Y,EACZ3Y,EAAO,GAAK2Y,EACZ3Y,EAAO,GAAK2Y,EAEhB,CASO,SAASnD,EAAMxV,EAAQ4hC,GAC5B,OAAIA,GACFA,EAAK,GAAK5hC,EAAO,GACjB4hC,EAAK,GAAK5hC,EAAO,GACjB4hC,EAAK,GAAK5hC,EAAO,GACjB4hC,EAAK,GAAK5hC,EAAO,GACV4hC,GAEF5hC,EAAO6G,OAChB,CAQO,SAASg7B,EAAyB7hC,EAAQ4E,EAAGC,GAClD,IAAIO,EAAIC,EAeR,OAbED,EADER,EAAI5E,EAAO,GACRA,EAAO,GAAK4E,EACR5E,EAAO,GAAK4E,EAChBA,EAAI5E,EAAO,GAEX,EAGLqF,EADER,EAAI7E,EAAO,GACRA,EAAO,GAAK6E,EACR7E,EAAO,GAAK6E,EAChBA,EAAI7E,EAAO,GAEX,EAEAoF,EAAKA,EAAKC,EAAKA,CACxB,CAUO,SAASy8B,EAAmB9hC,EAAQiM,GACzC,OAAOgT,EAAWjf,EAAQiM,EAAW,GAAIA,EAAW,GACtD,CAcO,SAAS81B,EAAeC,EAASC,GACtC,OACED,EAAQ,IAAMC,EAAQ,IACtBA,EAAQ,IAAMD,EAAQ,IACtBA,EAAQ,IAAMC,EAAQ,IACtBA,EAAQ,IAAMD,EAAQ,EAE1B,CAWO,SAAS/iB,EAAWjf,EAAQ4E,EAAGC,GACpC,OAAO7E,EAAO,IAAM4E,GAAKA,GAAK5E,EAAO,IAAMA,EAAO,IAAM6E,GAAKA,GAAK7E,EAAO,EAC3E,CASO,SAASkiC,EAAuBliC,EAAQiM,GAC7C,MAAM4S,EAAO7e,EAAO,GACd+e,EAAO/e,EAAO,GACd8e,EAAO9e,EAAO,GACdgf,EAAOhf,EAAO,GACd4E,EAAIqH,EAAW,GACfpH,EAAIoH,EAAW,GACrB,IAAIk2B,EAAe,kBAcnB,OAbIv9B,EAAIia,EACNsjB,GAA8B,eACrBv9B,EAAIka,IACbqjB,GAA8B,iBAE5Bt9B,EAAIka,EACNojB,GAA8B,gBACrBt9B,EAAIma,IACbmjB,GAA8B,iBAE5BA,IAAiB,oBACnBA,EAAe,wBAEVA,CACT,CAOO,SAASV,IACd,MAAO,CAACjY,IAAUA,KAAWA,KAAWA,IAC1C,CAWO,SAASlK,EAAeT,EAAME,EAAMD,EAAME,EAAM4iB,GACrD,OAAIA,GACFA,EAAK,GAAK/iB,EACV+iB,EAAK,GAAK7iB,EACV6iB,EAAK,GAAK9iB,EACV8iB,EAAK,GAAK5iB,EACH4iB,GAEF,CAAC/iB,EAAME,EAAMD,EAAME,EAC5B,CAOO,SAASzJ,EAAoBqsB,GAClC,OAAOtiB,EAAekK,IAAUA,KAAWA,KAAWA,IAAUoY,EAClE,CAOO,SAASQ,EAA6Bn2B,EAAY21B,GACvD,MAAMh9B,EAAIqH,EAAW,GACfpH,EAAIoH,EAAW,GACrB,OAAOqT,EAAe1a,EAAGC,EAAGD,EAAGC,EAAG+8B,EACpC,CAOO,SAASS,EAA8Bb,EAAaI,GAEzD,OAAOU,EADQ/sB,EAAoBqsB,GACFJ,EACnC,CAUO,SAASe,EACdC,EACAta,EACAljB,EACAqkB,EACAuY,GAGA,OAAOa,EADQltB,EAAoBqsB,GACEY,EAAiBta,EAAQljB,EAAKqkB,EACrE,CAOO,SAASqZ,EAAwBC,EAAOf,GAE7C,OAAOgB,EADQrtB,EAAoBqsB,GACRe,EAC7B,CASO,SAASrtB,EAAO0sB,EAASC,GAC9B,OACED,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,EAE1B,CASO,SAASY,EAAoBb,EAASC,EAASa,GACpD,OACEx9B,KAAK0T,IAAIgpB,EAAQ,GAAKC,EAAQ,IAAMa,GACpCx9B,KAAK0T,IAAIgpB,EAAQ,GAAKC,EAAQ,IAAMa,GACpCx9B,KAAK0T,IAAIgpB,EAAQ,GAAKC,EAAQ,IAAMa,GACpCx9B,KAAK0T,IAAIgpB,EAAQ,GAAKC,EAAQ,IAAMa,CAExC,CASO,SAASvkC,EAAOyjC,EAASC,GAa9B,OAZIA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEhBD,CACT,CAMO,SAASN,EAAiB1hC,EAAQiM,GACnCA,EAAW,GAAKjM,EAAO,KACzBA,EAAO,GAAKiM,EAAW,IAErBA,EAAW,GAAKjM,EAAO,KACzBA,EAAO,GAAKiM,EAAW,IAErBA,EAAW,GAAKjM,EAAO,KACzBA,EAAO,GAAKiM,EAAW,IAErBA,EAAW,GAAKjM,EAAO,KACzBA,EAAO,GAAKiM,EAAW,GAE3B,CAOO,SAASq2B,EAAkBtiC,EAAQwhC,GACxC,IAAK,IAAIzjC,EAAI,EAAGC,EAAKwjC,EAAYvjC,OAAQF,EAAIC,IAAMD,EACjD2jC,EAAiB1hC,EAAQwhC,EAAYzjC,IAEvC,OAAOiC,CACT,CAUO,SAASyiC,EACdziC,EACAwiC,EACAta,EACAljB,EACAqkB,GAEA,KAAOnB,EAASljB,EAAKkjB,GAAUmB,EAC7B0Z,EAAS/iC,EAAQwiC,EAAgBta,GAASsa,EAAgBta,EAAS,IAErE,OAAOloB,CACT,CAOO,SAAS4iC,EAAY5iC,EAAQ2iC,GAClC,IAAK,IAAI5kC,EAAI,EAAGC,EAAK2kC,EAAM1kC,OAAQF,EAAIC,IAAMD,EAC3CukC,EAAkBtiC,EAAQ2iC,EAAM5kC,IAElC,OAAOiC,CACT,CAOO,SAAS+iC,EAAS/iC,EAAQ4E,EAAGC,GAClC7E,EAAO,GAAKsF,KAAKwkB,IAAI9pB,EAAO,GAAI4E,GAChC5E,EAAO,GAAKsF,KAAKwkB,IAAI9pB,EAAO,GAAI6E,GAChC7E,EAAO,GAAKsF,KAAKmiB,IAAIznB,EAAO,GAAI4E,GAChC5E,EAAO,GAAKsF,KAAKmiB,IAAIznB,EAAO,GAAI6E,EAClC,CAWO,SAASm+B,EAAchjC,EAAQgM,GACpC,IAAIi3B,EAEJ,OADAA,EAAMj3B,EAASk3B,EAAcljC,IACzBijC,IAGJA,EAAMj3B,EAASm3B,EAAenjC,IAC1BijC,IAGJA,EAAMj3B,EAASo3B,EAAYpjC,IACvBijC,IAGJA,EAAMj3B,EAASq3B,EAAWrjC,IACtBijC,IAGG,IACT,CAQO,SAASK,EAAQtjC,GACtB,IAAIujC,EAAO,EAIX,OAHKnyB,EAAQpR,KACXujC,EAAOnkB,EAASpf,GAAUkB,EAAUlB,IAE/BujC,CACT,CAQO,SAASL,EAAcljC,GAC5B,MAAO,CAACA,EAAO,GAAIA,EAAO,GAC5B,CAQO,SAASmjC,EAAenjC,GAC7B,MAAO,CAACA,EAAO,GAAIA,EAAO,GAC5B,CAQO,SAASoiB,EAAUpiB,GACxB,MAAO,EAAEA,EAAO,GAAKA,EAAO,IAAM,GAAIA,EAAO,GAAKA,EAAO,IAAM,EACjE,CAQO,SAASwjC,EAAUxjC,EAAQyjC,GAChC,IAAIx3B,EAYJ,MAXe,gBAAXw3B,EACFx3B,EAAai3B,EAAcljC,GACP,iBAAXyjC,EACTx3B,EAAak3B,EAAenjC,GACR,aAAXyjC,EACTx3B,EAAao3B,EAAWrjC,GACJ,cAAXyjC,EACTx3B,EAAam3B,EAAYpjC,IAEzB,IAAA8G,SAAO,EAAO,IAETmF,CACT,CAOO,SAASy3B,EAAgB1B,EAASC,GACvC,MAAMpjB,EAAOvZ,KAAKwkB,IAAIkY,EAAQ,GAAIC,EAAQ,IACpCljB,EAAOzZ,KAAKwkB,IAAIkY,EAAQ,GAAIC,EAAQ,IAG1C,OAFa38B,KAAKmiB,IAAIua,EAAQ,GAAIC,EAAQ,IAE3BpjB,IADFvZ,KAAKmiB,IAAIua,EAAQ,GAAIC,EAAQ,IACXljB,EACjC,CAUO,SAASxK,EAAkBvY,EAAQiE,EAAYuU,EAAUR,EAAM4tB,GACpE,MAAO7c,EAAIC,EAAIC,EAAIC,EAAI0S,EAAIC,EAAI8L,EAAIC,GAAMC,EACvC7nC,EACAiE,EACAuU,EACAR,GAEF,OAAOsL,EACLha,KAAKwkB,IAAI/E,EAAIE,EAAI2S,EAAI+L,GACrBr+B,KAAKwkB,IAAI9E,EAAIE,EAAI2S,EAAI+L,GACrBt+B,KAAKmiB,IAAI1C,EAAIE,EAAI2S,EAAI+L,GACrBr+B,KAAKmiB,IAAIzC,EAAIE,EAAI2S,EAAI+L,GACrBhC,EAEJ,CASO,SAASiC,EAAmB7nC,EAAQiE,EAAYuU,EAAUR,GAC/D,MAAM5O,EAAMnF,EAAa+T,EAAK,GAAM,EAC9B3O,EAAMpF,EAAa+T,EAAK,GAAM,EAC9B8vB,EAAcx+B,KAAK2gB,IAAIzR,GACvBuvB,EAAcz+B,KAAK4gB,IAAI1R,GACvBwvB,EAAO5+B,EAAK0+B,EACZG,EAAO7+B,EAAK2+B,EACZG,EAAO7+B,EAAKy+B,EACZK,EAAO9+B,EAAK0+B,EACZn/B,EAAI5I,EAAO,GACX6I,EAAI7I,EAAO,GACjB,MAAO,CACL4I,EAAIo/B,EAAOG,EACXt/B,EAAIo/B,EAAOC,EACXt/B,EAAIo/B,EAAOG,EACXt/B,EAAIo/B,EAAOC,EACXt/B,EAAIo/B,EAAOG,EACXt/B,EAAIo/B,EAAOC,EACXt/B,EAAIo/B,EAAOG,EACXt/B,EAAIo/B,EAAOC,EACXt/B,EAAIo/B,EAAOG,EACXt/B,EAAIo/B,EAAOC,EAEf,CAQO,SAAShjC,EAAUlB,GACxB,OAAOA,EAAO,GAAKA,EAAO,EAC5B,CAOO,SAASokC,EAAoBpC,EAASC,GAE3C,OAAOqB,EADce,EAAgBrC,EAASC,GAEhD,CAUO,SAASoC,EAAgBrC,EAASC,EAASL,GAChD,MAAM0C,EAAe1C,GAvZd,CAACpY,IAAUA,KAAU,KAAW,KAgbvC,OAxBInK,EAAW2iB,EAASC,IAClBD,EAAQ,GAAKC,EAAQ,GACvBqC,EAAa,GAAKtC,EAAQ,GAE1BsC,EAAa,GAAKrC,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvBqC,EAAa,GAAKtC,EAAQ,GAE1BsC,EAAa,GAAKrC,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvBqC,EAAa,GAAKtC,EAAQ,GAE1BsC,EAAa,GAAKrC,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvBqC,EAAa,GAAKtC,EAAQ,GAE1BsC,EAAa,GAAKrC,EAAQ,IAG5B1sB,EAAoB+uB,GAEfA,CACT,CAMO,SAASC,EAAUvkC,GACxB,OAAOof,EAASpf,GAAUkB,EAAUlB,EACtC,CAQO,SAASsN,EAAQtN,GACtB,MAAO,CAACA,EAAO,GAAKA,EAAO,GAAIA,EAAO,GAAKA,EAAO,GACpD,CAQO,SAASqjC,EAAWrjC,GACzB,MAAO,CAACA,EAAO,GAAIA,EAAO,GAC5B,CAQO,SAASojC,EAAYpjC,GAC1B,MAAO,CAACA,EAAO,GAAIA,EAAO,GAC5B,CAQO,SAASof,EAASpf,GACvB,OAAOA,EAAO,GAAKA,EAAO,EAC5B,CASO,SAASqf,EAAW2iB,EAASC,GAClC,OACED,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,EAE1B,CAQO,SAAS7wB,EAAQpR,GACtB,OAAOA,EAAO,GAAKA,EAAO,IAAMA,EAAO,GAAKA,EAAO,EACrD,CAOO,SAASwkC,EAAexkC,EAAQ4hC,GACrC,OAAIA,GACFA,EAAK,GAAK5hC,EAAO,GACjB4hC,EAAK,GAAK5hC,EAAO,GACjB4hC,EAAK,GAAK5hC,EAAO,GACjB4hC,EAAK,GAAK5hC,EAAO,GACV4hC,GAEF5hC,CACT,CAMO,SAASykC,EAAgBzkC,EAAQ2Y,GACtC,MAAM8F,GAAWze,EAAO,GAAKA,EAAO,IAAM,GAAM2Y,EAAQ,GAClD+F,GAAW1e,EAAO,GAAKA,EAAO,IAAM,GAAM2Y,EAAQ,GACxD3Y,EAAO,IAAMye,EACbze,EAAO,IAAMye,EACbze,EAAO,IAAM0e,EACb1e,EAAO,IAAM0e,CACf,CAUO,SAASgmB,EAAkB1kC,EAAQ8c,EAAO9X,GAC/C,IAAIqa,GAAa,EACjB,MAAMslB,EAAWzC,EAAuBliC,EAAQ8c,GAC1C8nB,EAAS1C,EAAuBliC,EAAQgF,GAC9C,GACE2/B,IAAa,wBACbC,IAAW,uBAEXvlB,GAAa,MACR,CACL,MAAMR,EAAO7e,EAAO,GACd+e,EAAO/e,EAAO,GACd8e,EAAO9e,EAAO,GACdgf,EAAOhf,EAAO,GACd6kC,EAAS/nB,EAAM,GACfgoB,EAAShoB,EAAM,GACfioB,EAAO//B,EAAI,GACXggC,EAAOhgC,EAAI,GACXigC,GAASD,EAAOF,IAAWC,EAAOF,GACxC,IAAIjgC,EAAGC,EACA+/B,EAAS,mBAAyBD,EAAW,mBAElD//B,EAAImgC,GAAQC,EAAOhmB,GAAQimB,EAC3B5lB,EAAaza,GAAKia,GAAQja,GAAKka,GAG9BO,KACEulB,EAAS,kBACVD,EAAW,kBAGb9/B,EAAImgC,GAAQD,EAAOjmB,GAAQmmB,EAC3B5lB,EAAaxa,GAAKka,GAAQla,GAAKma,GAG9BK,KACEulB,EAAS,kBACVD,EAAW,kBAGb//B,EAAImgC,GAAQC,EAAOjmB,GAAQkmB,EAC3B5lB,EAAaza,GAAKia,GAAQja,GAAKka,GAG9BO,KACEulB,EAAS,iBACVD,EAAW,iBAGb9/B,EAAImgC,GAAQD,EAAOlmB,GAAQomB,EAC3B5lB,EAAaxa,GAAKka,GAAQla,GAAKma,EAEnC,CACA,OAAOK,CACT,CAaO,SAAS6lB,EAAellC,EAAQmlC,EAAavD,EAAMwD,GACxD,IAAI5D,EAAc,GAClB,GAAI4D,EAAQ,EAAG,CACb,MAAM18B,EAAQ1I,EAAO,GAAKA,EAAO,GAC3BmB,EAASnB,EAAO,GAAKA,EAAO,GAClC,IAAK,IAAIjC,EAAI,EAAGA,EAAIqnC,IAASrnC,EAC3ByjC,EAAY/iC,KACVuB,EAAO,GAAM0I,EAAQ3K,EAAKqnC,EAC1BplC,EAAO,GACPA,EAAO,GACPA,EAAO,GAAMmB,EAASpD,EAAKqnC,EAC3BplC,EAAO,GAAM0I,EAAQ3K,EAAKqnC,EAC1BplC,EAAO,GACPA,EAAO,GACPA,EAAO,GAAMmB,EAASpD,EAAKqnC,EAGjC,MACE5D,EAAc,CACZxhC,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,IAGXmlC,EAAY3D,EAAaA,EAAa,GACtC,MAAM6D,EAAK,GACLC,EAAK,GACX,IAAK,IAAIvnC,EAAI,EAAGu0B,EAAIkP,EAAYvjC,OAAQF,EAAIu0B,EAAGv0B,GAAK,EAClDsnC,EAAG5mC,KAAK+iC,EAAYzjC,IACpBunC,EAAG7mC,KAAK+iC,EAAYzjC,EAAI,IAE1B,OAvyBF,SAA4BsnC,EAAIC,EAAI1D,GAKlC,OAAOtiB,EAJMha,KAAKwkB,IAAIzb,MAAM,KAAMg3B,GACrB//B,KAAKwkB,IAAIzb,MAAM,KAAMi3B,GACrBhgC,KAAKmiB,IAAIpZ,MAAM,KAAMg3B,GACrB//B,KAAKmiB,IAAIpZ,MAAM,KAAMi3B,GACY1D,EAChD,CAiyBS2D,CAAmBF,EAAIC,EAAI1D,EACpC,CAUO,SAASlI,EAAM15B,EAAQ8f,GAC5B,MAAMka,EAAmBla,EAAWrd,YAC9BzG,EAASomB,EAAUpiB,GACzB,GACE8f,EAAW6Z,aACV39B,EAAO,GAAKg+B,EAAiB,IAAMh+B,EAAO,IAAMg+B,EAAiB,IAClE,CACA,MAAMJ,EAAaxa,EAAS4a,GAItB9R,EAHa5iB,KAAKijB,OACrBvsB,EAAO,GAAKg+B,EAAiB,IAAMJ,GAEVA,EAC5B55B,EAAO,IAAMkoB,EACbloB,EAAO,IAAMkoB,CACf,CACA,OAAOloB,CACT,CAcO,SAASwlC,EAAcxlC,EAAQ8f,GACpC,GAAIA,EAAW6Z,WAAY,CACzB,MAAMK,EAAmBla,EAAWrd,YAEpC,IAAKgjC,SAASzlC,EAAO,MAAQylC,SAASzlC,EAAO,IAC3C,MAAO,CAAC,CAACg6B,EAAiB,GAAIh6B,EAAO,GAAIg6B,EAAiB,GAAIh6B,EAAO,KAGvE05B,EAAM15B,EAAQ8f,GACd,MAAM8Z,EAAaxa,EAAS4a,GAE5B,GAAI5a,EAASpf,GAAU45B,EAErB,MAAO,CAAC,CAACI,EAAiB,GAAIh6B,EAAO,GAAIg6B,EAAiB,GAAIh6B,EAAO,KAChE,GAAIA,EAAO,GAAKg6B,EAAiB,GAEtC,MAAO,CACL,CAACh6B,EAAO,GAAK45B,EAAY55B,EAAO,GAAIg6B,EAAiB,GAAIh6B,EAAO,IAChE,CAACg6B,EAAiB,GAAIh6B,EAAO,GAAIA,EAAO,GAAIA,EAAO,KAEhD,GAAIA,EAAO,GAAKg6B,EAAiB,GAEtC,MAAO,CACL,CAACh6B,EAAO,GAAIA,EAAO,GAAIg6B,EAAiB,GAAIh6B,EAAO,IACnD,CAACg6B,EAAiB,GAAIh6B,EAAO,GAAIA,EAAO,GAAK45B,EAAY55B,EAAO,IAGtE,CAEA,MAAO,CAACA,EACV,sFC74BA,SACE0lC,QAAS,EACTC,aAAc,EACdC,MAAO,EACP1H,MAAO,EACP2H,MAAO,EACP7H,KAAM,yKCJD,SAAS3xB,IACd,OAAO,CACT,CAMO,SAASi0B,IACd,OAAO,CACT,CAOO,SAAS1nB,IAAQ,CAWjB,SAASktB,EAAWC,GACzB,IAGIC,EAGAC,EAEAC,EARAC,GAAS,EAUb,OAAO,WACL,MAAMC,EAAWz/B,MAAM0O,UAAUxO,MAAMm4B,KAAKjc,WAO5C,OANKojB,GAAUnpC,OAASkpC,IAAa,YAAYE,EAAUH,KACzDE,GAAS,EACTD,EAAWlpC,KACXipC,EAAWG,EACXJ,EAAaD,EAAG13B,MAAMrR,KAAM+lB,YAEvBijB,CACT,CACF,CAOO,SAASK,EAAUC,GAaxB,OAZA,WACE,IAAI3tB,EACJ,IACEA,EAAQ2tB,GAGV,CAFE,MAAOC,GACP,OAAOC,QAAQC,OAAOF,EACxB,CACA,OAAI5tB,aAAiB6tB,QACZ7tB,EAEF6tB,QAAQE,QAAQ/tB,EACzB,CACOguB,EACT,wVC7CA,MAAMC,GAAe,IAAAj/B,UAcrB,MAAMk/B,UAAiB,UACrBjqC,cACEG,QAMAC,KAAK8pC,SAAU,IAAArF,eAMfzkC,KAAK+pC,iBAAmB,EAMxB/pC,KAAKgqC,yCAA2C,EAMhDhqC,KAAKiqC,2BAA6B,EAUlCjqC,KAAKkqC,6BAA8B,IAAApB,aAAW,SAC5CqB,EACAC,EACAte,GAEA,IAAKA,EACH,OAAO9rB,KAAKqqC,sBAAsBD,GAEpC,MAAM5xB,EAAQxY,KAAKwY,QAEnB,OADAA,EAAM0vB,eAAepc,GACdtT,EAAM6xB,sBAAsBD,EACrC,GACF,CASAE,oBAAoBF,EAAkBte,GACpC,OAAO9rB,KAAKkqC,4BACVlqC,KAAK0e,cACL0rB,EACAte,EAEJ,CAOAtT,QACE,OAAO,IAAA9S,WACT,CAUA6kC,eAAe3iC,EAAGC,EAAG2iC,EAAcC,GACjC,OAAO,IAAA/kC,WACT,CAOAuc,WAAWra,EAAGC,GACZ,MAAM6iC,EAAQ1qC,KAAK2qC,gBAAgB,CAAC/iC,EAAGC,IACvC,OAAO6iC,EAAM,KAAO9iC,GAAK8iC,EAAM,KAAO7iC,CACxC,CAUA8iC,gBAAgBC,EAAOJ,GAGrB,OAFAA,EAAeA,GAA8B,CAAC/iB,IAAKA,KACnDznB,KAAKuqC,eAAeK,EAAM,GAAIA,EAAM,GAAIJ,EAAche,KAC/Cge,CACT,CASAK,qBAAqB57B,GACnB,OAAOjP,KAAKiiB,WAAWhT,EAAW,GAAIA,EAAW,GACnD,CAQA67B,cAAc9nC,GACZ,OAAO,IAAA0C,WACT,CAQAD,UAAUzC,GACR,GAAIhD,KAAK+pC,iBAAmB/pC,KAAK0e,cAAe,CAC9C,MAAM1b,EAAShD,KAAK8qC,cAAc9qC,KAAK8pC,UACnC7xB,MAAMjV,EAAO,KAAOiV,MAAMjV,EAAO,OACnC,IAAAuV,qBAAoBvV,GAEtBhD,KAAK+pC,gBAAkB/pC,KAAK0e,aAC9B,CACA,OAAO,IAAA8oB,gBAAexnC,KAAK8pC,QAAS9mC,EACtC,CAUA4lB,OAAOsT,EAAOlW,IACZ,IAAAtgB,WACF,CAYAy2B,MAAM4O,EAAIC,EAAIhlB,IACZ,IAAAtgB,WACF,CAWAulC,SAASnF,GACP,OAAO9lC,KAAKqqC,sBAAsBvE,EAAYA,EAChD,CAUAuE,sBAAsBD,GACpB,OAAO,IAAA1kC,WACT,CAOAimB,UACE,OAAO,IAAAjmB,WACT,CAWAwiC,eAAeC,IACb,IAAAziC,WACF,CAQAwlC,iBAAiBloC,GACf,OAAO,IAAA0C,WACT,CAUAylC,UAAU1pB,EAAQC,IAChB,IAAAhc,WACF,CAiBAomB,UAAU1sB,EAAQgsC,GAEhB,MAAMC,GAAa,IAAAvpC,KAAc1C,GAC3B+oC,EACqB,eAAzBkD,EAAWC,WACP,SAAUC,EAAeC,EAAgBnf,GACvC,MAAMof,EAAcJ,EAAW5lC,YACzBimC,EAAkBL,EAAWM,iBAC7BxP,GAAQ,IAAAj4B,WAAUwnC,IAAmB,IAAAxnC,WAAUunC,GAmBrD,OAlBA,IAAAG,SACEhC,EACA8B,EAAgB,GAChBA,EAAgB,GAChBvP,GACCA,EACD,EACA,EACA,IAEF,IAAA0P,aACEN,EACA,EACAA,EAActqC,OACdorB,EACAud,EACA4B,IAEK,IAAAM,cAAaT,EAAYD,EAAzB,CACLG,EACAC,EACAnf,EAEJ,GACA,IAAAyf,cAAaT,EAAYD,GAE/B,OADAprC,KAAKkoC,eAAeC,GACbnoC,IACT,EAGF,qZCxUA,MAAM+rC,UAAmB,UAMvBnsC,YAAY4kC,EAAawH,GACvBjsC,QAMAC,KAAKisC,WAAa,EAMlBjsC,KAAKksC,mBAAqB,OAEXjoC,IAAX+nC,GAAyBriC,MAAMC,QAAQ46B,EAAY,IAMrDxkC,KAAKmsC,eACyD,EAG5DH,GATFhsC,KAAKosC,mBACHJ,EAC6B,EAUnC,CAOAxzB,QACE,OAAO,IAAIuzB,EAAW/rC,KAAKwlC,gBAAgB37B,QAAS7J,KAAKgsC,OAC3D,CASAzB,eAAe3iC,EAAGC,EAAG2iC,EAAcC,GACjC,OAAIA,GAAqB,IAAA5F,0BAAyB7kC,KAAKyF,YAAamC,EAAGC,GAC9D4iC,GAELzqC,KAAKksC,mBAAqBlsC,KAAK0e,gBACjC1e,KAAKisC,UAAY3jC,KAAKE,MACpB,IAAA6jC,iBACErsC,KAAKwlC,gBACL,EACAxlC,KAAKwlC,gBAAgBvkC,OACrBjB,KAAKqsB,OACL,IAGJrsB,KAAKksC,kBAAoBlsC,KAAK0e,gBAEzB,IAAA4tB,oBACLtsC,KAAKwlC,gBACL,EACAxlC,KAAKwlC,gBAAgBvkC,OACrBjB,KAAKqsB,OACLrsB,KAAKisC,WACL,EACArkC,EACAC,EACA2iC,EACAC,GAEJ,CAOAnE,UACE,OAAO,IAAAiG,YACLvsC,KAAKwlC,gBACL,EACAxlC,KAAKwlC,gBAAgBvkC,OACrBjB,KAAKqsB,OAET,CAOAmgB,iBACE,OAAO,IAAAC,oBACLzsC,KAAKwlC,gBACL,EACAxlC,KAAKwlC,gBAAgBvkC,OACrBjB,KAAKqsB,OAET,CAOAqgB,8BAA8BtC,GAC5B,MAAMuC,EAA4B,GAUlC,OATAA,EAA0B1rC,QAAS,IAAA2rC,gBACjC5sC,KAAKwlC,gBACL,EACAxlC,KAAKwlC,gBAAgBvkC,OACrBjB,KAAKqsB,OACL+d,EACAuC,EACA,GAEK,IAAIZ,EAAWY,EAA2B,KACnD,CAOAhhB,UACE,MAAO,YACT,CAQAuf,iBAAiBloC,GACf,OAAO,CACT,CAQAmpC,eAAe3H,EAAawH,GAC1BhsC,KAAK6sC,UAAUb,EAAQxH,EAAa,GAC/BxkC,KAAKwlC,kBACRxlC,KAAKwlC,gBAAkB,IAEzBxlC,KAAKwlC,gBAAgBvkC,QAAS,IAAA6rC,oBAC5B9sC,KAAKwlC,gBACL,EACAhB,EACAxkC,KAAKqsB,QAEPrsB,KAAK+D,SACP,EAGF,2PC7KA,MAAMgpC,UAAc,UAKlBntC,YAAY4kC,EAAawH,GACvBjsC,QACAC,KAAKmsC,eAAe3H,EAAawH,EACnC,CAOAxzB,QACE,MAAMoyB,EAAQ,IAAImC,EAAM/sC,KAAKwlC,gBAAgB37B,QAAS7J,KAAKgsC,QAE3D,OADApB,EAAMvsB,gBAAgBre,MACf4qC,CACT,CASAL,eAAe3iC,EAAGC,EAAG2iC,EAAcC,GACjC,MAAMjF,EAAkBxlC,KAAKwlC,gBACvBpJ,GAAkB,qBACtBx0B,EACAC,EACA29B,EAAgB,GAChBA,EAAgB,IAElB,GAAIpJ,EAAkBqO,EAAoB,CACxC,MAAMpe,EAASrsB,KAAKqsB,OACpB,IAAK,IAAItrB,EAAI,EAAGA,EAAIsrB,IAAUtrB,EAC5BypC,EAAazpC,GAAKykC,EAAgBzkC,GAGpC,OADAypC,EAAavpC,OAASorB,EACf+P,CACT,CACA,OAAOqO,CACT,CAOA+B,iBACE,OAAQxsC,KAAKwlC,gBAAuBxlC,KAAKwlC,gBAAgB37B,QAA1B,EACjC,CAOAihC,cAAc9nC,GACZ,OAAO,IAAAoiC,8BAA6BplC,KAAKwlC,gBAAiBxiC,EAC5D,CAOA2oB,UACE,MAAO,OACT,CAQAuf,iBAAiBloC,GACf,OAAO,IAAAif,YAAWjf,EAAQhD,KAAKwlC,gBAAgB,GAAIxlC,KAAKwlC,gBAAgB,GAC1E,CAOA2G,eAAe3H,EAAawH,GAC1BhsC,KAAK6sC,UAAUb,EAAQxH,EAAa,GAC/BxkC,KAAKwlC,kBACRxlC,KAAKwlC,gBAAkB,IAEzBxlC,KAAKwlC,gBAAgBvkC,QAAS,IAAA+rC,mBAC5BhtC,KAAKwlC,gBACL,EACAhB,EACAxkC,KAAKqsB,QAEPrsB,KAAK+D,SACP,EAGF,q1BC5FA,MAAMkpC,UAAgB,UAYpBrtC,YAAY4kC,EAAawH,EAAQkB,GAC/BntC,QAMAC,KAAKmtC,MAAQ,GAMbntC,KAAKotC,4BAA8B,EAMnCptC,KAAKqtC,mBAAqB,KAM1BrtC,KAAKisC,WAAa,EAMlBjsC,KAAKksC,mBAAqB,EAM1BlsC,KAAKstC,mBAAqB,EAM1BttC,KAAKutC,yBAA2B,UAEjBtpC,IAAX+nC,GAAwBkB,GAC1BltC,KAAKosC,mBACHJ,EAC6B,GAE/BhsC,KAAKmtC,MAAQD,GAEbltC,KAAKmsC,eACgE,EAGnEH,EAGN,CAOAwB,iBAAiBjB,GACVvsC,KAAKwlC,iBAGR,IAAAjkC,QAAOvB,KAAKwlC,gBAAiB+G,EAAWngB,sBAFxCpsB,KAAKwlC,gBAAkB+G,EAAWngB,qBAAqBviB,QAIzD7J,KAAKmtC,MAAM1rC,KAAKzB,KAAKwlC,gBAAgBvkC,QACrCjB,KAAK+D,SACP,CAOAyU,QACE,MAAMi1B,EAAU,IAAIR,EAClBjtC,KAAKwlC,gBAAgB37B,QACrB7J,KAAKgsC,OACLhsC,KAAKmtC,MAAMtjC,SAGb,OADA4jC,EAAQpvB,gBAAgBre,MACjBytC,CACT,CASAlD,eAAe3iC,EAAGC,EAAG2iC,EAAcC,GACjC,OAAIA,GAAqB,IAAA5F,0BAAyB7kC,KAAKyF,YAAamC,EAAGC,GAC9D4iC,GAELzqC,KAAKksC,mBAAqBlsC,KAAK0e,gBACjC1e,KAAKisC,UAAY3jC,KAAKE,MACpB,IAAAklC,sBACE1tC,KAAKwlC,gBACL,EACAxlC,KAAKmtC,MACLntC,KAAKqsB,OACL,IAGJrsB,KAAKksC,kBAAoBlsC,KAAK0e,gBAEzB,IAAAivB,yBACL3tC,KAAKwlC,gBACL,EACAxlC,KAAKmtC,MACLntC,KAAKqsB,OACLrsB,KAAKisC,WACL,EACArkC,EACAC,EACA2iC,EACAC,GAEJ,CAOAxoB,WAAWra,EAAGC,GACZ,OAAO,IAAA+lC,uBACL5tC,KAAK6tC,6BACL,EACA7tC,KAAKmtC,MACLntC,KAAKqsB,OACLzkB,EACAC,EAEJ,CAOAy+B,UACE,OAAO,IAAAwH,aACL9tC,KAAK6tC,6BACL,EACA7tC,KAAKmtC,MACLntC,KAAKqsB,OAET,CAeAmgB,eAAeuB,GACb,IAAIvI,EAQJ,YAPcvhC,IAAV8pC,GACFvI,EAAkBxlC,KAAK6tC,6BAA6BhkC,SACpD,IAAAmkC,mBAAkBxI,EAAiB,EAAGxlC,KAAKmtC,MAAOntC,KAAKqsB,OAAQ0hB,IAE/DvI,EAAkBxlC,KAAKwlC,iBAGlB,IAAAyI,yBAAwBzI,EAAiB,EAAGxlC,KAAKmtC,MAAOntC,KAAKqsB,OACtE,CAKA6hB,UACE,OAAOluC,KAAKmtC,KACd,CAKAgB,uBACE,GAAInuC,KAAKotC,4BAA8BptC,KAAK0e,cAAe,CACzD,MAAM0vB,GAAa,IAAAhpB,WAAUplB,KAAKyF,aAClCzF,KAAKqtC,oBAAqB,IAAAgB,yBACxBruC,KAAK6tC,6BACL,EACA7tC,KAAKmtC,MACLntC,KAAKqsB,OACL+hB,EACA,GAEFpuC,KAAKotC,2BAA6BptC,KAAK0e,aACzC,CACA,OAAO1e,KAAKqtC,kBACd,CAQAiB,mBACE,OAAO,IAAI,UAAMtuC,KAAKmuC,uBAAwB,MAChD,CASAI,qBACE,OAAOvuC,KAAKmtC,MAAMlsC,MACpB,CAYAutC,cAAcnuC,GACZ,OAAIA,EAAQ,GAAKL,KAAKmtC,MAAMlsC,QAAUZ,EAC7B,KAEF,IAAI,UACTL,KAAKwlC,gBAAgB37B,MACT,IAAVxJ,EAAc,EAAIL,KAAKmtC,MAAM9sC,EAAQ,GACrCL,KAAKmtC,MAAM9sC,IAEbL,KAAKgsC,OAET,CAOAyC,iBACE,MAAMzC,EAAShsC,KAAKgsC,OACdxG,EAAkBxlC,KAAKwlC,gBACvB0H,EAAOltC,KAAKmtC,MACZW,EAAc,GACpB,IAAI5iB,EAAS,EACb,IAAK,IAAInqB,EAAI,EAAGC,EAAKksC,EAAKjsC,OAAQF,EAAIC,IAAMD,EAAG,CAC7C,MAAMiH,EAAMklC,EAAKnsC,GACXwrC,EAAa,IAAI,UACrB/G,EAAgB37B,MAAMqhB,EAAQljB,GAC9BgkC,GAEF8B,EAAYrsC,KAAK8qC,GACjBrhB,EAASljB,CACX,CACA,OAAO8lC,CACT,CAKAD,6BACE,GAAI7tC,KAAKstC,mBAAqBttC,KAAK0e,cAAe,CAChD,MAAM8mB,EAAkBxlC,KAAKwlC,iBACzB,IAAAkJ,wBAAuBlJ,EAAiB,EAAGxlC,KAAKmtC,MAAOntC,KAAKqsB,QAC9DrsB,KAAKutC,yBAA2B/H,GAEhCxlC,KAAKutC,yBAA2B/H,EAAgB37B,QAChD7J,KAAKutC,yBAAyBtsC,QAAS,IAAA+sC,mBACrChuC,KAAKutC,yBACL,EACAvtC,KAAKmtC,MACLntC,KAAKqsB,SAGTrsB,KAAKstC,kBAAoBttC,KAAK0e,aAChC,CACA,OAAO1e,KAAKutC,wBACd,CAOAb,8BAA8BtC,GAC5B,MAAMuC,EAA4B,GAC5BgC,EAAiB,GAWvB,OAVAhC,EAA0B1rC,QAAS,IAAA2tC,eACjC5uC,KAAKwlC,gBACL,EACAxlC,KAAKmtC,MACLntC,KAAKqsB,OACL/jB,KAAKE,KAAK4hC,GACVuC,EACA,EACAgC,GAEK,IAAI1B,EAAQN,EAA2B,KAAMgC,EACtD,CAOAhjB,UACE,MAAO,SACT,CAQAuf,iBAAiBloC,GACf,OAAO,IAAA6rC,2BACL7uC,KAAK6tC,6BACL,EACA7tC,KAAKmtC,MACLntC,KAAKqsB,OACLrpB,EAEJ,CAQAmpC,eAAe3H,EAAawH,GAC1BhsC,KAAK6sC,UAAUb,EAAQxH,EAAa,GAC/BxkC,KAAKwlC,kBACRxlC,KAAKwlC,gBAAkB,IAEzB,MAAM0H,GAAO,IAAA4B,yBACX9uC,KAAKwlC,gBACL,EACAhB,EACAxkC,KAAKqsB,OACLrsB,KAAKmtC,OAEPntC,KAAKwlC,gBAAgBvkC,OAAyB,IAAhBisC,EAAKjsC,OAAe,EAAIisC,EAAKA,EAAKjsC,OAAS,GACzEjB,KAAK+D,SACP,EAGF,UAcO,SAASgrC,EAAS/vC,EAAQgwC,EAAQ5sC,EAAG6sC,GAC1C7sC,EAAIA,GAAQ,GAEZ,MAAMojC,EAAkB,GACxB,IAAK,IAAIzkC,EAAI,EAAGA,EAAIqB,IAAKrB,GACvB,IAAAQ,QACEikC,GACA,YAAaxmC,EAAQgwC,EAAS,EAAI1mC,KAAK0e,GAAKjmB,EAAKqB,EAAG6sC,IAIxD,OADAzJ,EAAgB/jC,KAAK+jC,EAAgB,GAAIA,EAAgB,IAClD,IAAIyH,EAAQzH,EAAiB,KAAM,CAACA,EAAgBvkC,QAC7D,CAQO,SAASiuC,EAAWlsC,GACzB,MAAM6e,EAAO7e,EAAO,GACd+e,EAAO/e,EAAO,GACd8e,EAAO9e,EAAO,GACdgf,EAAOhf,EAAO,GACdwiC,EAAkB,CACtB3jB,EACAE,EACAF,EACAG,EACAF,EACAE,EACAF,EACAC,EACAF,EACAE,GAEF,OAAO,IAAIkrB,EAAQzH,EAAiB,KAAM,CAACA,EAAgBvkC,QAC7D,CAWO,SAASkuC,EAAW3U,EAAQ4U,EAAOlT,GACxCkT,EAAQA,GAAgB,GACxB,MAAM/iB,EAASmO,EAAOlO,YAChB0f,EAASxR,EAAO6U,YAChBrwC,EAASw7B,EAAOpV,YAChBkqB,EAAcjjB,GAAU+iB,EAAQ,GAChC5J,EAAkB,IAAI77B,MAAM2lC,GAClC,IAAK,IAAIvuC,EAAI,EAAGA,EAAIuuC,EAAavuC,GAAKsrB,EAAQ,CAC5CmZ,EAAgBzkC,GAAK,EACrBykC,EAAgBzkC,EAAI,GAAK,EACzB,IAAK,IAAIwmB,EAAI,EAAGA,EAAI8E,EAAQ9E,IAC1Bie,EAAgBzkC,EAAIwmB,GAAKvoB,EAAOuoB,EAEpC,CACA,MAAM2lB,EAAO,CAAC1H,EAAgBvkC,QACxBwsC,EAAU,IAAIR,EAAQzH,EAAiBwG,EAAQkB,GAErD,OADAqC,EAAY9B,EAASzuC,EAAQw7B,EAAOC,YAAayB,GAC1CuR,CACT,CAUO,SAAS8B,EAAY9B,EAASzuC,EAAQgwC,EAAQ9S,GACnD,MAAMsJ,EAAkBiI,EAAQrhB,qBAC1BC,EAASohB,EAAQnhB,YACjB8iB,EAAQ5J,EAAgBvkC,OAASorB,EAAS,EAC1CmjB,EAAatT,GAAgB,EACnC,IAAK,IAAIn7B,EAAI,EAAGA,GAAKquC,IAASruC,EAAG,CAC/B,MAAMmqB,EAASnqB,EAAIsrB,EACb6P,EAAQsT,EAAiC,GAAnB,IAAAzoB,QAAOhmB,EAAGquC,GAAa9mC,KAAK0e,GAAMooB,EAC9D5J,EAAgBta,GAAUlsB,EAAO,GAAKgwC,EAAS1mC,KAAK2gB,IAAIiT,GACxDsJ,EAAgBta,EAAS,GAAKlsB,EAAO,GAAKgwC,EAAS1mC,KAAK4gB,IAAIgT,EAC9D,CACAuR,EAAQ1pC,SACV,uSC5eA,MAAM0rC,UAAuB,UAC3B7vC,cACEG,QAMAC,KAAKgsC,OAAS,KAMdhsC,KAAKqsB,OAAS,EAMdrsB,KAAKwlC,gBAAkB,IACzB,CAOAsF,cAAc9nC,GACZ,OAAO,IAAAuiC,mCACLvlC,KAAKwlC,gBACL,EACAxlC,KAAKwlC,gBAAgBvkC,OACrBjB,KAAKqsB,OACLrpB,EAEJ,CAMAwpC,iBACE,OAAO,IAAA9mC,WACT,CAOAgqC,qBACE,OAAO1vC,KAAKwlC,gBAAgB37B,MAAM,EAAG7J,KAAKqsB,OAC5C,CAKAD,qBACE,OAAOpsB,KAAKwlC,eACd,CAOAmK,oBACE,OAAO3vC,KAAKwlC,gBAAgB37B,MAC1B7J,KAAKwlC,gBAAgBvkC,OAASjB,KAAKqsB,OAEvC,CAOAgjB,YACE,OAAOrvC,KAAKgsC,MACd,CAOA3B,sBAAsBD,GAOpB,GANIpqC,KAAKiqC,6BAA+BjqC,KAAK0e,gBAC3C1e,KAAKgqC,yCAA2C,EAChDhqC,KAAKiqC,2BAA6BjqC,KAAK0e,eAKvC0rB,EAAmB,GACgC,IAAlDpqC,KAAKgqC,0CACJI,GAAoBpqC,KAAKgqC,yCAE3B,OAAOhqC,KAGT,MAAM4vC,EACJ5vC,KAAK0sC,8BAA8BtC,GAErC,OADkCwF,EAAmBxjB,qBACvBnrB,OAASjB,KAAKwlC,gBAAgBvkC,OACnD2uC,GAQT5vC,KAAKgqC,yCAA2CI,EACzCpqC,KACT,CAOA0sC,8BAA8BtC,GAC5B,OAAOpqC,IACT,CAKAssB,YACE,OAAOtsB,KAAKqsB,MACd,CAMA+f,mBAAmBJ,EAAQxG,GACzBxlC,KAAKqsB,OAASwjB,EAAmB7D,GACjChsC,KAAKgsC,OAASA,EACdhsC,KAAKwlC,gBAAkBA,CACzB,CAOA2G,eAAe3H,EAAawH,IAC1B,IAAAtmC,WACF,CAQAmnC,UAAUb,EAAQxH,EAAasL,GAE7B,IAAIzjB,EACJ,GAAI2f,EACF3f,EAASwjB,EAAmB7D,OACvB,CACL,IAAK,IAAIjrC,EAAI,EAAGA,EAAI+uC,IAAW/uC,EAAG,CAChC,GAA2B,IAAvByjC,EAAYvjC,OAGd,OAFAjB,KAAKgsC,OAAS,UACdhsC,KAAKqsB,OAAS,GAGhBmY,EAAoCA,EAAY,EAClD,CACAnY,EAASmY,EAAYvjC,OACrB+qC,EA4GN,SAA4B3f,GAC1B,IAAI2f,EACU,GAAV3f,EACF2f,EAAS,KACU,GAAV3f,EACT2f,EAAS,MACU,GAAV3f,IACT2f,EAAS,QAEX,OAA6D,CAC/D,CAtHe+D,CAAmB1jB,EAC9B,CACArsB,KAAKgsC,OAASA,EACdhsC,KAAKqsB,OAASA,CAChB,CAWA6b,eAAeC,GACTnoC,KAAKwlC,kBACP2C,EAAYnoC,KAAKwlC,gBAAiBxlC,KAAKwlC,gBAAiBxlC,KAAKqsB,QAC7DrsB,KAAK+D,UAET,CASA6kB,OAAOsT,EAAOlW,GACZ,MAAMwf,EAAkBxlC,KAAKosB,qBAC7B,GAAIoZ,EAAiB,CACnB,MAAMnZ,EAASrsB,KAAKssB,aACpB,IAAA1D,QACE4c,EACA,EACAA,EAAgBvkC,OAChBorB,EACA6P,EACAlW,EACAwf,GAEFxlC,KAAK+D,SACP,CACF,CAWAo4B,MAAM4O,EAAIC,EAAIhlB,QACD/hB,IAAP+mC,IACFA,EAAKD,GAEF/kB,IACHA,GAAS,IAAAZ,WAAUplB,KAAKyF,cAE1B,MAAM+/B,EAAkBxlC,KAAKosB,qBAC7B,GAAIoZ,EAAiB,CACnB,MAAMnZ,EAASrsB,KAAKssB,aACpB,IAAA6P,OACEqJ,EACA,EACAA,EAAgBvkC,OAChBorB,EACA0e,EACAC,EACAhlB,EACAwf,GAEFxlC,KAAK+D,SACP,CACF,CASAonC,UAAU1pB,EAAQC,GAChB,MAAM8jB,EAAkBxlC,KAAKosB,qBAC7B,GAAIoZ,EAAiB,CACnB,MAAMnZ,EAASrsB,KAAKssB,aACpB,IAAA6e,WACE3F,EACA,EACAA,EAAgBvkC,OAChBorB,EACA5K,EACAC,EACA8jB,GAEFxlC,KAAK+D,SACP,CACF,EAuBK,SAAS8rC,EAAmB7D,GACjC,IAAI3f,EAQJ,MAPc,MAAV2f,EACF3f,EAAS,EACU,OAAV2f,GAA6B,OAAVA,EAC5B3f,EAAS,EACU,QAAV2f,IACT3f,EAAS,GAEkB,CAC/B,CAQO,SAAS2jB,EAAgBC,EAAgBnkB,EAAW8Y,GACzD,MAAMY,EAAkByK,EAAe7jB,qBACvC,IAAKoZ,EACH,OAAO,KAET,MAAMnZ,EAAS4jB,EAAe3jB,YAC9B,OAAO,IAAAuf,aACLrG,EACA,EACAA,EAAgBvkC,OAChBorB,EACAP,EACA8Y,EAEJ,CAEA,2DCjVO,SAAS2H,EAAW/G,EAAiBta,EAAQljB,EAAKqkB,GACvD,IAAI6jB,EAAY,EACZjoB,EAAKud,EAAgBx9B,EAAMqkB,GAC3BnE,EAAKsd,EAAgBx9B,EAAMqkB,EAAS,GACxC,KAAOnB,EAASljB,EAAKkjB,GAAUmB,EAAQ,CACrC,MAAMuO,EAAK4K,EAAgBta,GACrB2P,EAAK2K,EAAgBta,EAAS,GACpCglB,GAAahoB,EAAK0S,EAAK3S,EAAK4S,EAC5B5S,EAAK2S,EACL1S,EAAK2S,CACP,CACA,OAAOqV,EAAY,CACrB,CASO,SAASpC,EAAYtI,EAAiBta,EAAQgiB,EAAM7gB,GACzD,IAAIka,EAAO,EACX,IAAK,IAAIxlC,EAAI,EAAGC,EAAKksC,EAAKjsC,OAAQF,EAAIC,IAAMD,EAAG,CAC7C,MAAMiH,EAAMklC,EAAKnsC,GACjBwlC,GAAQgG,EAAW/G,EAAiBta,EAAQljB,EAAKqkB,GACjDnB,EAASljB,CACX,CACA,OAAOu+B,CACT,CASO,SAAS4J,EAAa3K,EAAiBta,EAAQklB,EAAO/jB,GAC3D,IAAIka,EAAO,EACX,IAAK,IAAIxlC,EAAI,EAAGC,EAAKovC,EAAMnvC,OAAQF,EAAIC,IAAMD,EAAG,CAC9C,MAAMmsC,EAAOkD,EAAMrvC,GACnBwlC,GAAQuH,EAAYtI,EAAiBta,EAAQgiB,EAAM7gB,GACnDnB,EAASgiB,EAAKA,EAAKjsC,OAAS,EAC9B,CACA,OAAOslC,CACT,2VCxCA,SAAS8J,EACP7K,EACA8K,EACAC,EACAlkB,EACAzkB,EACAC,EACA2iC,GAEA,MAAMviB,EAAKud,EAAgB8K,GACrBpoB,EAAKsd,EAAgB8K,EAAU,GAC/BloC,EAAKo9B,EAAgB+K,GAAWtoB,EAChC5f,EAAKm9B,EAAgB+K,EAAU,GAAKroB,EAC1C,IAAIgD,EACJ,GAAW,IAAP9iB,GAAmB,IAAPC,EACd6iB,EAASolB,MACJ,CACL,MAAM1Q,IAAMh4B,EAAIqgB,GAAM7f,GAAMP,EAAIqgB,GAAM7f,IAAOD,EAAKA,EAAKC,EAAKA,GAC5D,GAAIu3B,EAAI,EACN1U,EAASqlB,MACJ,IAAI3Q,EAAI,EAAG,CAChB,IAAK,IAAI7+B,EAAI,EAAGA,EAAIsrB,IAAUtrB,EAC5BypC,EAAazpC,IAAK,IAAAyvC,MAChBhL,EAAgB8K,EAAUvvC,GAC1BykC,EAAgB+K,EAAUxvC,GAC1B6+B,GAIJ,YADA4K,EAAavpC,OAASorB,EAExB,CACEnB,EAASolB,CACX,CACF,CACA,IAAK,IAAIvvC,EAAI,EAAGA,EAAIsrB,IAAUtrB,EAC5BypC,EAAazpC,GAAKykC,EAAgBta,EAASnqB,GAE7CypC,EAAavpC,OAASorB,CACxB,CAYO,SAASggB,EAAgB7G,EAAiBta,EAAQljB,EAAKqkB,EAAQ5B,GACpE,IAAIxC,EAAKud,EAAgBta,GACrBhD,EAAKsd,EAAgBta,EAAS,GAClC,IAAKA,GAAUmB,EAAQnB,EAASljB,EAAKkjB,GAAUmB,EAAQ,CACrD,MAAMuO,EAAK4K,EAAgBta,GACrB2P,EAAK2K,EAAgBta,EAAS,GAC9BulB,GAAe,qBAAUxoB,EAAIC,EAAI0S,EAAIC,GACvC4V,EAAehmB,IACjBA,EAAMgmB,GAERxoB,EAAK2S,EACL1S,EAAK2S,CACP,CACA,OAAOpQ,CACT,CAUO,SAASijB,EACdlI,EACAta,EACAgiB,EACA7gB,EACA5B,GAEA,IAAK,IAAI1pB,EAAI,EAAGC,EAAKksC,EAAKjsC,OAAQF,EAAIC,IAAMD,EAAG,CAC7C,MAAMiH,EAAMklC,EAAKnsC,GACjB0pB,EAAM4hB,EAAgB7G,EAAiBta,EAAQljB,EAAKqkB,EAAQ5B,GAC5DS,EAASljB,CACX,CACA,OAAOyiB,CACT,CAUO,SAASimB,EACdlL,EACAta,EACAklB,EACA/jB,EACA5B,GAEA,IAAK,IAAI1pB,EAAI,EAAGC,EAAKovC,EAAMnvC,OAAQF,EAAIC,IAAMD,EAAG,CAC9C,MAAMmsC,EAAOkD,EAAMrvC,GACnB0pB,EAAMijB,EAAqBlI,EAAiBta,EAAQgiB,EAAM7gB,EAAQ5B,GAClES,EAASgiB,EAAKA,EAAKjsC,OAAS,EAC9B,CACA,OAAOwpB,CACT,CAgBO,SAAS6hB,EACd9G,EACAta,EACAljB,EACAqkB,EACAskB,EACAC,EACAhpC,EACAC,EACA2iC,EACAC,EACAoG,GAEA,GAAI3lB,GAAUljB,EACZ,OAAOyiC,EAET,IAAI1pC,EAAGq7B,EACP,GAAiB,IAAbuU,EAAgB,CAQlB,GANAvU,GAAkB,qBAChBx0B,EACAC,EACA29B,EAAgBta,GAChBsa,EAAgBta,EAAS,IAEvBkR,EAAkBqO,EAAoB,CACxC,IAAK1pC,EAAI,EAAGA,EAAIsrB,IAAUtrB,EACxBypC,EAAazpC,GAAKykC,EAAgBta,EAASnqB,GAG7C,OADAypC,EAAavpC,OAASorB,EACf+P,CACT,CACA,OAAOqO,CACT,CACAoG,EAAWA,GAAsB,CAACppB,IAAKA,KACvC,IAAIpnB,EAAQ6qB,EAASmB,EACrB,KAAOhsB,EAAQ2H,GAWb,GAVAqoC,EACE7K,EACAnlC,EAAQgsB,EACRhsB,EACAgsB,EACAzkB,EACAC,EACAgpC,GAEFzU,GAAkB,qBAAUx0B,EAAGC,EAAGgpC,EAAS,GAAIA,EAAS,IACpDzU,EAAkBqO,EAAoB,CAExC,IADAA,EAAqBrO,EAChBr7B,EAAI,EAAGA,EAAIsrB,IAAUtrB,EACxBypC,EAAazpC,GAAK8vC,EAAS9vC,GAE7BypC,EAAavpC,OAASorB,EACtBhsB,GAASgsB,CACX,MAWEhsB,GACEgsB,EACA/jB,KAAKmiB,KACDniB,KAAKE,KAAK4zB,GAAmB9zB,KAAKE,KAAKiiC,IACvCkG,EACA,EACF,GAIR,GAAIC,IAEFP,EACE7K,EACAx9B,EAAMqkB,EACNnB,EACAmB,EACAzkB,EACAC,EACAgpC,GAEFzU,GAAkB,qBAAUx0B,EAAGC,EAAGgpC,EAAS,GAAIA,EAAS,IACpDzU,EAAkBqO,GAAoB,CAExC,IADAA,EAAqBrO,EAChBr7B,EAAI,EAAGA,EAAIsrB,IAAUtrB,EACxBypC,EAAazpC,GAAK8vC,EAAS9vC,GAE7BypC,EAAavpC,OAASorB,CACxB,CAEF,OAAOoe,CACT,CAgBO,SAASkD,EACdnI,EACAta,EACAgiB,EACA7gB,EACAskB,EACAC,EACAhpC,EACAC,EACA2iC,EACAC,EACAoG,GAEAA,EAAWA,GAAsB,CAACppB,IAAKA,KACvC,IAAK,IAAI1mB,EAAI,EAAGC,EAAKksC,EAAKjsC,OAAQF,EAAIC,IAAMD,EAAG,CAC7C,MAAMiH,EAAMklC,EAAKnsC,GACjB0pC,EAAqB6B,EACnB9G,EACAta,EACAljB,EACAqkB,EACAskB,EACAC,EACAhpC,EACAC,EACA2iC,EACAC,EACAoG,GAEF3lB,EAASljB,CACX,CACA,OAAOyiC,CACT,CAgBO,SAASqG,EACdtL,EACAta,EACAklB,EACA/jB,EACAskB,EACAC,EACAhpC,EACAC,EACA2iC,EACAC,EACAoG,GAEAA,EAAWA,GAAsB,CAACppB,IAAKA,KACvC,IAAK,IAAI1mB,EAAI,EAAGC,EAAKovC,EAAMnvC,OAAQF,EAAIC,IAAMD,EAAG,CAC9C,MAAMmsC,EAAOkD,EAAMrvC,GACnB0pC,EAAqBkD,EACnBnI,EACAta,EACAgiB,EACA7gB,EACAskB,EACAC,EACAhpC,EACAC,EACA2iC,EACAC,EACAoG,GAEF3lB,EAASgiB,EAAKA,EAAKjsC,OAAS,EAC9B,CACA,OAAOwpC,CACT,iOClUO,SAASsG,EACdvL,EACAta,EACAljB,EACAqkB,EACArpB,GAmBA,QAjBgB,IAAAgjC,eACdhjC,GAKA,SAAUiM,GACR,OAAQ+hC,EACNxL,EACAta,EACAljB,EACAqkB,EACApd,EAAW,GACXA,EAAW,GAEf,GAGJ,CAWO,SAAS+hC,EACdxL,EACAta,EACAljB,EACAqkB,EACAzkB,EACAC,GASA,IAAIopC,EAAK,EACLhpB,EAAKud,EAAgBx9B,EAAMqkB,GAC3BnE,EAAKsd,EAAgBx9B,EAAMqkB,EAAS,GACxC,KAAOnB,EAASljB,EAAKkjB,GAAUmB,EAAQ,CACrC,MAAMuO,EAAK4K,EAAgBta,GACrB2P,EAAK2K,EAAgBta,EAAS,GAChChD,GAAMrgB,EACJgzB,EAAKhzB,IAAM+yB,EAAK3S,IAAOpgB,EAAIqgB,IAAOtgB,EAAIqgB,IAAO4S,EAAK3S,GAAM,GAC1D+oB,IAEOpW,GAAMhzB,IAAM+yB,EAAK3S,IAAOpgB,EAAIqgB,IAAOtgB,EAAIqgB,IAAO4S,EAAK3S,GAAM,GAClE+oB,IAEFhpB,EAAK2S,EACL1S,EAAK2S,CACP,CACA,OAAc,IAAPoW,CACT,CAWO,SAASrD,EACdpI,EACAta,EACAgiB,EACA7gB,EACAzkB,EACAC,GAEA,GAAoB,IAAhBqlC,EAAKjsC,OACP,OAAO,EAET,IAAK+vC,EAAqBxL,EAAiBta,EAAQgiB,EAAK,GAAI7gB,EAAQzkB,EAAGC,GACrE,OAAO,EAET,IAAK,IAAI9G,EAAI,EAAGC,EAAKksC,EAAKjsC,OAAQF,EAAIC,IAAMD,EAC1C,GACEiwC,EAAqBxL,EAAiB0H,EAAKnsC,EAAI,GAAImsC,EAAKnsC,GAAIsrB,EAAQzkB,EAAGC,GAEvE,OAAO,EAGX,OAAO,CACT,CAWO,SAASqpC,EACd1L,EACAta,EACAklB,EACA/jB,EACAzkB,EACAC,GAEA,GAAqB,IAAjBuoC,EAAMnvC,OACR,OAAO,EAET,IAAK,IAAIF,EAAI,EAAGC,EAAKovC,EAAMnvC,OAAQF,EAAIC,IAAMD,EAAG,CAC9C,MAAMmsC,EAAOkD,EAAMrvC,GACnB,GAAI6sC,EAAsBpI,EAAiBta,EAAQgiB,EAAM7gB,EAAQzkB,EAAGC,GAClE,OAAO,EAETqjB,EAASgiB,EAAKA,EAAKjsC,OAAS,EAC9B,CACA,OAAO,CACT,sDCrIO,SAAS+rC,EAAkBxH,EAAiBta,EAAQjc,EAAYod,GACrE,IAAK,IAAItrB,EAAI,EAAGC,EAAKiO,EAAWhO,OAAQF,EAAIC,IAAMD,EAChDykC,EAAgBta,KAAYjc,EAAWlO,GAEzC,OAAOmqB,CACT,CASO,SAAS4hB,EACdtH,EACAta,EACAsZ,EACAnY,GAEA,IAAK,IAAItrB,EAAI,EAAGC,EAAKwjC,EAAYvjC,OAAQF,EAAIC,IAAMD,EAAG,CACpD,MAAMkO,EAAau1B,EAAYzjC,GAC/B,IAAK,IAAIwmB,EAAI,EAAGA,EAAI8E,IAAU9E,EAC5Bie,EAAgBta,KAAYjc,EAAWsY,EAE3C,CACA,OAAO2D,CACT,CAUO,SAAS4jB,EACdtJ,EACAta,EACAimB,EACA9kB,EACA6gB,GAEAA,EAAOA,GAAc,GACrB,IAAInsC,EAAI,EACR,IAAK,IAAIwmB,EAAI,EAAGC,EAAK2pB,EAAalwC,OAAQsmB,EAAIC,IAAMD,EAAG,CACrD,MAAMvf,EAAM8kC,EACVtH,EACAta,EACAimB,EAAa5pB,GACb8E,GAEF6gB,EAAKnsC,KAAOiH,EACZkjB,EAASljB,CACX,CAEA,OADAklC,EAAKjsC,OAASF,EACPmsC,CACT,CAUO,SAASkE,EACd5L,EACAta,EACAmmB,EACAhlB,EACA+jB,GAEAA,EAAQA,GAAgB,GACxB,IAAIrvC,EAAI,EACR,IAAK,IAAIwmB,EAAI,EAAGC,EAAK6pB,EAAcpwC,OAAQsmB,EAAIC,IAAMD,EAAG,CACtD,MAAM2lB,EAAO4B,EACXtJ,EACAta,EACAmmB,EAAc9pB,GACd8E,EACA+jB,EAAMrvC,IAEY,IAAhBmsC,EAAKjsC,SACPisC,EAAK,GAAKhiB,GAEZklB,EAAMrvC,KAAOmsC,EACbhiB,EAASgiB,EAAKA,EAAKjsC,OAAS,EAC9B,CAEA,OADAmvC,EAAMnvC,OAASF,EACRqvC,CACT,uLC5FO,SAAS3D,EACdjH,EACAta,EACAljB,EACAqkB,EACAmY,GAEAA,OAA8BvgC,IAAhBugC,EAA4BA,EAAc,GACxD,IAAIzjC,EAAI,EACR,IAAK,IAAIwmB,EAAI2D,EAAQ3D,EAAIvf,EAAKuf,GAAK8E,EACjCmY,EAAYzjC,KAAOykC,EAAgB37B,MAAM0d,EAAGA,EAAI8E,GAGlD,OADAmY,EAAYvjC,OAASF,EACdyjC,CACT,CAUO,SAASyJ,EACdzI,EACAta,EACAgiB,EACA7gB,EACA8kB,GAEAA,OAAgCltC,IAAjBktC,EAA6BA,EAAe,GAC3D,IAAIpwC,EAAI,EACR,IAAK,IAAIwmB,EAAI,EAAGC,EAAK0lB,EAAKjsC,OAAQsmB,EAAIC,IAAMD,EAAG,CAC7C,MAAMvf,EAAMklC,EAAK3lB,GACjB4pB,EAAapwC,KAAO0rC,EAClBjH,EACAta,EACAljB,EACAqkB,EACA8kB,EAAapwC,IAEfmqB,EAASljB,CACX,CAEA,OADAmpC,EAAalwC,OAASF,EACfowC,CACT,CAWO,SAASG,EACd9L,EACAta,EACAklB,EACA/jB,EACAglB,GAEAA,OAAkCptC,IAAlBotC,EAA8BA,EAAgB,GAC9D,IAAItwC,EAAI,EACR,IAAK,IAAIwmB,EAAI,EAAGC,EAAK4oB,EAAMnvC,OAAQsmB,EAAIC,IAAMD,EAAG,CAC9C,MAAM2lB,EAAOkD,EAAM7oB,GACnB8pB,EAActwC,KACI,IAAhBmsC,EAAKjsC,QAAgBisC,EAAK,KAAOhiB,EAC7B,GACA+iB,EACEzI,EACAta,EACAgiB,EACA7gB,EACAglB,EAActwC,IAEtBmqB,EAASgiB,EAAKA,EAAKjsC,OAAS,EAC9B,CAEA,OADAowC,EAAcpwC,OAASF,EAChBswC,CACT,4UC3EO,SAAShD,EACd7I,EACAta,EACAgiB,EACA7gB,EACAklB,EACAC,EACA5M,GAEA,IAAI7jC,EAAGC,EAAI4G,EAAGqgB,EAAI2S,EAAI1S,EAAI2S,EAC1B,MAAMhzB,EAAI0pC,EAAYC,EAAoB,GAEpCC,EAAgB,GAEtB,IAAK,IAAItd,EAAI,EAAGud,EAAKxE,EAAKjsC,OAAQkzB,EAAIud,IAAMvd,EAAG,CAC7C,MAAMnsB,EAAMklC,EAAK/Y,GAGjB,IAFAlM,EAAKud,EAAgBx9B,EAAMqkB,GAC3BnE,EAAKsd,EAAgBx9B,EAAMqkB,EAAS,GAC/BtrB,EAAImqB,EAAQnqB,EAAIiH,EAAKjH,GAAKsrB,EAC7BuO,EAAK4K,EAAgBzkC,GACrB85B,EAAK2K,EAAgBzkC,EAAI,IACpB8G,GAAKqgB,GAAM2S,GAAMhzB,GAAOqgB,GAAMrgB,GAAKA,GAAKgzB,KAC3CjzB,GAAMC,EAAIqgB,IAAO2S,EAAK3S,IAAQ0S,EAAK3S,GAAMA,EACzCwpB,EAAchwC,KAAKmG,IAErBqgB,EAAK2S,EACL1S,EAAK2S,CAET,CAGA,IAAI8W,EAASlqB,IACTmqB,GAAoBplB,IAGxB,IAFAilB,EAAcnf,KAAK,EAAAjB,WACnBpJ,EAAKwpB,EAAc,GACd1wC,EAAI,EAAGC,EAAKywC,EAAcxwC,OAAQF,EAAIC,IAAMD,EAAG,CAClD65B,EAAK6W,EAAc1wC,GACnB,MAAM8wC,EAAgBvpC,KAAK0T,IAAI4e,EAAK3S,GAChC4pB,EAAgBD,IAClBhqC,GAAKqgB,EAAK2S,GAAM,GACZ,IAAAgT,uBAAsBpI,EAAiBta,EAAQgiB,EAAM7gB,EAAQzkB,EAAGC,KAClE8pC,EAAS/pC,EACTgqC,EAAmBC,IAGvB5pB,EAAK2S,CACP,CAMA,OALI3iB,MAAM05B,KAGRA,EAASJ,EAAYC,IAEnB5M,GACFA,EAAKnjC,KAAKkwC,EAAQ9pC,EAAG+pC,GACdhN,GAEF,CAAC+M,EAAQ9pC,EAAG+pC,EACrB,CAWO,SAASE,EACdtM,EACAta,EACAklB,EACA/jB,EACAklB,GAEA,IAAIQ,EAAiB,GACrB,IAAK,IAAIhxC,EAAI,EAAGC,EAAKovC,EAAMnvC,OAAQF,EAAIC,IAAMD,EAAG,CAC9C,MAAMmsC,EAAOkD,EAAMrvC,GACnBgxC,EAAiB1D,EACf7I,EACAta,EACAgiB,EACA7gB,EACAklB,EACA,EAAIxwC,EACJgxC,GAEF7mB,EAASgiB,EAAKA,EAAKjsC,OAAS,EAC9B,CACA,OAAO8wC,CACT,+WCxFO,SAASC,EACdxM,EACAta,EACAljB,EACAqkB,EACArpB,GAEA,MAAMivC,GAAoB,IAAAxM,wBACxB,IAAAhB,eACAe,EACAta,EACAljB,EACAqkB,GAEF,SAAK,IAAAhK,YAAWrf,EAAQivC,QAGpB,IAAAlN,gBAAe/hC,EAAQivC,KAGvBA,EAAkB,IAAMjvC,EAAO,IAAMivC,EAAkB,IAAMjvC,EAAO,KAGpEivC,EAAkB,IAAMjvC,EAAO,IAAMivC,EAAkB,IAAMjvC,EAAO,KAGjE,IAAAtB,SACL8jC,EACAta,EACAljB,EACAqkB,GAOA,SAAU6lB,EAAQC,GAChB,OAAO,IAAAzK,mBAAkB1kC,EAAQkvC,EAAQC,EAC3C,MAEJ,CAUO,SAASC,EACd5M,EACAta,EACAgiB,EACA7gB,EACArpB,GAEA,IAAK,IAAIjC,EAAI,EAAGC,EAAKksC,EAAKjsC,OAAQF,EAAIC,IAAMD,EAAG,CAC7C,GACEixC,EAAqBxM,EAAiBta,EAAQgiB,EAAKnsC,GAAIsrB,EAAQrpB,GAE/D,OAAO,EAETkoB,EAASgiB,EAAKnsC,EAChB,CACA,OAAO,CACT,CAUO,SAASsxC,EACd7M,EACAta,EACAljB,EACAqkB,EACArpB,GAEA,QAAIgvC,EAAqBxM,EAAiBta,EAAQljB,EAAKqkB,EAAQrpB,QAI7D,IAAAguC,sBACExL,EACAta,EACAljB,EACAqkB,EACArpB,EAAO,GACPA,EAAO,SAMT,IAAAguC,sBACExL,EACAta,EACAljB,EACAqkB,EACArpB,EAAO,GACPA,EAAO,SAMT,IAAAguC,sBACExL,EACAta,EACAljB,EACAqkB,EACArpB,EAAO,GACPA,EAAO,QAMT,IAAAguC,sBACExL,EACAta,EACAljB,EACAqkB,EACArpB,EAAO,GACPA,EAAO,MAMb,CAUO,SAAS6rC,EACdrJ,EACAta,EACAgiB,EACA7gB,EACArpB,GAEA,IAAKqvC,EAAqB7M,EAAiBta,EAAQgiB,EAAK,GAAI7gB,EAAQrpB,GAClE,OAAO,EAET,GAAoB,IAAhBkqC,EAAKjsC,OACP,OAAO,EAET,IAAK,IAAIF,EAAI,EAAGC,EAAKksC,EAAKjsC,OAAQF,EAAIC,IAAMD,EAC1C,IACE,IAAAgwC,0BACEvL,EACA0H,EAAKnsC,EAAI,GACTmsC,EAAKnsC,GACLsrB,EACArpB,KAICgvC,EACCxM,EACA0H,EAAKnsC,EAAI,GACTmsC,EAAKnsC,GACLsrB,EACArpB,GAGF,OAAO,EAIb,OAAO,CACT,CAUO,SAASsvC,EACd9M,EACAta,EACAklB,EACA/jB,EACArpB,GAEA,IAAK,IAAIjC,EAAI,EAAGC,EAAKovC,EAAMnvC,OAAQF,EAAIC,IAAMD,EAAG,CAC9C,MAAMmsC,EAAOkD,EAAMrvC,GACnB,GACE8tC,EAA0BrJ,EAAiBta,EAAQgiB,EAAM7gB,EAAQrpB,GAEjE,OAAO,EAETkoB,EAASgiB,EAAKA,EAAKjsC,OAAS,EAC9B,CACA,OAAO,CACT,qRCxNO,SAASsxC,EAAsB/M,EAAiBta,EAAQljB,EAAKqkB,GAGlE,IAAImmB,EAAO,EACPvqB,EAAKud,EAAgBx9B,EAAMqkB,GAC3BnE,EAAKsd,EAAgBx9B,EAAMqkB,EAAS,GACxC,KAAOnB,EAASljB,EAAKkjB,GAAUmB,EAAQ,CACrC,MAAMuO,EAAK4K,EAAgBta,GACrB2P,EAAK2K,EAAgBta,EAAS,GACpCsnB,IAAS5X,EAAK3S,IAAO4S,EAAK3S,GAC1BD,EAAK2S,EACL1S,EAAK2S,CACP,CACA,OAAgB,IAAT2X,OAAavuC,EAAYuuC,EAAO,CACzC,CAeO,SAAS9D,EACdlJ,EACAta,EACAgiB,EACA7gB,EACA0hB,GAEAA,OAAkB9pC,IAAV8pC,GAAsBA,EAC9B,IAAK,IAAIhtC,EAAI,EAAGC,EAAKksC,EAAKjsC,OAAQF,EAAIC,IAAMD,EAAG,CAC7C,MAAMiH,EAAMklC,EAAKnsC,GACX0xC,EAAcF,EAClB/M,EACAta,EACAljB,EACAqkB,GAEF,GAAU,IAANtrB,GACF,GAAKgtC,GAAS0E,IAAkB1E,IAAU0E,EACxC,OAAO,OAGT,GAAK1E,IAAU0E,IAAkB1E,GAAS0E,EACxC,OAAO,EAGXvnB,EAASljB,CACX,CACA,OAAO,CACT,CAeO,SAAS0qC,EACdlN,EACAta,EACAklB,EACA/jB,EACA0hB,GAEA,IAAK,IAAIhtC,EAAI,EAAGC,EAAKovC,EAAMnvC,OAAQF,EAAIC,IAAMD,EAAG,CAC9C,MAAMmsC,EAAOkD,EAAMrvC,GACnB,IAAK2tC,EAAuBlJ,EAAiBta,EAAQgiB,EAAM7gB,EAAQ0hB,GACjE,OAAO,EAELb,EAAKjsC,SACPiqB,EAASgiB,EAAKA,EAAKjsC,OAAS,GAEhC,CACA,OAAO,CACT,CAeO,SAAS+sC,EACdxI,EACAta,EACAgiB,EACA7gB,EACA0hB,GAEAA,OAAkB9pC,IAAV8pC,GAAsBA,EAC9B,IAAK,IAAIhtC,EAAI,EAAGC,EAAKksC,EAAKjsC,OAAQF,EAAIC,IAAMD,EAAG,CAC7C,MAAMiH,EAAMklC,EAAKnsC,GACX0xC,EAAcF,EAClB/M,EACAta,EACAljB,EACAqkB,IAGM,IAANtrB,EACKgtC,GAAS0E,IAAkB1E,IAAU0E,EACrC1E,IAAU0E,IAAkB1E,GAAS0E,KAE1C,iBAAmBjN,EAAiBta,EAAQljB,EAAKqkB,GAEnDnB,EAASljB,CACX,CACA,OAAOkjB,CACT,CAeO,SAASynB,EACdnN,EACAta,EACAklB,EACA/jB,EACA0hB,GAEA,IAAK,IAAIhtC,EAAI,EAAGC,EAAKovC,EAAMnvC,OAAQF,EAAIC,IAAMD,EAC3CmqB,EAAS8iB,EACPxI,EACAta,EACAklB,EAAMrvC,GACNsrB,EACA0hB,GAGJ,OAAO7iB,CACT,CASO,SAAS0nB,EAAYpN,EAAiB0H,GAC3C,MAAMkD,EAAQ,GACd,IAAIllB,EAAS,EACT2nB,EAAe,EACnB,IAAK,IAAI9xC,EAAI,EAAGC,EAAKksC,EAAKjsC,OAAQF,EAAIC,IAAMD,EAAG,CAC7C,MAAMiH,EAAMklC,EAAKnsC,GAEjB,GAAKwxC,EAAsB/M,EAAiBta,EAAQljB,EAAK,GAElD,CACL,GAAqB,IAAjBooC,EAAMnvC,OACR,SAEFmvC,EAAMA,EAAMnvC,OAAS,GAAGQ,KAAKyrC,EAAK2F,GACpC,MANEzC,EAAM3uC,KAAKyrC,EAAKrjC,MAAMgpC,EAAc9xC,EAAI,IAO1C8xC,EAAe9xC,EAAI,EACnBmqB,EAASljB,CACX,CACA,OAAOooC,CACT,sDCnMO,SAAS5L,EAAYgB,EAAiBta,EAAQljB,EAAKqkB,GACxD,KAAOnB,EAASljB,EAAMqkB,GAAQ,CAC5B,IAAK,IAAItrB,EAAI,EAAGA,EAAIsrB,IAAUtrB,EAAG,CAC/B,MAAM6wB,EAAM4T,EAAgBta,EAASnqB,GACrCykC,EAAgBta,EAASnqB,GAAKykC,EAAgBx9B,EAAMqkB,EAAStrB,GAC7DykC,EAAgBx9B,EAAMqkB,EAAStrB,GAAK6wB,CACtC,CACA1G,GAAUmB,EACVrkB,GAAOqkB,CACT,CACF,wFCHO,SAAS3qB,EAAQ8jC,EAAiBta,EAAQljB,EAAKqkB,EAAQrd,GAC5D,IAAI8jC,EAEJ,IADA5nB,GAAUmB,EACHnB,EAASljB,EAAKkjB,GAAUmB,EAK7B,GAJAymB,EAAM9jC,EACJw2B,EAAgB37B,MAAMqhB,EAASmB,EAAQnB,GACvCsa,EAAgB37B,MAAMqhB,EAAQA,EAASmB,IAErCymB,EACF,OAAOA,EAGX,OAAO,CACT,4UCYO,SAASC,EACdvN,EACAta,EACAljB,EACAqkB,EACA+d,EACA4I,EACArG,GA2BA,OAzBAA,OACgC1oC,IAA9B0oC,EAA0CA,EAA4B,GACnEqG,IACHhrC,EAAMirC,EACJzN,EACAta,EACAljB,EACAqkB,EACA+d,EACAuC,EACA,GAEFnH,EAAkBmH,EAClBzhB,EAAS,EACTmB,EAAS,GAEXsgB,EAA0B1rC,OAAS2rC,EACjCpH,EACAta,EACAljB,EACAqkB,EACA+d,EACAuC,EACA,GAEKA,CACT,CAaO,SAASC,EACdpH,EACAta,EACAljB,EACAqkB,EACA+d,EACAuC,EACAuG,GAEA,MAAM9wC,GAAK4F,EAAMkjB,GAAUmB,EAC3B,GAAIjqB,EAAI,EAAG,CACT,KAAO8oB,EAASljB,EAAKkjB,GAAUmB,EAC7BsgB,EAA0BuG,KAAsB1N,EAAgBta,GAChEyhB,EAA0BuG,KACxB1N,EAAgBta,EAAS,GAE7B,OAAOgoB,CACT,CAEA,MAAMC,EAAU,IAAIxpC,MAAMvH,GAC1B+wC,EAAQ,GAAK,EACbA,EAAQ/wC,EAAI,GAAK,EAEjB,MAAMgxC,EAAQ,CAACloB,EAAQljB,EAAMqkB,GAC7B,IAAIhsB,EAAQ,EACZ,KAAO+yC,EAAMnyC,OAAS,GAAG,CACvB,MAAMoyC,EAAOD,EAAM9xC,MACbgyC,EAAQF,EAAM9xC,MACpB,IAAIiyC,EAAqB,EACzB,MAAMtrB,EAAKud,EAAgB8N,GACrBprB,EAAKsd,EAAgB8N,EAAQ,GAC7B1Y,EAAK4K,EAAgB6N,GACrBxY,EAAK2K,EAAgB6N,EAAO,GAClC,IAAK,IAAItyC,EAAIuyC,EAAQjnB,EAAQtrB,EAAIsyC,EAAMtyC,GAAKsrB,EAAQ,CAClD,MAAMzkB,EAAI49B,EAAgBzkC,GACpB8G,EAAI29B,EAAgBzkC,EAAI,GACxBq7B,GAAkB,IAAAoX,wBAAuB5rC,EAAGC,EAAGogB,EAAIC,EAAI0S,EAAIC,GAC7DuB,EAAkBmX,IACpBlzC,EAAQU,EACRwyC,EAAqBnX,EAEzB,CACImX,EAAqBnJ,IACvB+I,GAAS9yC,EAAQ6qB,GAAUmB,GAAU,EACjCinB,EAAQjnB,EAAShsB,GACnB+yC,EAAM3xC,KAAK6xC,EAAOjzC,GAEhBA,EAAQgsB,EAASgnB,GACnBD,EAAM3xC,KAAKpB,EAAOgzC,GAGxB,CACA,IAAK,IAAItyC,EAAI,EAAGA,EAAIqB,IAAKrB,EACnBoyC,EAAQpyC,KACV4rC,EAA0BuG,KACxB1N,EAAgBta,EAASnqB,EAAIsrB,GAC/BsgB,EAA0BuG,KACxB1N,EAAgBta,EAASnqB,EAAIsrB,EAAS,IAG5C,OAAO6mB,CACT,CAcO,SAASO,EACdjO,EACAta,EACAgiB,EACA7gB,EACA+d,EACAuC,EACAuG,EACAvE,GAEA,IAAK,IAAI5tC,EAAI,EAAGC,EAAKksC,EAAKjsC,OAAQF,EAAIC,IAAMD,EAAG,CAC7C,MAAMiH,EAAMklC,EAAKnsC,GACjBmyC,EAAmBtG,EACjBpH,EACAta,EACAljB,EACAqkB,EACA+d,EACAuC,EACAuG,GAEFvE,EAAeltC,KAAKyxC,GACpBhoB,EAASljB,CACX,CACA,OAAOkrC,CACT,CAcO,SAASQ,EACdlO,EACAta,EACAklB,EACA/jB,EACA+d,EACAuC,EACAuG,EACAS,GAEA,IAAK,IAAI5yC,EAAI,EAAGC,EAAKovC,EAAMnvC,OAAQF,EAAIC,IAAMD,EAAG,CAC9C,MAAMmsC,EAAOkD,EAAMrvC,GACb4tC,EAAiB,GACvBuE,EAAmBO,EACjBjO,EACAta,EACAgiB,EACA7gB,EACA+d,EACAuC,EACAuG,EACAvE,GAEFgF,EAAgBlyC,KAAKktC,GACrBzjB,EAASgiB,EAAKA,EAAKjsC,OAAS,EAC9B,CACA,OAAOiyC,CACT,CAaO,SAASD,EACdzN,EACAta,EACAljB,EACAqkB,EACA+d,EACAuC,EACAuG,GAEA,GAAIlrC,GAAOkjB,EAASmB,EAAQ,CAE1B,KAAOnB,EAASljB,EAAKkjB,GAAUmB,EAC7BsgB,EAA0BuG,KAAsB1N,EAAgBta,GAChEyhB,EAA0BuG,KACxB1N,EAAgBta,EAAS,GAE7B,OAAOgoB,CACT,CACA,IAAIjrB,EAAKud,EAAgBta,GACrBhD,EAAKsd,EAAgBta,EAAS,GAElCyhB,EAA0BuG,KAAsBjrB,EAChD0kB,EAA0BuG,KAAsBhrB,EAChD,IAAI0S,EAAK3S,EACL4S,EAAK3S,EACT,IAAKgD,GAAUmB,EAAQnB,EAASljB,EAAKkjB,GAAUmB,EAC7CuO,EAAK4K,EAAgBta,GACrB2P,EAAK2K,EAAgBta,EAAS,IAC1B,IAAAkR,iBAAgBnU,EAAIC,EAAI0S,EAAIC,GAAMuP,IAEpCuC,EAA0BuG,KAAsBtY,EAChD+R,EAA0BuG,KAAsBrY,EAChD5S,EAAK2S,EACL1S,EAAK2S,GAQT,OALID,GAAM3S,GAAM4S,GAAM3S,IAEpBykB,EAA0BuG,KAAsBtY,EAChD+R,EAA0BuG,KAAsBrY,GAE3CqY,CACT,CAOO,SAASU,EAAKj4B,EAAOmqB,GAC1B,OAAOA,EAAYx9B,KAAKysB,MAAMpZ,EAAQmqB,EACxC,CAqBO,SAAS+N,EACdrO,EACAta,EACAljB,EACAqkB,EACAyZ,EACA6G,EACAuG,GAGA,GAAIhoB,GAAUljB,EACZ,OAAOkrC,EAGT,IAQItY,EAAIC,EARJ5S,EAAK2rB,EAAKpO,EAAgBta,GAAS4a,GACnC5d,EAAK0rB,EAAKpO,EAAgBta,EAAS,GAAI4a,GAC3C5a,GAAUmB,EAEVsgB,EAA0BuG,KAAsBjrB,EAChD0kB,EAA0BuG,KAAsBhrB,EAIhD,GAIE,GAHA0S,EAAKgZ,EAAKpO,EAAgBta,GAAS4a,GACnCjL,EAAK+Y,EAAKpO,EAAgBta,EAAS,GAAI4a,IACvC5a,GAAUmB,IACIrkB,EAOZ,OAFA2kC,EAA0BuG,KAAsBtY,EAChD+R,EAA0BuG,KAAsBrY,EACzCqY,QAEFtY,GAAM3S,GAAM4S,GAAM3S,GAC3B,KAAOgD,EAASljB,GAAK,CAEnB,MAAM2+B,EAAKiN,EAAKpO,EAAgBta,GAAS4a,GACnCc,EAAKgN,EAAKpO,EAAgBta,EAAS,GAAI4a,GAG7C,GAFA5a,GAAUmB,EAENsa,GAAM/L,GAAMgM,GAAM/L,EACpB,SAGF,MAAMiZ,EAAMlZ,EAAK3S,EACX8rB,EAAMlZ,EAAK3S,EAEX8rB,EAAMrN,EAAK1e,EACXgsB,EAAMrN,EAAK1e,EAKf4rB,EAAMG,GAAOF,EAAMC,IACjBF,EAAM,GAAKE,EAAMF,GAAQA,GAAOE,GAAQF,EAAM,GAAKE,EAAMF,KACzDC,EAAM,GAAKE,EAAMF,GAAQA,GAAOE,GAAQF,EAAM,GAAKE,EAAMF,IAG3DnZ,EAAK+L,EACL9L,EAAK+L,IAMP+F,EAA0BuG,KAAsBtY,EAChD+R,EAA0BuG,KAAsBrY,EAChD5S,EAAK2S,EACL1S,EAAK2S,EACLD,EAAK+L,EACL9L,EAAK+L,EACP,CAIA,OAFA+F,EAA0BuG,KAAsBtY,EAChD+R,EAA0BuG,KAAsBrY,EACzCqY,CACT,CAcO,SAAStE,EACdpJ,EACAta,EACAgiB,EACA7gB,EACAyZ,EACA6G,EACAuG,EACAvE,GAEA,IAAK,IAAI5tC,EAAI,EAAGC,EAAKksC,EAAKjsC,OAAQF,EAAIC,IAAMD,EAAG,CAC7C,MAAMiH,EAAMklC,EAAKnsC,GACjBmyC,EAAmBW,EACjBrO,EACAta,EACAljB,EACAqkB,EACAyZ,EACA6G,EACAuG,GAEFvE,EAAeltC,KAAKyxC,GACpBhoB,EAASljB,CACX,CACA,OAAOkrC,CACT,CAcO,SAASgB,EACd1O,EACAta,EACAklB,EACA/jB,EACAyZ,EACA6G,EACAuG,EACAS,GAEA,IAAK,IAAI5yC,EAAI,EAAGC,EAAKovC,EAAMnvC,OAAQF,EAAIC,IAAMD,EAAG,CAC9C,MAAMmsC,EAAOkD,EAAMrvC,GACb4tC,EAAiB,GACvBuE,EAAmBtE,EACjBpJ,EACAta,EACAgiB,EACA7gB,EACAyZ,EACA6G,EACAuG,EACAvE,GAEFgF,EAAgBlyC,KAAKktC,GACrBzjB,EAASgiB,EAAKA,EAAKjsC,OAAS,EAC9B,CACA,OAAOiyC,CACT,wDC9cO,SAASrH,EACdrG,EACAta,EACAljB,EACAqkB,EACAP,EACA8Y,GAEAA,EAAOA,GAAc,GACrB,IAAI7jC,EAAI,EACR,IAAK,IAAIwmB,EAAI2D,EAAQ3D,EAAIvf,EAAKuf,GAAK8E,EAAQ,CACzC,MAAMzkB,EAAI49B,EAAgBje,GACpB1f,EAAI29B,EAAgBje,EAAI,GAC9Bqd,EAAK7jC,KAAO+qB,EAAU,GAAKlkB,EAAIkkB,EAAU,GAAKjkB,EAAIikB,EAAU,GAC5D8Y,EAAK7jC,KAAO+qB,EAAU,GAAKlkB,EAAIkkB,EAAU,GAAKjkB,EAAIikB,EAAU,EAC9D,CAIA,OAHI8Y,GAAQA,EAAK3jC,QAAUF,IACzB6jC,EAAK3jC,OAASF,GAET6jC,CACT,CAYO,SAAShc,EACd4c,EACAta,EACAljB,EACAqkB,EACA6P,EACAlW,EACA4e,GAEAA,EAAOA,GAAc,GACrB,MAAM3b,EAAM3gB,KAAK2gB,IAAIiT,GACfhT,EAAM5gB,KAAK4gB,IAAIgT,GACfiY,EAAUnuB,EAAO,GACjBouB,EAAUpuB,EAAO,GACvB,IAAIjlB,EAAI,EACR,IAAK,IAAIwmB,EAAI2D,EAAQ3D,EAAIvf,EAAKuf,GAAK8E,EAAQ,CACzC,MAAM5K,EAAS+jB,EAAgBje,GAAK4sB,EAC9BzyB,EAAS8jB,EAAgBje,EAAI,GAAK6sB,EACxCxP,EAAK7jC,KAAOozC,EAAU1yB,EAASwH,EAAMvH,EAASwH,EAC9C0b,EAAK7jC,KAAOqzC,EAAU3yB,EAASyH,EAAMxH,EAASuH,EAC9C,IAAK,IAAIorB,EAAI9sB,EAAI,EAAG8sB,EAAI9sB,EAAI8E,IAAUgoB,EACpCzP,EAAK7jC,KAAOykC,EAAgB6O,EAEhC,CAIA,OAHIzP,GAAQA,EAAK3jC,QAAUF,IACzB6jC,EAAK3jC,OAASF,GAET6jC,CACT,CAcO,SAASzI,EACdqJ,EACAta,EACAljB,EACAqkB,EACA0e,EACAC,EACAhlB,EACA4e,GAEAA,EAAOA,GAAc,GACrB,MAAMuP,EAAUnuB,EAAO,GACjBouB,EAAUpuB,EAAO,GACvB,IAAIjlB,EAAI,EACR,IAAK,IAAIwmB,EAAI2D,EAAQ3D,EAAIvf,EAAKuf,GAAK8E,EAAQ,CACzC,MAAM5K,EAAS+jB,EAAgBje,GAAK4sB,EAC9BzyB,EAAS8jB,EAAgBje,EAAI,GAAK6sB,EACxCxP,EAAK7jC,KAAOozC,EAAUpJ,EAAKtpB,EAC3BmjB,EAAK7jC,KAAOqzC,EAAUpJ,EAAKtpB,EAC3B,IAAK,IAAI2yB,EAAI9sB,EAAI,EAAG8sB,EAAI9sB,EAAI8E,IAAUgoB,EACpCzP,EAAK7jC,KAAOykC,EAAgB6O,EAEhC,CAIA,OAHIzP,GAAQA,EAAK3jC,QAAUF,IACzB6jC,EAAK3jC,OAASF,GAET6jC,CACT,CAYO,SAASuG,EACd3F,EACAta,EACAljB,EACAqkB,EACA5K,EACAC,EACAkjB,GAEAA,EAAOA,GAAc,GACrB,IAAI7jC,EAAI,EACR,IAAK,IAAIwmB,EAAI2D,EAAQ3D,EAAIvf,EAAKuf,GAAK8E,EAAQ,CACzCuY,EAAK7jC,KAAOykC,EAAgBje,GAAK9F,EACjCmjB,EAAK7jC,KAAOykC,EAAgBje,EAAI,GAAK7F,EACrC,IAAK,IAAI2yB,EAAI9sB,EAAI,EAAG8sB,EAAI9sB,EAAI8E,IAAUgoB,EACpCzP,EAAK7jC,KAAOykC,EAAgB6O,EAEhC,CAIA,OAHIzP,GAAQA,EAAK3jC,QAAUF,IACzB6jC,EAAK3jC,OAASF,GAET6jC,CACT,oTChJA,MAAM0P,EACiB,oBAAdC,gBAA4D,IAAxBA,UAAUC,UACjDD,UAAUC,UAAUC,cACpB,GAMOC,EAAUJ,EAAG3S,SAAS,WAMtBgT,EAASL,EAAG3S,SAAS,YAAc2S,EAAG3S,SAAS,SAM/CiT,EACXD,IACCL,EAAG3S,SAAS,iBACX,wCAAwC1M,KAAKqf,IAMpCnR,EAASmR,EAAG3S,SAAS,YAAc2S,EAAG3S,SAAS,QAM/CyB,EAAMkR,EAAG3S,SAAS,aASlBr3B,EACiB,oBAArBuqC,iBAAmCA,iBAAmB,EAOlD3W,EACkB,oBAAtB4W,mBACoB,oBAApB3W,iBACP4W,gBAAgBD,kBAML7vC,EACM,oBAAVzB,OAAyBA,MAAM6U,UAAUnT,OAKrCwQ,EAA0B,WACrC,IAAIC,GAAU,EACd,IACE,MAAMnV,EAAU6a,OAAO25B,eAAe,CAAC,EAAG,UAAW,CACnDlzC,IAAK,WACH6T,GAAU,CACZ,IAGFrK,OAAOmC,iBAAiB,IAAK,KAAMjN,GACnC8K,OAAO+J,oBAAoB,IAAK,KAAM7U,EAGxC,CAFE,MAAO6E,GAET,CACA,OAAOsQ,CACR,CAfsC,uMCvDvC,MAAMs/B,UAAwB,UAI5Br1C,YAAYY,GACVT,QAEAS,EAAUA,GAAoB,CAAC,EAM/BR,KAAKk1C,OAAS10C,EAAQuf,MAAQvf,EAAQuf,MAAQ,EAM9C/f,KAAK+4B,eAAiC90B,IAArBzD,EAAQ2H,SAAyB3H,EAAQ2H,SAAW,GACvE,CAQA6L,YAAYZ,GACV,IAAI+hC,GAAY,EAChB,GAAI/hC,EAAgBhT,MAAQ,mBAA8B,CACxD,MAAM+S,EACJC,EACF,cACMpK,EAAMoK,EAAgBpK,IACtBgd,EAAS5S,EAAgBnE,WACzB8Q,EAAQ5M,EAAauvB,UAAY1iC,KAAKk1C,OAASl1C,KAAKk1C,OACpD51C,EAAO0J,EAAIkI,WACjB,IAAAkkC,aAAY91C,EAAMygB,EAAOiG,EAAQhmB,KAAK+4B,WACtC5lB,EAAa0G,iBACbs7B,GAAY,CACd,CACA,OAAQA,CACV,EAGF,kSC7BA,MAAME,EAMM,WANNA,EAaK,UAbLA,EAoBI,SApBJA,EA2BO,YAQN,MAAMC,UAAqB,UAMhC11C,YAAYQ,EAAM6O,EAAYmE,GAC5BrT,MAAMK,GAQNJ,KAAKiP,WAAaA,EAOlBjP,KAAKoT,gBAAkBA,CACzB,EAyBF,MAAMmiC,UAAgB,UAIpB31C,YAAYY,GACVT,QAKAC,KAAKS,GAKLT,KAAKU,KAKLV,KAAKW,GAELH,EAAUA,GAAoB,CAAC,EAM/BR,KAAKw1C,KAAO,IAAI,UAAUh1C,EAAQ6K,WAAa,cAM/CrL,KAAKy1C,cAA+BxxC,IAApBzD,EAAQk1C,QAAwBl1C,EAAQk1C,QAAU,GAE9Dl1C,EAAQm1C,WACV31C,KAAK21C,SAAWn1C,EAAQm1C,UAO1B31C,KAAK41C,YAAc,KAMnB51C,KAAK61C,WAAar1C,EAAQs1C,UAAYt1C,EAAQs1C,UAAY,EAAA5S,kBAM1DljC,KAAK+1C,iBAAmBv1C,EAAQw1C,gBAC5Bx1C,EAAQw1C,gBACRh2C,KAAKi2C,sBACX,CAWAA,uBAAuB7iC,EAAiB8iC,EAAYC,GAClD,MAAMzqC,EAAQyqC,EAAS,GAAKD,EAAW,GACjC/xC,EAASgyC,EAAS,GAAKD,EAAW,GACxC,OAAOxqC,EAAQA,EAAQvH,EAASA,GAAUnE,KAAKy1C,QACjD,CAOAW,cACE,OAAOp2C,KAAKw1C,KAAKY,aACnB,CAMAC,gBAAgBjjC,GACdpT,KAAKw1C,KAAKc,UAAUt2C,KAAK41C,YAAaxiC,EAAgBrE,OAEtD/O,KAAKkC,cACH,IAAIozC,EACFD,EACAjiC,EAAgBnE,WAChBmE,GAGN,CAOAmjC,cAAcnjC,GACZpT,KAAKw1C,KAAK7nC,OAAO,MAEjB,MAAM6oC,EAAcx2C,KAAK+1C,iBACvB3iC,EACApT,KAAK41C,YACLxiC,EAAgBrE,OAYlB,OAVIynC,GACFx2C,KAAK21C,SAASviC,GAEhBpT,KAAKkC,cACH,IAAIozC,EACFkB,EAAcnB,EAA0BA,EACxCjiC,EAAgBnE,WAChBmE,KAGG,CACT,CAOAqjC,gBAAgBrjC,GACd,QAAIpT,KAAK61C,WAAWziC,KAClBpT,KAAK41C,YAAcxiC,EAAgBrE,MACnC/O,KAAKw1C,KAAK7nC,OAAOyF,EAAgBpK,KACjChJ,KAAKw1C,KAAKc,UAAUt2C,KAAK41C,YAAa51C,KAAK41C,aAC3C51C,KAAKkC,cACH,IAAIozC,EACFD,EACAjiC,EAAgBnE,WAChBmE,KAGG,EAGX,CAMAuiC,SAASjoC,GAAQ,EAGnB,+SC/OA,MAAMgpC,UAAgB,UAIpB92C,YAAYY,GACVT,MAAM,CACJ42C,SAAU,EAAArT,QAGZ9iC,EAAUA,GAAoB,CAAC,EAM/BR,KAAK42C,SAAWp2C,EAAQq2C,QAKxB72C,KAAK82C,aAAe,KAKpB92C,KAAK+2C,mBAKL/2C,KAAKg3C,UAAW,EAEhB,MAAMlB,EAAYt1C,EAAQs1C,UACtBt1C,EAAQs1C,WACR,IAAA3T,KAAI,EAAAuB,eAAgB,EAAAW,eAMxBrkC,KAAK61C,WAAar1C,EAAQiM,aACtB,IAAA01B,KAAI,EAAAW,kBAAmBgT,GACvBA,EAMJ91C,KAAKi3C,YAAa,CACpB,CAMAZ,gBAAgBjjC,GACd,MAAMpK,EAAMoK,EAAgBpK,IACvBhJ,KAAKg3C,WACRh3C,KAAKg3C,UAAW,EAChBhuC,EAAIkI,UAAU2d,oBAEhB,MAAMqoB,EAAiBl3C,KAAKk3C,eACtBC,EAAWnuC,EAAIiH,eAAc,IAAAknC,UAAqBD,IACxD,GAAIA,EAAej2C,QAAUjB,KAAK+2C,oBAIhC,GAHI/2C,KAAK42C,UACP52C,KAAK42C,SAASjvC,OAAOwvC,EAAS,GAAIA,EAAS,IAEzCn3C,KAAK82C,aAAc,CACrB,MAAM/2B,EAAQ,CACZ/f,KAAK82C,aAAa,GAAKK,EAAS,GAChCA,EAAS,GAAKn3C,KAAK82C,aAAa,IAG5Bx3C,EADM8T,EAAgBpK,IACXkI,WACjB,IAAAirB,OAAgBpc,EAAOzgB,EAAKsG,kBAC5B,IAAAgjB,QAAiB7I,EAAOzgB,EAAKsmB,eAC7BtmB,EAAKsuB,qBAAqB7N,EAC5B,OACS/f,KAAK42C,UAGd52C,KAAK42C,SAASlvC,QAEhB1H,KAAK82C,aAAeK,EACpBn3C,KAAK+2C,mBAAqBG,EAAej2C,OACzCmS,EAAgBE,cAAcuG,gBAChC,CAOA08B,cAAcnjC,GACZ,MAAMpK,EAAMoK,EAAgBpK,IACtB1J,EAAO0J,EAAIkI,UACjB,GAAmC,IAA/BlR,KAAKk3C,eAAej2C,OAAc,CACpC,IAAKjB,KAAKi3C,YAAcj3C,KAAK42C,UAAY52C,KAAK42C,SAAS5uC,MAAO,CAC5D,MAAMu0B,EAAWv8B,KAAK42C,SAASnuC,cACzByzB,EAAQl8B,KAAK42C,SAASluC,WACtB1J,EAASM,EAAKqmB,oBACdyxB,EAAWpuC,EAAIuJ,+BAA+BvT,GAC9C4lC,EAAO57B,EAAIkG,+BAA+B,CAC9CkoC,EAAS,GAAK7a,EAAWj0B,KAAK2gB,IAAIiT,GAClCkb,EAAS,GAAK7a,EAAWj0B,KAAK4gB,IAAIgT,KAEpC58B,EAAK2mB,gBAAgB,CACnBjnB,OAAQM,EAAK6tB,qBAAqByX,GAClCz8B,SAAU,IACVoe,OAAQ,EAAAqI,SAEZ,CAKA,OAJI5uB,KAAKg3C,WACPh3C,KAAKg3C,UAAW,EAChB13C,EAAKwvB,mBAEA,CACT,CAOA,OANI9uB,KAAK42C,UAGP52C,KAAK42C,SAASlvC,QAEhB1H,KAAK82C,aAAe,MACb,CACT,CAOAL,gBAAgBrjC,GACd,GAAIpT,KAAKk3C,eAAej2C,OAAS,GAAKjB,KAAK61C,WAAWziC,GAAkB,CACtE,MACM9T,EADM8T,EAAgBpK,IACXkI,UAYjB,OAXAlR,KAAK82C,aAAe,KAEhBx3C,EAAK4V,gBACP5V,EAAKgoB,mBAEHtnB,KAAK42C,UACP52C,KAAK42C,SAASlvC,QAIhB1H,KAAKi3C,WAAaj3C,KAAKk3C,eAAej2C,OAAS,GACxC,CACT,CACA,OAAO,CACT,EAGF,uRC7JA,MAAMo2C,UAAmB,UAIvBz3C,YAAYY,GACVA,EAAUA,GAAoB,CAAC,EAE/BT,MAAM,CACJ42C,SAAU,EAAArT,QAOZtjC,KAAK61C,WAAar1C,EAAQs1C,UAAYt1C,EAAQs1C,UAAY,EAAAnT,iBAM1D3iC,KAAKs3C,gBAAarzC,EAMlBjE,KAAK+4B,eAAiC90B,IAArBzD,EAAQ2H,SAAyB3H,EAAQ2H,SAAW,GACvE,CAMAkuC,gBAAgBjjC,GACd,KAAK,IAAA4wB,WAAU5wB,GACb,OAGF,MAAMpK,EAAMoK,EAAgBpK,IACtB1J,EAAO0J,EAAIkI,UACjB,GAAI5R,EAAK6pB,iBAAiB3R,WAAa,EAAAiZ,QACrC,OAEF,MAAMzZ,EAAOhO,EAAIsH,UACX4a,EAAS9X,EAAgBrE,MACzBwoC,EAAQjvC,KAAKC,MAAMyO,EAAK,GAAK,EAAIkU,EAAO,GAAIA,EAAO,GAAKlU,EAAK,GAAK,GACxE,QAAwB/S,IAApBjE,KAAKs3C,WAA0B,CACjC,MAAMv3B,EAAQw3B,EAAQv3C,KAAKs3C,WAC3Bh4C,EAAK8uB,wBAAwBrO,EAC/B,CACA/f,KAAKs3C,WAAaC,CACpB,CAOAhB,cAAcnjC,GACZ,KAAK,IAAA4wB,WAAU5wB,GACb,OAAO,EAMT,OAHYA,EAAgBpK,IACXkI,UACZ4d,eAAe9uB,KAAK+4B,YAClB,CACT,CAOA0d,gBAAgBrjC,GACd,KAAK,IAAA4wB,WAAU5wB,GACb,OAAO,EAGT,IACE,IAAA8vB,mBAAkB9vB,IAClBpT,KAAK61C,WAAWziC,GAChB,CAIA,OAHYA,EAAgBpK,IACxBkI,UAAU2d,mBACd7uB,KAAKs3C,gBAAarzC,GACX,CACT,CACA,OAAO,CACT,EAGF,mOC5FA,MAAMuzC,UAAiB,UAIrB53C,YAAYY,GAKVT,MAAM,CACJ+1C,WALFt1C,EAAUA,GAAoB,CAAC,GAELs1C,UAAYt1C,EAAQs1C,UAAY,EAAAlS,aAIxDv4B,UAAW7K,EAAQ6K,WAAa,cAChCqqC,QAASl1C,EAAQk1C,UAOnB11C,KAAK+4B,eAAiC90B,IAArBzD,EAAQ2H,SAAyB3H,EAAQ2H,SAAW,IAMrEnI,KAAKy3C,UAAuBxzC,IAAhBzD,EAAQk3C,KAAoBl3C,EAAQk3C,GAClD,CAMA/B,SAASjoC,GACP,MACMpO,EADMU,KAAK8T,SAC8C5C,UAC/D,IAAIwa,EAAW1rB,KAAKo2C,cAEpB,GAAIp2C,KAAKy3C,KAAM,CACb,MAAM1qB,EAAgBztB,EAAK0sB,yBAAyBN,GAC9CzoB,EAAa3D,EAAKgrB,+BAA+ByC,GACjD4qB,EAASr4C,EAAKsG,gBAAkB3C,EACtCyoB,EAAWA,EAASlT,QACpBkT,EAASyQ,MAAMwb,EAASA,EAC1B,CAEAr4C,EAAKysB,YAAYL,EAAU,CACzBvjB,SAAUnI,KAAK+4B,UACfxS,OAAQ,EAAAqI,SAEZ,EAGF,yPC3CA,MAAMgpB,UAAoB,UAIxBh4C,YAAYY,GACVT,QAKAC,KAAKS,GAKLT,KAAKU,KAKLV,KAAKW,GAEDH,GAAWA,EAAQwT,cACrBhU,KAAKgU,YAAcxT,EAAQwT,aAO7BhU,KAAKga,KAAO,KAEZha,KAAK63C,WAAU,EACjB,CAQA9jC,YACE,OAA+B/T,KAAK8B,IAAI,iBAC1C,CAOAgS,SACE,OAAO9T,KAAKga,IACd,CAQAhG,YAAYZ,GACV,OAAO,CACT,CAQAykC,UAAUC,GACR93C,KAAKwC,IAAI,iBAA4Bs1C,EACvC,CAQAnqC,OAAO3E,GACLhJ,KAAKga,KAAOhR,CACd,EAQK,SAAS+uC,EAAIz4C,EAAMygB,EAAO5X,GAC/B,MAAMwgB,EAAgBrpB,EAAKqmB,oBAC3B,GAAIgD,EAAe,CACjB,MAAM3pB,EAAS,CAAC2pB,EAAc,GAAK5I,EAAM,GAAI4I,EAAc,GAAK5I,EAAM,IACtEzgB,EAAK2mB,gBAAgB,CACnB9d,cAAuBlE,IAAbkE,EAAyBA,EAAW,IAC9Coe,OAAQ,EAAAsZ,OACR7gC,OAAQM,EAAK6tB,qBAAqBnuB,IAEtC,CACF,CAQO,SAASo2C,EAAY91C,EAAMygB,EAAOiG,EAAQ7d,GAC/C,MAAM6xB,EAAc16B,EAAKomB,UAEzB,QAAoBzhB,IAAhB+1B,EACF,OAGF,MAAMC,EAAU36B,EAAK0vB,mBAAmBgL,EAAcja,GAChDkO,EAAgB3uB,EAAKunB,qBAAqBoT,GAE5C36B,EAAK4V,gBACP5V,EAAKgoB,mBAEPhoB,EAAKwV,QAAQ,CACX7R,WAAYgrB,EACZjI,OAAQA,EACR7d,cAAuBlE,IAAbkE,EAAyBA,EAAW,IAC9Coe,OAAQ,EAAAqI,SAEZ,CAEA,sUCvIA,MAAMopB,UAAoB,UAIxBp4C,YAAYY,GACVT,QAEAS,EAAUA,GAAW,CAAC,EAOtBR,KAAKi4C,kBAAoB,SAAU7kC,GACjC,OACE,IAAAswB,gBAAetwB,KAAoB,IAAAywB,mBAAkBzwB,EAEzD,EAMApT,KAAK61C,gBACmB5xC,IAAtBzD,EAAQs1C,UACJt1C,EAAQs1C,UACR91C,KAAKi4C,kBAMXj4C,KAAK+4B,eAAiC90B,IAArBzD,EAAQ2H,SAAyB3H,EAAQ2H,SAAW,IAMrEnI,KAAKk4C,iBACoBj0C,IAAvBzD,EAAQ23C,WAA2B33C,EAAQ23C,WAAa,GAC5D,CASAnkC,YAAYZ,GACV,IAAI+hC,GAAY,EAChB,GAAI/hC,EAAgBhT,MAAQ,kBAAmB,CAC7C,MAAMg4C,EACJhlC,EACF,cACMilC,EAAUD,EAASC,QACzB,GACEr4C,KAAK61C,WAAWziC,KACfilC,GAAW,gBACVA,GAAW,gBACXA,GAAW,iBACXA,GAAW,cACb,CACA,MACM/4C,EADM8T,EAAgBpK,IACXkI,UACXonC,EAAgBh5C,EAAKsG,gBAAkB5F,KAAKk4C,YAClD,IAAIz2B,EAAS,EACXC,EAAS,EACP22B,GAAW,eACb32B,GAAU42B,EACDD,GAAW,eACpB52B,GAAU62B,EACDD,GAAW,gBACpB52B,EAAS62B,EAET52B,EAAS42B,EAEX,MAAMv4B,EAAQ,CAAC0B,EAAQC,IACvB,IAAAkH,QAAiB7I,EAAOzgB,EAAKsmB,gBAC7B,IAAAmyB,KAAIz4C,EAAMygB,EAAO/f,KAAK+4B,WACtBqf,EAASv+B,iBACTs7B,GAAY,CACd,CACF,CACA,OAAQA,CACV,EAGF,qPC7FA,MAAMoD,UAAqB,UAIzB34C,YAAYY,GACVT,QAEAS,EAAUA,GAAoB,CAAC,EAM/BR,KAAK61C,WAAar1C,EAAQs1C,UAAYt1C,EAAQs1C,UAAY,EAAAjS,kBAM1D7jC,KAAKk1C,OAAS10C,EAAQuf,MAAQvf,EAAQuf,MAAQ,EAM9C/f,KAAK+4B,eAAiC90B,IAArBzD,EAAQ2H,SAAyB3H,EAAQ2H,SAAW,GACvE,CASA6L,YAAYZ,GACV,IAAI+hC,GAAY,EAChB,GACE/hC,EAAgBhT,MAAQ,mBACxBgT,EAAgBhT,MAAQ,mBACxB,CACA,MAAMg4C,EACJhlC,EACF,cACMolC,EAAWJ,EAASI,SAC1B,GACEx4C,KAAK61C,WAAWziC,KACfolC,GAAY,IAAIC,WAAW,IAAMD,GAAY,IAAIC,WAAW,IAC7D,CACA,MAAMzvC,EAAMoK,EAAgBpK,IACtB+W,EACJy4B,GAAY,IAAIC,WAAW,GAAKz4C,KAAKk1C,QAAUl1C,KAAKk1C,OAChD51C,EAAO0J,EAAIkI,WACjB,IAAAkkC,aAAY91C,EAAMygB,OAAO9b,EAAWjE,KAAK+4B,WACzCqf,EAASv+B,iBACTs7B,GAAY,CACd,CACF,CACA,OAAQA,CACV,EAGF,wTCvDA,MAAMuD,UAAuB,UAI3B94C,YAAYY,GAGVT,MAFAS,EAAUA,GAAoB,CAAC,GAU/BR,KAAK24C,YAAc,EAMnB34C,KAAK44C,WAAa,EAMlB54C,KAAKisC,eAAiChoC,IAArBzD,EAAQmwC,SAAyBnwC,EAAQmwC,SAAW,EAMrE3wC,KAAK+4B,eAAiC90B,IAArBzD,EAAQ2H,SAAyB3H,EAAQ2H,SAAW,IAMrEnI,KAAK64C,cAA+B50C,IAApBzD,EAAQs4C,QAAwBt4C,EAAQs4C,QAAU,GAMlE94C,KAAK+4C,gBACmB90C,IAAtBzD,EAAQw4C,WAA0Bx4C,EAAQw4C,UAM5Ch5C,KAAKi5C,0BAC6Bh1C,IAAhCzD,EAAQ2pB,qBACJ3pB,EAAQ2pB,oBAGd,MAAM2rB,EAAYt1C,EAAQs1C,UAAYt1C,EAAQs1C,UAAY,EAAA9S,OAM1DhjC,KAAK61C,WAAar1C,EAAQiM,aACtB,IAAA01B,KAAI,EAAAW,kBAAmBgT,GACvBA,EAMJ91C,KAAKk5C,YAAc,KAMnBl5C,KAAKm5C,gBAAal1C,EAMlBjE,KAAKo5C,WAMLp5C,KAAKq5C,WAAQp1C,EAObjE,KAAKs5C,kBAAoB,IAKzBt5C,KAAKu5C,mBAOLv5C,KAAKw5C,cAAgB,GACvB,CAKAC,kBACEz5C,KAAKu5C,wBAAqBt1C,EAC1B,MAAM+E,EAAMhJ,KAAK8T,SACjB,IAAK9K,EACH,OAEWA,EAAIkI,UACZ4d,oBACH7qB,EACAjE,KAAK44C,WAAc54C,KAAK44C,WAAa,EAAI,GAAK,EAAK,EACnD54C,KAAKk5C,YAET,CAQAllC,YAAYZ,GACV,IAAKpT,KAAK61C,WAAWziC,GACnB,OAAO,EAGT,GADaA,EAAgBhT,OAChB,gBACX,OAAO,EAGT,MAAM4I,EAAMoK,EAAgBpK,IACtB0wC,EACJtmC,EACF,cASA,IAAI2M,EAWJ,GAnBA25B,EAAW7/B,iBAEP7Z,KAAK+4C,aACP/4C,KAAKk5C,YAAc9lC,EAAgBnE,YAMjCmE,EAAgBhT,MAAQ,kBAC1B2f,EAAQ25B,EAAWh4B,OACf,EAAAgzB,SAAWgF,EAAWC,YAAcC,WAAWC,kBACjD95B,GAAS,EAAAzV,oBAEPovC,EAAWC,YAAcC,WAAWE,iBACtC/5B,GAAS,KAIC,IAAVA,EACF,OAAO,EAET/f,KAAK44C,WAAa74B,EAElB,MAAMhY,EAAMD,KAAKC,WAEO9D,IAApBjE,KAAKm5C,aACPn5C,KAAKm5C,WAAapxC,KAGf/H,KAAKq5C,OAAStxC,EAAM/H,KAAKm5C,WAAan5C,KAAKs5C,qBAC9Ct5C,KAAKq5C,MAAQ/wC,KAAK0T,IAAI+D,GAAS,EAAI,WAAa,SAGlD,MAAMzgB,EAAO0J,EAAIkI,UACjB,GACiB,aAAflR,KAAKq5C,QACH/5C,EAAK8pB,2BAA4BppB,KAAKi5C,qBAgBxC,OAdIj5C,KAAKu5C,mBACPzjC,aAAa9V,KAAKu5C,qBAEdj6C,EAAK4V,gBACP5V,EAAKgoB,mBAEPhoB,EAAKuvB,oBAEP7uB,KAAKu5C,mBAAqB7gC,WACxB1Y,KAAKy5C,gBAAgBn1C,KAAKtE,MAC1BA,KAAK64C,UAEPv5C,EAAK4uB,YAAYnO,EAAQ/f,KAAKw5C,cAAex5C,KAAKk5C,aAClDl5C,KAAKm5C,WAAapxC,GACX,EAGT/H,KAAK24C,aAAe54B,EAEpB,MAAMg6B,EAAWzxC,KAAKmiB,IAAIzqB,KAAK64C,UAAY9wC,EAAM/H,KAAKm5C,YAAa,GAQnE,OANArjC,aAAa9V,KAAKo5C,YAClBp5C,KAAKo5C,WAAa1gC,WAChB1Y,KAAKg6C,iBAAiB11C,KAAKtE,KAAMgJ,GACjC+wC,IAGK,CACT,CAMAC,iBAAiBhxC,GACf,MAAM1J,EAAO0J,EAAIkI,UACb5R,EAAK4V,gBACP5V,EAAKgoB,mBAEP,IAAIvH,IACD,IAAAuL,OACCtrB,KAAK24C,aACJ34C,KAAKisC,UAAYjsC,KAAKw5C,cACvBx5C,KAAKisC,UAAYjsC,KAAKw5C,eACpBx5C,KAAKw5C,eACPl6C,EAAK8pB,0BAA4BppB,KAAKi5C,wBAExCl5B,EAAQA,EAASA,EAAQ,EAAI,GAAK,EAAK,IAEzC,IAAAq1B,aAAY91C,EAAMygB,EAAO/f,KAAKk5C,YAAal5C,KAAK+4B,WAEhD/4B,KAAKq5C,WAAQp1C,EACbjE,KAAK24C,YAAc,EACnB34C,KAAKk5C,YAAc,KACnBl5C,KAAKm5C,gBAAal1C,EAClBjE,KAAKo5C,gBAAan1C,CACpB,CAQAg2C,eAAejB,GACbh5C,KAAK+4C,WAAaC,EACbA,IACHh5C,KAAKk5C,YAAc,KAEvB,EAGF,2OCjRA,MAAMgB,UAAoB,UAIxBt6C,YAAYY,GAGV,MAAM25C,EAFN35C,EAAUA,GAAoB,CAAC,EAM1B25C,EAAexD,WAClBwD,EAAexD,SAAW,EAAArT,OAG5BvjC,MAAMo6C,GAMNn6C,KAAKo6C,QAAU,KAMfp6C,KAAKs3C,gBAAarzC,EAMlBjE,KAAKq6C,WAAY,EAMjBr6C,KAAKs6C,eAAiB,EAMtBt6C,KAAKu6C,gBAAmCt2C,IAAtBzD,EAAQg6C,UAA0Bh6C,EAAQg6C,UAAY,GAMxEx6C,KAAK+4B,eAAiC90B,IAArBzD,EAAQ2H,SAAyB3H,EAAQ2H,SAAW,GACvE,CAMAkuC,gBAAgBjjC,GACd,IAAIqnC,EAAgB,EAEpB,MAAMC,EAAS16C,KAAKk3C,eAAe,GAC7ByD,EAAS36C,KAAKk3C,eAAe,GAG7Bhb,EAAQ5zB,KAAKC,MACjBoyC,EAAO9pC,QAAU6pC,EAAO7pC,QACxB8pC,EAAOhqC,QAAU+pC,EAAO/pC,SAG1B,QAAwB1M,IAApBjE,KAAKs3C,WAA0B,CACjC,MAAMv3B,EAAQmc,EAAQl8B,KAAKs3C,WAC3Bt3C,KAAKs6C,gBAAkBv6B,GAClB/f,KAAKq6C,WAAa/xC,KAAK0T,IAAIhc,KAAKs6C,gBAAkBt6C,KAAKu6C,aAC1Dv6C,KAAKq6C,WAAY,GAEnBI,EAAgB16B,CAClB,CACA/f,KAAKs3C,WAAapb,EAElB,MAAMlzB,EAAMoK,EAAgBpK,IACtB1J,EAAO0J,EAAIkI,UACb5R,EAAK6pB,iBAAiB3R,WAAa,EAAAiZ,UAOvCzwB,KAAKo6C,QAAUpxC,EAAIkG,+BACjBlG,EAAIiH,eAAc,IAAAknC,UAAqBn3C,KAAKk3C,kBAI1Cl3C,KAAKq6C,YACPrxC,EAAIoM,SACJ9V,EAAK8uB,uBAAuBqsB,EAAez6C,KAAKo6C,UAEpD,CAOA7D,cAAcnjC,GACZ,GAAIpT,KAAKk3C,eAAej2C,OAAS,EAAG,CAIlC,OAHYmS,EAAgBpK,IACXkI,UACZ4d,eAAe9uB,KAAK+4B,YAClB,CACT,CACA,OAAO,CACT,CAOA0d,gBAAgBrjC,GACd,GAAIpT,KAAKk3C,eAAej2C,QAAU,EAAG,CACnC,MAAM+H,EAAMoK,EAAgBpK,IAQ5B,OAPAhJ,KAAKo6C,QAAU,KACfp6C,KAAKs3C,gBAAarzC,EAClBjE,KAAKq6C,WAAY,EACjBr6C,KAAKs6C,eAAiB,EACjBt6C,KAAK46C,wBACR5xC,EAAIkI,UAAU2d,oBAET,CACT,CACA,OAAO,CACT,EAGF,0LC3IA,MAAMgsB,UAAkB,UAItBj7C,YAAYY,GAGV,MAAM25C,EAFN35C,EAAUA,GAAoB,CAAC,EAM1B25C,EAAexD,WAClBwD,EAAexD,SAAW,EAAArT,OAG5BvjC,MAAMo6C,GAMNn6C,KAAKo6C,QAAU,KAMfp6C,KAAK+4B,eAAiC90B,IAArBzD,EAAQ2H,SAAyB3H,EAAQ2H,SAAW,IAMrEnI,KAAK86C,mBAAgB72C,EAMrBjE,KAAK+6C,gBAAkB,CACzB,CAMA1E,gBAAgBjjC,GACd,IAAI4nC,EAAa,EAEjB,MAAMN,EAAS16C,KAAKk3C,eAAe,GAC7ByD,EAAS36C,KAAKk3C,eAAe,GAC7B9uC,EAAKsyC,EAAO/pC,QAAUgqC,EAAOhqC,QAC7BtI,EAAKqyC,EAAO7pC,QAAU8pC,EAAO9pC,QAG7B0rB,EAAWj0B,KAAKE,KAAKJ,EAAKA,EAAKC,EAAKA,QAEfpE,IAAvBjE,KAAK86C,gBACPE,EAAah7C,KAAK86C,cAAgBve,GAEpCv8B,KAAK86C,cAAgBve,EAErB,MAAMvzB,EAAMoK,EAAgBpK,IACtB1J,EAAO0J,EAAIkI,UAEC,GAAd8pC,IACFh7C,KAAK+6C,gBAAkBC,GAIzBh7C,KAAKo6C,QAAUpxC,EAAIkG,+BACjBlG,EAAIiH,eAAc,IAAAknC,UAAqBn3C,KAAKk3C,kBAI9CluC,EAAIoM,SACJ9V,EAAKyuB,yBAAyBitB,EAAYh7C,KAAKo6C,QACjD,CAOA7D,cAAcnjC,GACZ,GAAIpT,KAAKk3C,eAAej2C,OAAS,EAAG,CAClC,MACM3B,EADM8T,EAAgBpK,IACXkI,UACXyd,EAAY3uB,KAAK+6C,gBAAkB,EAAI,GAAK,EAElD,OADAz7C,EAAKwvB,eAAe9uB,KAAK+4B,UAAWpK,IAC7B,CACT,CACA,OAAO,CACT,CAOA8nB,gBAAgBrjC,GACd,GAAIpT,KAAKk3C,eAAej2C,QAAU,EAAG,CACnC,MAAM+H,EAAMoK,EAAgBpK,IAO5B,OANAhJ,KAAKo6C,QAAU,KACfp6C,KAAK86C,mBAAgB72C,EACrBjE,KAAK+6C,gBAAkB,EAClB/6C,KAAK46C,wBACR5xC,EAAIkI,UAAU2d,oBAET,CACT,CACA,OAAO,CACT,EAGF,qNC1FA,MAAMosB,UAA2B,UAI/Br7C,YAAYY,GAGVT,MAFAS,EAAUA,GAAoB,CAAC,GAM3BA,EAAQi2C,kBACVz2C,KAAKy2C,gBAAkBj2C,EAAQi2C,iBAG7Bj2C,EAAQ61C,kBACVr2C,KAAKq2C,gBAAkB71C,EAAQ61C,iBAG7B71C,EAAQ06C,kBACVl7C,KAAKk7C,gBAAkB16C,EAAQ06C,iBAG7B16C,EAAQ+1C,gBACVv2C,KAAKu2C,cAAgB/1C,EAAQ+1C,eAG3B/1C,EAAQm2C,WACV32C,KAAK22C,SAAWn2C,EAAQm2C,UAO1B32C,KAAK46C,wBAAyB,EAM9B56C,KAAKk3C,eAAiB,EACxB,CAQAiE,kBACE,OAAOn7C,KAAKk3C,eAAej2C,MAC7B,CAQAw1C,gBAAgBrjC,GACd,OAAO,CACT,CAOAijC,gBAAgBjjC,GAAkB,CAUlCY,YAAYZ,GACV,IAAKA,EAAgBE,cACnB,OAAO,EAGT,IAAI6hC,GAAY,EAEhB,GADAn1C,KAAKo7C,uBAAuBhoC,GACxBpT,KAAK46C,wBACP,GAAIxnC,EAAgBhT,MAAQ,sBAC1BJ,KAAKq2C,gBAAgBjjC,GAErBA,EAAgBE,cAAcuG,sBACzB,GAAIzG,EAAgBhT,MAAQ,oBAA+B,CAChE,MAAMi7C,EAAYr7C,KAAKu2C,cAAcnjC,GACrCpT,KAAK46C,uBACHS,GAAar7C,KAAKk3C,eAAej2C,OAAS,CAC9C,OAEA,GAAImS,EAAgBhT,MAAQ,sBAAiC,CAC3D,MAAMk7C,EAAUt7C,KAAKy2C,gBAAgBrjC,GACrCpT,KAAK46C,uBAAyBU,EAC9BnG,EAAYn1C,KAAK22C,SAAS2E,EAC5B,MAAWloC,EAAgBhT,MAAQ,uBACjCJ,KAAKk7C,gBAAgB9nC,GAGzB,OAAQ+hC,CACV,CAOA+F,gBAAgB9nC,GAAkB,CAQlCmjC,cAAcnjC,GACZ,OAAO,CACT,CAQAujC,SAAS2E,GACP,OAAOA,CACT,CAMAF,uBAAuBhoC,GACjBA,EAAgBsG,iBAClB1Z,KAAKk3C,eAAiB9jC,EAAgBsG,eAE1C,EAOK,SAASy9B,EAAStrC,GACvB,MAAM5K,EAAS4K,EAAc5K,OAC7B,IAAI0P,EAAU,EACVE,EAAU,EACd,IAAK,IAAI9P,EAAI,EAAGA,EAAIE,EAAQF,IAC1B4P,GAAW9E,EAAc9K,GAAG4P,QAC5BE,GAAWhF,EAAc9K,GAAG8P,QAE9B,MAAO,CAACF,QAASA,EAAU1P,EAAQ4P,QAASA,EAAU5P,EACxD,CAEA,+FCtMA,SACEs6C,OAAQ,ioBCsDH,SAASrhB,EAAS15B,GACvBA,EAAUA,GAAoB,CAAC,EAG/B,MAAMiJ,EAAe,IAAI,UAEnBotC,EAAU,IAAI,WAAS,KAAO,IAAM,WAGT5yC,IAA/BzD,EAAQg7C,oBACJh7C,EAAQg7C,qBAGZ/xC,EAAahI,KAAK,IAAI,iBAIMwC,IAA5BzD,EAAQi7C,iBAAgCj7C,EAAQi7C,kBAEhDhyC,EAAahI,KACX,IAAI,UAAgB,CAClBse,MAAOvf,EAAQk7C,UACfvzC,SAAU3H,EAAQm7C,sBAKY13C,IAApBzD,EAAQo7C,SAAwBp7C,EAAQo7C,UAEtDnyC,EAAahI,KACX,IAAI,UAAQ,CACVgL,YAAajM,EAAQiM,YACrBoqC,QAASA,WAMW5yC,IAAxBzD,EAAQq7C,aAA4Br7C,EAAQq7C,cAE5CpyC,EAAahI,KAAK,IAAI,iBAGgBwC,IAAtBzD,EAAQs7C,WAA0Bt7C,EAAQs7C,YAE1DryC,EAAahI,KACX,IAAI,UAAU,CACZ0G,SAAU3H,EAAQm7C,sBAKc13C,IAArBzD,EAAQu7C,UAAyBv7C,EAAQu7C,YAExDtyC,EAAahI,KAAK,IAAI,WACtBgI,EAAahI,KACX,IAAI,UAAa,CACfse,MAAOvf,EAAQk7C,UACfvzC,SAAU3H,EAAQm7C,uBAMK13C,IAA3BzD,EAAQw7C,gBAA+Bx7C,EAAQw7C,iBAE/CvyC,EAAahI,KACX,IAAI,UAAe,CACjBgL,YAAajM,EAAQiM,YACrBtE,SAAU3H,EAAQm7C,gBAexB,YAT4B13C,IAA1BzD,EAAQy7C,eAA8Bz7C,EAAQy7C,gBAE9CxyC,EAAahI,KACX,IAAI,UAAS,CACX0G,SAAU3H,EAAQm7C,gBAKjBlyC,CACT,qQCrFA,MAAMyyC,UAAkB,UAItBt8C,YAAYY,GACVT,QAKAC,KAAKS,GAKLT,KAAKU,KAKLV,KAAKW,GAMLX,KAAKm8C,YAAc37C,EAAQ47C,WAK3B,MAAM14B,EAAarI,OAAO0C,OAAO,CAAC,EAAGvd,GACH,iBAAvBA,EAAQkjB,oBACVA,EAAWA,WAClBrI,OAAO0C,OAAO2F,EAAYljB,EAAQkjB,aAGpCA,EAAW,wBACWzf,IAApBzD,EAAQ67C,QAAwB77C,EAAQ67C,QAAU,GACpD,IAAAvyC,QAAoD,iBAAtC4Z,EAAW,mBAAqC,IAE9DA,EAAW,wBACWzf,IAApBzD,EAAQsR,SAAwBtR,EAAQsR,QAC1C4R,EAAW,mBAAyBljB,EAAQoL,OAC5C8X,EAAW,+BACiBzf,IAA1BzD,EAAQsjB,cAA8BtjB,EAAQsjB,cAAgB0I,IAChE9I,EAAW,+BACiBzf,IAA1BzD,EAAQwjB,cAA8BxjB,EAAQwjB,cAAgB,EAChEN,EAAW,yBACWzf,IAApBzD,EAAQhB,QAAwBgB,EAAQhB,SAAWgtB,IACrD9I,EAAW,yBACWzf,IAApBzD,EAAQspB,QAAwBtpB,EAAQspB,QAAU0C,IAMpDxsB,KAAKs8C,gBACsBr4C,IAAzByf,EAAWrY,UAA0BqY,EAAWrY,UAAY,kBACvDqY,EAAWrY,UAElBrL,KAAKsN,cAAcoW,GAMnB1jB,KAAKu8C,OAAS,IAChB,CAMAC,gBACE,OAAOx8C,KAAKm8C,WACd,CAKAM,eACE,OAAOz8C,KAAKs8C,UACd,CASAI,cAAcC,GAEZ,MAAMj5C,EACJ1D,KAAKu8C,QACY,CACf3zC,MAAO5I,KACP28C,aAAqB14C,IAAZ04C,GAA+BA,GAEtC/wC,EAAS5L,KAAK48C,YAWpB,OAVAl5C,EAAM24C,SAAU,IAAA/wB,OAAMhjB,KAAKysB,MAA0B,IAApB/0B,KAAK68C,cAAsB,IAAK,EAAG,GACpEn5C,EAAMoO,QAAU9R,KAAK88C,aACrBp5C,EAAMV,OAAShD,KAAKyF,YACpB/B,EAAMkI,YAAoB3H,IAAX2H,GAAyBlI,EAAMi5C,QAAqB/wC,EAAX4gB,IACxD9oB,EAAMogB,cAAgB9jB,KAAKypB,mBAC3B/lB,EAAMsgB,cAAgB1b,KAAKmiB,IAAIzqB,KAAK0pB,mBAAoB,GACxDhmB,EAAMlE,QAAUQ,KAAK+pB,aACrBrmB,EAAMomB,QAAU9pB,KAAK2pB,aACrB3pB,KAAKu8C,OAAS74C,EAEPA,CACT,CAQAq5C,eAAex8C,GACb,OAAO,IAAAmF,WACT,CAQAmM,oBAAoBmrC,GAClB,OAAO,IAAAt3C,WACT,CASAD,YACE,OACEzF,KAAK8B,IAAI,iBAEb,CAQA2nB,mBACE,OAA8BzpB,KAAK8B,IAAI,yBACzC,CAQA4nB,mBACE,OAA8B1pB,KAAK8B,IAAI,yBACzC,CAQAioB,aACE,OAA8B/pB,KAAK8B,IAAI,mBACzC,CAQA6nB,aACE,OAA8B3pB,KAAK8B,IAAI,mBACzC,CAQA+6C,aACE,OAA8B78C,KAAK8B,IAAI,kBACzC,CAMAm7C,iBACE,OAAO,IAAAv3C,WACT,CAQAo3C,aACE,OAA+B98C,KAAK8B,IAAI,kBAC1C,CASA86C,YACE,OAA8B58C,KAAK8B,IAAI,kBACzC,CAMAo7C,cAAcd,GACZp8C,KAAKm8C,YAAcC,EACnBp8C,KAAK+D,SACP,CASAo5C,UAAUn6C,GACRhD,KAAKwC,IAAI,iBAAsBQ,EACjC,CAQAo6C,iBAAiBt5B,GACf9jB,KAAKwC,IAAI,yBAA8BshB,EACzC,CAQAu5B,iBAAiBr5B,GACfhkB,KAAKwC,IAAI,yBAA8BwhB,EACzC,CAUA6F,WAAWC,GACT9pB,KAAKwC,IAAI,mBAAwBsnB,EACnC,CAUAE,WAAWxqB,GACTQ,KAAKwC,IAAI,mBAAwBhD,EACnC,CAQA89C,WAAWjB,IACT,IAAAvyC,QAA0B,iBAAZuyC,EAAsB,IACpCr8C,KAAKwC,IAAI,kBAAuB65C,EAClC,CAQAkB,WAAWzrC,GACT9R,KAAKwC,IAAI,kBAAuBsP,EAClC,CASA0rC,UAAUC,GACRz9C,KAAKwC,IAAI,kBAAuBi7C,EAClC,CAKA36C,kBACM9C,KAAKu8C,SACPv8C,KAAKu8C,OAAO3zC,MAAQ,KACpB5I,KAAKu8C,OAAS,MAEhBx8C,MAAM+C,iBACR,EAGF,oLChVA,MAAM46C,UAAsB,UAI1B99C,YAAYY,GACVA,EAAUA,GAAoB,CAAC,EAE/B,MAAMm9C,EAActiC,OAAO0C,OAAO,CAAC,EAAGvd,UAE/Bm9C,EAAYC,eACZD,EAAYE,uBACnB99C,MAAM49C,GAKN39C,KAAKS,GAKLT,KAAKU,KAKLV,KAAKW,GAELX,KAAK89C,gBAA+B75C,IAApBzD,EAAQo9C,QAAwBp9C,EAAQo9C,QAAU,GAClE59C,KAAK+9C,+BACgC95C,IAAnCzD,EAAQq9C,wBACJr9C,EAAQq9C,uBAGhB,CAQAG,aACE,OAA8Bh+C,KAAK8B,IAAI,kBACzC,CAQAg8C,WAAWF,GACT59C,KAAKwC,IAAI,kBAAsBo7C,EACjC,CAQAK,4BACE,OACEj+C,KAAK8B,IAAI,qCAEb,CAQAi8C,0BAA0BF,GACxB79C,KAAKwC,IAAI,qCAAyCq7C,EACpD,CAkBAK,QAAQnvC,GACN,OAAOhP,MAAMm+C,QAAQnvC,EACvB,EAGF,shBCtIO,MAAMmH,UAAmB,UAK9BtW,YAAYQ,EAAMwI,GAChB7I,MAAMK,GAONJ,KAAK4I,MAAQA,CACf,EAqCF,MAAM1I,EACI,SAWV,MAAMi+C,UAAmB,UAIvBv+C,YAAYY,GACVA,EAAUA,GAAW,CAAC,EACtB,MAAMm9C,EAAsCtiC,OAAO0C,OAAO,CAAC,EAAGvd,UACvDm9C,EAAYx+C,OAEnB,IAAIA,EAASqB,EAAQrB,OAErBY,MAAM49C,GAKN39C,KAAKS,GAKLT,KAAKU,KAKLV,KAAKW,GAMLX,KAAKo+C,oBAAsB,GAM3Bp+C,KAAKq+C,cAAgB,CAAC,EAEtBr+C,KAAKiN,kBAAkB/M,EAAiBF,KAAKs+C,sBAEzCn/C,EACEwK,MAAMC,QAAQzK,GAChBA,EAAS,IAAI,UAAWA,EAAO0K,QAAS,CAAChJ,QAAQ,KAEjD,IAAAiJ,QAAuD,mBAAvB,EAAiB,SAAkB,IAGrE3K,EAAS,IAAI,eAAW8E,EAAW,CAACpD,QAAQ,IAG9Cb,KAAKwR,UAAUrS,EACjB,CAKAo/C,qBACEv+C,KAAK+D,SACP,CAKAu6C,uBACEt+C,KAAKo+C,oBAAoB18C,QAAQ,EAAA4D,eACjCtF,KAAKo+C,oBAAoBn9C,OAAS,EAElC,MAAM9B,EAASa,KAAK8I,YACpB9I,KAAKo+C,oBAAoB38C,MACvB,IAAAmU,QAAOzW,EAAQ,cAAyBa,KAAKw+C,iBAAkBx+C,OAC/D,IAAA4V,QAAOzW,EAAQ,iBAA4Ba,KAAKy+C,oBAAqBz+C,OAGvE,IAAK,MAAM6N,KAAM7N,KAAKq+C,cACpBr+C,KAAKq+C,cAAcxwC,GAAInM,QAAQ,EAAA4D,gBAEjC,IAAAlE,OAAMpB,KAAKq+C,eAEX,MAAMK,EAAcv/C,EAAOyC,WAC3B,IAAK,IAAIb,EAAI,EAAGC,EAAK09C,EAAYz9C,OAAQF,EAAIC,EAAID,IAAK,CACpD,MAAM6H,EAAQ81C,EAAY39C,GAC1Bf,KAAK2+C,wBAAwB/1C,GAC7B5I,KAAKkC,cAAc,IAAIgU,EAAW,WAAYtN,GAChD,CACA5I,KAAK+D,SACP,CAKA46C,wBAAwB/1C,GACtB,MAAM7D,EAAe,EACnB,IAAA6Q,QACEhN,EACA,yBACA5I,KAAKu+C,mBACLv+C,OAEF,IAAA4V,QAAOhN,EAAO,iBAAkB5I,KAAKu+C,mBAAoBv+C,OAGvD4I,aAAiBu1C,GACnBp5C,EAAatD,MACX,IAAAmU,QAAOhN,EAAO,WAAY5I,KAAK4+C,qBAAsB5+C,OACrD,IAAA4V,QAAOhN,EAAO,cAAe5I,KAAK6+C,wBAAyB7+C,OAI/DA,KAAKq+C,eAAc,IAAAxmC,QAAOjP,IAAU7D,CACtC,CAKA65C,qBAAqBlxC,GACnB1N,KAAKkC,cAAc,IAAIgU,EAAW,WAAYxI,EAAM9E,OACtD,CAKAi2C,wBAAwBnxC,GACtB1N,KAAKkC,cAAc,IAAIgU,EAAW,cAAexI,EAAM9E,OACzD,CAMA41C,iBAAiBM,GACf,MAAMl2C,EAAQk2C,EAAgBlgD,QAC9BoB,KAAK2+C,wBAAwB/1C,GAC7B5I,KAAKkC,cAAc,IAAIgU,EAAW,WAAYtN,IAC9C5I,KAAK+D,SACP,CAMA06C,oBAAoBK,GAClB,MAAMl2C,EAAQk2C,EAAgBlgD,QACxB2H,GAAM,IAAAsR,QAAOjP,GACnB5I,KAAKq+C,cAAc93C,GAAK7E,QAAQ,EAAA4D,sBACzBtF,KAAKq+C,cAAc93C,GAC1BvG,KAAKkC,cAAc,IAAIgU,EAAW,cAAetN,IACjD5I,KAAK+D,SACP,CAUA+E,YACE,OACE9I,KAAK8B,IAAI5B,EAEb,CAUAsR,UAAUrS,GACR,MAAMuS,EAAa1R,KAAK8I,YACxB,GAAI4I,EAAY,CACd,MAAMqtC,EAAgBrtC,EAAW9P,WACjC,IAAK,IAAIb,EAAI,EAAGC,EAAK+9C,EAAc99C,OAAQF,EAAIC,IAAMD,EACnDf,KAAKkC,cAAc,IAAIgU,EAAW,cAAe6oC,EAAch+C,IAEnE,CAEAf,KAAKwC,IAAItC,EAAiBf,EAC5B,CAMA49C,eAAex8C,GAKb,OAJAA,OAAkB0D,IAAV1D,EAAsBA,EAAQ,GACtCP,KAAK8I,YAAYpH,SAAQ,SAAUkH,GACjCA,EAAMm0C,eAAex8C,EACvB,IACOA,CACT,CAWAsR,oBAAoB+yB,GAClB,MAAMoY,OAAkB/4C,IAAT2gC,EAAqBA,EAAO,GACrCoa,EAAMhC,EAAO/7C,OAEnBjB,KAAK8I,YAAYpH,SAAQ,SAAUkH,GACjCA,EAAMiJ,oBAAoBmrC,EAC5B,IAEA,MAAMiC,EAAgBj/C,KAAK08C,gBAC3B,IAAIwC,EAAgBD,EAAcrzC,OAC7Bg5B,QAAiC3gC,IAAzBg7C,EAAcrzC,SACzBszC,EAAgB,GAElB,IAAK,IAAIn+C,EAAIi+C,EAAKh+C,EAAKg8C,EAAO/7C,OAAQF,EAAIC,EAAID,IAAK,CACjD,MAAMw2B,EAAaylB,EAAOj8C,GAC1Bw2B,EAAW8kB,SAAW4C,EAAc5C,QACpC9kB,EAAWzlB,QAAUylB,EAAWzlB,SAAWmtC,EAAcntC,QACzDylB,EAAWzT,cAAgBxb,KAAKwkB,IAC9ByK,EAAWzT,cACXm7B,EAAcn7B,eAEhByT,EAAWvT,cAAgB1b,KAAKmiB,IAC9B8M,EAAWvT,cACXi7B,EAAcj7B,eAEhBuT,EAAW/3B,QAAU8I,KAAKmiB,IAAI8M,EAAW/3B,QAASy/C,EAAcz/C,SAChE+3B,EAAWzN,QAAUxhB,KAAKwkB,IAAIyK,EAAWzN,QAASm1B,EAAcn1B,cACnC7lB,IAAzBg7C,EAAcj8C,cACUiB,IAAtBszB,EAAWv0B,OACbu0B,EAAWv0B,QAAS,IAAAqkC,iBAClB9P,EAAWv0B,OACXi8C,EAAcj8C,QAGhBu0B,EAAWv0B,OAASi8C,EAAcj8C,aAGZiB,IAAtBszB,EAAW3rB,SACb2rB,EAAW3rB,OAASszC,EAExB,CAEA,OAAOlC,CACT,CAKAC,iBACE,MAAO,OACT,EAGF,0VC1PA,MAAMkC,UAAc,UAIlBv/C,YAAYY,GACV,MAAMm9C,EAActiC,OAAO0C,OAAO,CAAC,EAAGvd,UAC/Bm9C,EAAYv+C,OAEnBW,MAAM49C,GAKN39C,KAAKS,GAKLT,KAAKU,KAKLV,KAAKW,GAMLX,KAAKo/C,kBAAoB,KAMzBp/C,KAAKq/C,cAAgB,KAMrBr/C,KAAKs/C,iBAAmB,KAMxBt/C,KAAK4M,UAAY,KAMjB5M,KAAKu/C,cAAe,EAMpBv/C,KAAKw/C,UAAW,EAGZh/C,EAAQ4U,SACVpV,KAAKoV,OAAS5U,EAAQ4U,QAGpB5U,EAAQwI,KACVhJ,KAAK2N,OAAOnN,EAAQwI,KAGtBhJ,KAAKiN,kBACH,iBACAjN,KAAKy/C,6BAGP,MAAMrgD,EAASoB,EAAQpB,OACQoB,EAAc,OACzC,KACJR,KAAK0/C,UAAUtgD,EACjB,CAMA29C,eAAex8C,GAGb,OAFAA,EAAQA,GAAgB,IAClBkB,KAAKzB,MACJO,CACT,CAMAsR,oBAAoBmrC,GAGlB,OAFAA,EAASA,GAAkB,IACpBv7C,KAAKzB,KAAK08C,iBACVM,CACT,CAQA9qC,YACE,OAAkClS,KAAK8B,IAAI,mBAA0B,IACvE,CAKA69C,kBACE,OAAO3/C,KAAKkS,WACd,CAKA+qC,iBACE,MAAM79C,EAASY,KAAKkS,YACpB,OAAQ9S,EAAuBA,EAAOyG,WAArB,WACnB,CAKA+5C,sBACE5/C,KAAK+D,UACD/D,KAAKu/C,cAAgD,UAAhCv/C,KAAKkS,YAAYrM,aAG1C7F,KAAKu/C,cAAe,EACpBv/C,KAAKkC,cAAc,eACrB,CAKAu9C,8BACMz/C,KAAKs/C,oBACP,IAAAh6C,eAActF,KAAKs/C,kBACnBt/C,KAAKs/C,iBAAmB,MAE1Bt/C,KAAKu/C,cAAe,EACpB,MAAMngD,EAASY,KAAKkS,YAChB9S,IACFY,KAAKs/C,kBAAmB,IAAA1pC,QACtBxW,EACA,iBACAY,KAAK4/C,oBACL5/C,MAEwB,UAAtBZ,EAAOyG,aACT7F,KAAKu/C,cAAe,EACpB7mC,YAAW,KACT1Y,KAAKkC,cAAc,cAAc,GAChC,KAGPlC,KAAK+D,SACP,CAOA87C,YAAY9wC,GACV,OAAK/O,KAAK4M,UAGH5M,KAAK4M,UAAUizC,YAAY9wC,GAFzBy6B,QAAQE,QAAQ,GAG3B,CAMAwU,QAAQnvC,GACN,OAAK/O,KAAK4M,WAAc5M,KAAKw/C,SAGtBx/C,KAAK4M,UAAUsxC,QAAQnvC,GAFrB,IAGX,CAUAqG,OAAOhE,EAAY/R,GACjB,MAAMygD,EAAgB9/C,KAAKgS,cAE3B,GAAI8tC,EAAcC,aAAa3uC,GAE7B,OADApR,KAAKw/C,UAAW,EACTM,EAAc1nC,YAAYhH,EAAY/R,EAEjD,CAKA2gD,WACEhgD,KAAKw/C,UAAW,CAClB,CAMA32C,eAAeG,GACRA,GACHhJ,KAAKggD,WAEPhgD,KAAKwC,IAAI,cAAmBwG,EAC9B,CAMAi3C,iBACE,OAAOjgD,KAAK8B,IAAI,cAClB,CAaA6L,OAAO3E,GACDhJ,KAAKo/C,qBACP,IAAA95C,eAActF,KAAKo/C,mBACnBp/C,KAAKo/C,kBAAoB,MAEtBp2C,GACHhJ,KAAK+D,UAEH/D,KAAKq/C,iBACP,IAAA/5C,eAActF,KAAKq/C,eACnBr/C,KAAKq/C,cAAgB,MAEnBr2C,IACFhJ,KAAKo/C,mBAAoB,IAAAxpC,QACvB5M,EACA,sBACA,SAAUk3B,GACR,MAEMtuB,EADgD,EACjBR,WAAWQ,iBAC1C2lB,EAAav3B,KAAK08C,eAAc,IAEtC,IAAA5yC,SACG8H,EAAiBsuC,MAAK,SAAUC,GAC/B,OAAOA,EAAgBv3C,QAAU2uB,EAAW3uB,KAC9C,IACA,IAEFgJ,EAAiBnQ,KAAK81B,EACxB,GACAv3B,MAEFA,KAAKq/C,eAAgB,IAAAzpC,QAAO5V,KAAM,iBAAkBgJ,EAAIoM,OAAQpM,GAChEhJ,KAAK+D,UAET,CAQA27C,UAAUtgD,GACRY,KAAKwC,IAAI,iBAAsBpD,EACjC,CAMA4S,cAIE,OAHKhS,KAAK4M,YACR5M,KAAK4M,UAAY5M,KAAKogD,kBAEjBpgD,KAAK4M,SACd,CAKA6J,cACE,QAASzW,KAAK4M,SAChB,CAOAwzC,iBACE,OAAO,IACT,CAKAt9C,kBACM9C,KAAK4M,YACP5M,KAAK4M,UAAU/J,iBACR7C,KAAK4M,WAGd5M,KAAK0/C,UAAU,MACf3/C,MAAM+C,iBACR,EAUK,SAAS00B,EAAOD,EAAYlgB,GACjC,IAAKkgB,EAAWzlB,QACd,OAAO,EAET,MAAM7O,EAAaoU,EAAUpU,WAC7B,GACEA,EAAas0B,EAAWvT,eACxB/gB,GAAcs0B,EAAWzT,cAEzB,OAAO,EAET,MAAMvkB,EAAO8X,EAAU9X,KACvB,OAAOA,EAAOg4B,EAAW/3B,SAAWD,GAAQg4B,EAAWzN,OACzD,CAEA,yFC1bA,SACEu2B,QAAS,UACTC,QAAS,UACTC,OAAQ,SACRC,QAAS,SACTC,eAAgB,gBAChBC,eAAgB,gBAChBC,SAAU,UACVC,SAAU,UACVC,OAAQ,SACRC,IAAK,uLCCP,MAAMC,UAAkB,UAItBnhD,YAAYY,GACVT,MAAMS,EACR,CAEA4/C,iBACE,OAAO,IAAI,UAAwBpgD,KACrC,EAGF,6FCxBA,SACEghD,QAAS,UACTC,2BAA4B,iECGvB,SAAS31B,EAAM3P,EAAOmR,EAAKrC,GAChC,OAAOniB,KAAKwkB,IAAIxkB,KAAKmiB,IAAI9O,EAAOmR,GAAMrC,EACxC,CAaO,SAAS+oB,EAAuB5rC,EAAGC,EAAGogB,EAAIC,EAAI0S,EAAIC,GACvD,MAAMzyB,EAAKwyB,EAAK3S,EACV5f,EAAKwyB,EAAK3S,EAChB,GAAW,IAAP9f,GAAmB,IAAPC,EAAU,CACxB,MAAMu3B,IAAMh4B,EAAIqgB,GAAM7f,GAAMP,EAAIqgB,GAAM7f,IAAOD,EAAKA,EAAKC,EAAKA,GACxDu3B,EAAI,GACN3X,EAAK2S,EACL1S,EAAK2S,GACI+E,EAAI,IACb3X,GAAM7f,EAAKw3B,EACX1X,GAAM7f,EAAKu3B,EAEf,CACA,OAAOxD,EAAgBx0B,EAAGC,EAAGogB,EAAIC,EACnC,CAUO,SAASkU,EAAgBnU,EAAIC,EAAI0S,EAAIC,GAC1C,MAAMzyB,EAAKwyB,EAAK3S,EACV5f,EAAKwyB,EAAK3S,EAChB,OAAO9f,EAAKA,EAAKC,EAAKA,CACxB,CASO,SAAS64C,EAAkBC,GAChC,MAAM/+C,EAAI++C,EAAIlgD,OAEd,IAAK,IAAIF,EAAI,EAAGA,EAAIqB,EAAGrB,IAAK,CAE1B,IAAIqgD,EAASrgD,EACTsgD,EAAQ/4C,KAAK0T,IAAImlC,EAAIpgD,GAAGA,IAC5B,IAAK,IAAIozB,EAAIpzB,EAAI,EAAGozB,EAAI/xB,EAAG+xB,IAAK,CAC9B,MAAMmtB,EAAWh5C,KAAK0T,IAAImlC,EAAIhtB,GAAGpzB,IAC7BugD,EAAWD,IACbA,EAAQC,EACRF,EAASjtB,EAEb,CAEA,GAAc,IAAVktB,EACF,OAAO,KAIT,MAAMzvB,EAAMuvB,EAAIC,GAChBD,EAAIC,GAAUD,EAAIpgD,GAClBogD,EAAIpgD,GAAK6wB,EAGT,IAAK,IAAIrK,EAAIxmB,EAAI,EAAGwmB,EAAInlB,EAAGmlB,IAAK,CAC9B,MAAMg6B,GAAQJ,EAAI55B,GAAGxmB,GAAKogD,EAAIpgD,GAAGA,GACjC,IAAK,IAAIszC,EAAItzC,EAAGszC,EAAIjyC,EAAI,EAAGiyC,IACrBtzC,GAAKszC,EACP8M,EAAI55B,GAAG8sB,GAAK,EAEZ8M,EAAI55B,GAAG8sB,IAAMkN,EAAOJ,EAAIpgD,GAAGszC,EAGjC,CACF,CAGA,MAAMzsC,EAAI,IAAI+B,MAAMvH,GACpB,IAAK,IAAIkzB,EAAIlzB,EAAI,EAAGkzB,GAAK,EAAGA,IAAK,CAC/B1tB,EAAE0tB,GAAK6rB,EAAI7rB,GAAGlzB,GAAK++C,EAAI7rB,GAAGA,GAC1B,IAAK,IAAIksB,EAAIlsB,EAAI,EAAGksB,GAAK,EAAGA,IAC1BL,EAAIK,GAAGp/C,IAAM++C,EAAIK,GAAGlsB,GAAK1tB,EAAE0tB,EAE/B,CACA,OAAO1tB,CACT,CAQO,SAAS65C,EAAUC,GACxB,OAAyB,IAAjBA,EAAwBp5C,KAAK0e,EACvC,CAQO,SAAS26B,EAAUC,GACxB,OAAQA,EAAiBt5C,KAAK0e,GAAM,GACtC,CASO,SAASD,EAAO0K,EAAGC,GACxB,MAAMyC,EAAI1C,EAAIC,EACd,OAAOyC,EAAIzC,EAAI,EAAIyC,EAAIzC,EAAIyC,CAC7B,CAUO,SAASqc,EAAK/e,EAAGC,EAAG9pB,GACzB,OAAO6pB,EAAI7pB,GAAK8pB,EAAID,EACtB,CAQO,SAASgK,EAAQr5B,EAAGk5B,GACzB,MAAMqc,EAASrvC,KAAKuiB,IAAI,GAAIyQ,GAC5B,OAAOhzB,KAAKysB,MAAM3yB,EAAIu1C,GAAUA,CAClC,CASO,SAAS5iB,EAAM3yB,EAAGk5B,GACvB,OAAOhzB,KAAKysB,MAAM0G,EAAQr5B,EAAGk5B,GAC/B,CASO,SAAS/P,EAAMnpB,EAAGk5B,GACvB,OAAOhzB,KAAKijB,MAAMkQ,EAAQr5B,EAAGk5B,GAC/B,CASO,SAASumB,EAAKz/C,EAAGk5B,GACtB,OAAOhzB,KAAKu5C,KAAKpmB,EAAQr5B,EAAGk5B,GAC9B,uPC9LO,SAASl6B,EAAM0gD,GACpB,IAAK,MAAMpmC,KAAYomC,SACdA,EAAOpmC,EAElB,CAOO,SAAStH,EAAQ0tC,GACtB,IAAIpmC,EACJ,IAAKA,KAAYomC,EACf,OAAO,EAET,OAAQpmC,CACV,6HCjBA,SACEW,YAAa,cACbC,YAAa,cACbC,UAAW,YACXC,YAAa,cACbC,WAAY,aACZC,aAAc,eACdC,aAAc,eACdC,cAAe,m1CCoFjB,IAAImlC,GAAwB,EAKrB,SAASx+B,EAAyBkN,GAEvCsxB,SADyB99C,IAAZwsB,GAA+BA,EAE9C,CAQO,SAASuxB,EAAeC,EAAOC,GACpC,QAAej+C,IAAXi+C,EACF,IAAK,IAAInhD,EAAI,EAAGC,EAAKihD,EAAMhhD,OAAQF,EAAIC,IAAMD,EAC3CmhD,EAAOnhD,GAAKkhD,EAAMlhD,QAIpBmhD,EAASD,EAAMp4C,QAEjB,OAAOq4C,CACT,CAOO,SAASC,EAAkBF,EAAOC,GACvC,QAAej+C,IAAXi+C,GAAwBD,IAAUC,EAAQ,CAC5C,IAAK,IAAInhD,EAAI,EAAGC,EAAKihD,EAAMhhD,OAAQF,EAAIC,IAAMD,EAC3CmhD,EAAOnhD,GAAKkhD,EAAMlhD,GAEpBkhD,EAAQC,CACV,CACA,OAAOD,CACT,CASO,SAASG,EAAct/B,IAC5B,IAAA+F,KAAQ/F,EAAWu/B,UAAWv/B,IAC9B,IAAA+F,KAAiB/F,EAAYA,EAAYk/B,EAC3C,CAKO,SAASM,EAAeC,GAC7BA,EAAY7gD,QAAQ0gD,EACtB,CAWO,SAAStgD,EAAI0gD,GAClB,MAAiC,iBAAnBA,GACV,IAAA1gD,KAA8B,GACJ,GAAoB,IACpD,CAsBO,SAAS2gD,EAAmB3/B,EAAY7f,EAAY2nC,EAAO8X,GAEhE,IAAIC,EACJ,MAAMrZ,GAFNxmB,EAAahhB,EAAIghB,IAES8/B,yBAC1B,GAAItZ,GAEF,GADAqZ,EAAkBrZ,EAAOrmC,EAAY2nC,GACjC8X,GAASA,IAAU5/B,EAAWwoB,WAAY,CAC5C,MAAMuX,EAAgB//B,EAAWmN,mBAC7B4yB,IACFF,EACGA,EAAkBE,EAAiB,EAAA7yB,gBAAgB0yB,GAE1D,MACK,CACL,MAAMI,EAAYhgC,EAAWwoB,WAC7B,GAAkB,WAAbwX,IAA2BJ,GAAmB,WAATA,EACxCC,EAAkB1/C,MACb,CAIL,MAAM8/C,EAAaC,EACjBlgC,EACAhhB,EAAI,cAEN,GAAIihD,IAAeZ,GAAmC,YAAdW,EAEtCH,EAAkB1/C,EAAa6f,EAAWmN,uBACrC,CACL,IAAIgzB,EAAW,CACbrY,EAAM,GAAK3nC,EAAa,EACxB2nC,EAAM,GACNA,EAAM,GAAK3nC,EAAa,EACxB2nC,EAAM,GACNA,EAAM,GACNA,EAAM,GAAK3nC,EAAa,EACxB2nC,EAAM,GACNA,EAAM,GAAK3nC,EAAa,GAE1BggD,EAAWF,EAAWE,EAAUA,EAAU,GAG1CN,IAFc,IAAAl6C,aAAYw6C,EAASp5C,MAAM,EAAG,GAAIo5C,EAASp5C,MAAM,EAAG,KACnD,IAAApB,aAAYw6C,EAASp5C,MAAM,EAAG,GAAIo5C,EAASp5C,MAAM,EAAG,KAC9B,CACvC,CACA,MAAMg5C,EAAgBH,EAClB,EAAA1yB,gBAAgB0yB,GAChB5/B,EAAWmN,wBACOhsB,IAAlB4+C,IACFF,GAAmBE,EAEvB,CACF,CACA,OAAOF,CACT,CASO,SAASO,EAAyBX,GACvCD,EAAeC,GACfA,EAAY7gD,SAAQ,SAAUtC,GAC5BmjD,EAAY7gD,SAAQ,SAAU0pC,GACxBhsC,IAAWgsC,IACb,IAAAviB,KAAiBzpB,EAAQgsC,EAAa4W,EAE1C,GACF,GACF,CAeO,SAASmB,EACdC,EACAC,EACAC,EACAC,GAEAH,EAAa1hD,SAAQ,SAAU8hD,GAC7BH,EAAa3hD,SAAQ,SAAU+hD,IAC7B,IAAA56B,KAAiB26B,EAAaC,EAAaH,IAC3C,IAAAz6B,KAAiB46B,EAAaD,EAAaD,EAC7C,GACF,GACF,CAKO,SAASG,KACd,IAAAtiD,UACA,IAAAA,QACF,CAOO,SAASyhB,EAAiBC,EAAY6gC,GAC3C,OAAK7gC,EAE4B,iBAAfA,EACThhB,EAAIghB,GAEoB,EAJxBhhB,EAAI6hD,EAKf,CASO,SAASC,EAAuCC,GACrD,OAAO,SAOK5B,EAAOC,EAAQ4B,GACvB,MAAM7iD,EAASghD,EAAMhhD,OACrB6iD,OAA0B7/C,IAAd6/C,EAA0BA,EAAY,EAClD5B,OAAoBj+C,IAAXi+C,EAAuBA,EAAS,IAAIv4C,MAAM1I,GACnD,IAAK,IAAIF,EAAI,EAAGA,EAAIE,EAAQF,GAAK+iD,EAAW,CAC1C,MAAMlZ,EAAQiZ,EAAe5B,EAAMp4C,MAAM9I,EAAGA,EAAI+iD,IAC1CC,EAAcnZ,EAAM3pC,OAC1B,IAAK,IAAIsmB,EAAI,EAAGC,EAAKs8B,EAAWv8B,EAAIC,IAAMD,EACxC26B,EAAOnhD,EAAIwmB,GAAKA,GAAKw8B,EAAc9B,EAAMlhD,EAAIwmB,GAAKqjB,EAAMrjB,EAE5D,CACA,OAAO26B,CAEX,CACF,CAwBO,SAAS8B,EAAwB5kD,EAAQgsC,EAAa6Y,EAASC,GACpE,MAAM7Y,EAAavpC,EAAI1C,GACjB+kD,EAAWriD,EAAIspC,IACrB,IAAAviB,KACEwiB,EACA8Y,EACAP,EAAuCK,KAEzC,IAAAp7B,KACEs7B,EACA9Y,EACAuY,EAAuCM,GAE3C,CAWO,SAAShlD,EAAW+P,EAAY6T,GAErC,OADAS,IACOuI,EACL7c,EACA,iBACehL,IAAf6e,EAA2BA,EAAa,YAE5C,CAWO,SAASshC,EAASn1C,EAAY6T,GACnC,MAAMuhC,EAASv4B,EACb7c,OACehL,IAAf6e,EAA2BA,EAAa,YACxC,aAEIwhC,EAAMD,EAAO,GAInB,OAHIC,GAAO,KAAOA,EAAM,OACtBD,EAAO,IAAK,IAAAt9B,QAAOu9B,EAAM,IAAK,KAAO,KAEhCD,CACT,CAYO,SAASE,EAAWf,EAAaC,GACtC,GAAID,IAAgBC,EAClB,OAAO,EAET,MAAMe,EAAahB,EAAYlY,aAAemY,EAAYnY,WAC1D,GAAIkY,EAAYnB,YAAcoB,EAAYpB,UACxC,OAAOmC,EAGT,OADsBxB,EAA4BQ,EAAaC,KACtCzB,GAAkBwC,CAC7C,CAWO,SAASxB,EACdyB,EACAC,GAEA,MAAMC,EAAaF,EAAiBpC,UAC9BuC,EAAkBF,EAAsBrC,UAC9C,IAAIwC,GAAgB,IAAA/iD,KAAiB6iD,EAAYC,GAIjD,OAHKC,IACHA,EAAgB1C,GAEX0C,CACT,CAYO,SAAS/Y,EAAa1sC,EAAQgsC,GAGnC,OAAO4X,EAFkBlhD,EAAI1C,GACC0C,EAAIspC,GAEpC,CAgBO,SAAStf,EAAU7c,EAAY7P,EAAQgsC,GAE5C,OADsBU,EAAa1sC,EAAQgsC,EACpCyZ,CAAc51C,OAAYhL,EAAWgL,EAAWhO,OACzD,CAcO,SAAShC,EAAgB+D,EAAQ5D,EAAQgsC,EAAahD,GAC3D,MAAMyc,EAAgB/Y,EAAa1sC,EAAQgsC,GAC3C,OAAO,IAAAlD,gBAAellC,EAAQ6hD,OAAe5gD,EAAWmkC,EAC1D,CAUO,SAAS0c,EACdla,EACA6Z,EACAC,GAMA,OAJsB1B,EACpByB,EACAC,EAEKG,CAAcja,EACvB,CAKA,IAAIhf,EAAiB,KAQd,SAASm5B,EAAkBjiC,GAChC8I,EAAiB9pB,EAAIghB,EACvB,CAMO,SAASkiC,IACdp5B,EAAiB,IACnB,CASO,SAASC,IACd,OAAOD,CACT,CAOO,SAASq5B,IACdF,EAAkB,YACpB,CASO,SAAS9zC,EAAiBhC,EAAYw1C,GAC3C,OAAK74B,EAGEE,EAAU7c,EAAYw1C,EAAkB74B,GAFtC3c,CAGX,CASO,SAASqD,EAAmBrD,EAAYi2C,GAC7C,OAAKt5B,EAgBEE,EAAU7c,EAAY2c,EAAgBs5B,IAdzCnD,KACC,IAAAzpC,QAAOrJ,EAAY,CAAC,EAAG,KACxBA,EAAW,KAAO,KAClBA,EAAW,IAAM,KACjBA,EAAW,KAAO,IAClBA,EAAW,IAAM,KAEjB8yC,GAAwB,GACxB,IAAA3oC,MACE,2FAGGnK,EAGX,CASO,SAASsa,EAAavmB,EAAQyhD,GACnC,OAAK74B,EAGE3sB,EAAgB+D,EAAQyhD,EAAkB74B,GAFxC5oB,CAGX,CASO,SAASwgB,EAAexgB,EAAQkiD,GACrC,OAAKt5B,EAGE3sB,EAAgB+D,EAAQ4oB,EAAgBs5B,GAFtCliD,CAGX,CAUO,SAASmiD,EAAiBliD,EAAYwhD,GAC3C,IAAK74B,EACH,OAAO3oB,EAET,MAAMmiD,EAActjD,EAAI2iD,GAAkBnZ,WACpC+Z,EAAYz5B,EAAe0f,WACjC,OAAO8Z,GAAeC,EACjBpiD,EAAa,EAAA+sB,gBAAgBo1B,GAAgB,EAAAp1B,gBAAgBq1B,GAC9DpiD,CACN,CAUO,SAASqiD,EAAmBriD,EAAYiiD,GAC7C,IAAKt5B,EACH,OAAO3oB,EAET,MAAMmiD,EAActjD,EAAIojD,GAAgB5Z,WAClC+Z,EAAYz5B,EAAe0f,WACjC,OAAO8Z,GAAeC,EACjBpiD,EAAa,EAAA+sB,gBAAgBq1B,GAAc,EAAAr1B,gBAAgBo1B,GAC5DniD,CACN,CAYO,SAASsiD,EAA8Bla,EAAY8Y,EAAUr4B,GAClE,OAAO,SAAU4e,GACf,IAAI8a,EAAa3oB,EACjB,GAAIwO,EAAW1O,WAAY,CACzB,MAAM8oB,EAAepa,EAAW5lC,YAC1Bs3B,GAAoB,IAAA3a,UAASqjC,GACnC/a,EAAQA,EAAM7gC,MAAM,GACpBgzB,GAAa,IAAAC,eAAc4N,EAAOW,EAAYtO,GAC1CF,IAEF6N,EAAM,GAAKA,EAAM,GAAK7N,EAAaE,GAErC2N,EAAM,IAAK,IAAApf,OAAMof,EAAM,GAAI+a,EAAa,GAAIA,EAAa,IACzD/a,EAAM,IAAK,IAAApf,OAAMof,EAAM,GAAI+a,EAAa,GAAIA,EAAa,IACzDD,EAAc15B,EAAU4e,EAC1B,MACE8a,EAAc15B,EAAU4e,GAM1B,OAJI7N,GAAcsnB,EAASxnB,aAEzB6oB,EAAY,IAAM3oB,GAAa,IAAAza,UAAS+hC,EAAS1+C,cAE5C+/C,CACT,CACF,CAOO,SAASE,IAGdxC,EAAyB,eACzBA,EAAyB,eAGzBC,EACE,cACA,cACA,EAAAwC,aACA,EAAA5C,WAEJ,CAEA2C,+HC/dA,QA3NA,MAIE9lD,YAAYY,GAKVR,KAAK4lD,MAAQplD,EAAQX,KASrBG,KAAK6lD,OAAoDrlD,EAAa,MAStER,KAAK8pC,aAA6B7lC,IAAnBzD,EAAQwC,OAAuBxC,EAAQwC,OAAS,KAS/DhD,KAAK8lD,kBACqB7hD,IAAxBzD,EAAQulD,YAA4BvlD,EAAQulD,YAAc,KAM5D/lD,KAAKgmD,sBACyB/hD,IAA5BzD,EAAQylD,gBAAgCzlD,EAAQylD,gBAAkB,MAMpEjmD,KAAKkmD,aAA6BjiD,IAAnBzD,EAAQ2lD,QAAuB3lD,EAAQ2lD,OAMtDnmD,KAAKomD,aAAepmD,KAAKkmD,UAAWlmD,KAAK8pC,SAMzC9pC,KAAKqmD,wBAA0B7lD,EAAQiiD,mBAMvCziD,KAAKsmD,iBAAmB,KAMxBtmD,KAAKumD,eAAiB/lD,EAAQqiD,aAChC,CAKAlmB,WACE,OAAO38B,KAAKomD,SACd,CAOA/D,UACE,OAAOriD,KAAK4lD,KACd,CAOAngD,YACE,OAAOzF,KAAK8pC,OACd,CAOAwB,WACE,OAAOtrC,KAAK6lD,MACd,CASA51B,mBACE,OAAOjwB,KAAKumD,gBAAkB,EAAAv2B,gBAAgBhwB,KAAK6lD,OACrD,CAOAla,iBACE,OAAO3rC,KAAK8lD,YACd,CAaAU,qBACE,OAAOxmD,KAAKgmD,gBACd,CAOAv2B,WACE,OAAOzvB,KAAKkmD,OACd,CAOAO,UAAUN,GACRnmD,KAAKkmD,QAAUC,EACfnmD,KAAKomD,aAAeD,IAAUnmD,KAAK8pC,QACrC,CAKA4c,qBACE,OAAO1mD,KAAKsmD,gBACd,CAKAK,mBAAmBC,GACjB5mD,KAAKsmD,iBAAmBM,CAC1B,CAOAzJ,UAAUn6C,GACRhD,KAAK8pC,QAAU9mC,EACfhD,KAAKomD,aAAepmD,KAAKkmD,UAAWljD,EACtC,CAQA6jD,eAAed,GACb/lD,KAAK8lD,aAAeC,CACtB,CAQAe,sBAAsBt0B,GACpBxyB,KAAKqmD,wBAA0B7zB,CACjC,CAOAowB,yBACE,OAAO5iD,KAAKqmD,uBACd,qGC9PF,MAAMU,EAAa,CACjB,KAAQ,IACR,KAAQ,KACR,KAAQ,QACR,KAAQ,UACR,KAAQ,WAOH,SAASC,EAASnnD,GACvB,OAAOknD,EAAWlnD,EACpB,CAiBO,MAAMmwB,EAAkB,CAE7B,QAAW,SAAW,EAAI1nB,KAAK0e,IAC/B,QAAY,EAAI1e,KAAK0e,GAAK,QAAW,IACrC,GAAM,MACN,EAAK,EACL,QAAS,KAAO,0PCvCX,MAAMigC,EAAS,QAMTC,EAAY5+C,KAAK0e,GAAKigC,EAMtB1G,EAAS,EAAE2G,GAAYA,EAAWA,EAAWA,GAM7CC,EAAe,EAAE,KAAM,GAAI,IAAK,IAOhCC,EAAaH,EAAS3+C,KAAKqZ,IAAIrZ,KAAK++C,IAAI/+C,KAAK0e,GAAK,IAM/D,MAAMsgC,UAA2B,UAI/B1nD,YAAYC,GACVE,MAAM,CACJF,KAAMA,EACN6iD,MAAO,IACP1/C,OAAQu9C,EACR4F,QAAQ,EACRJ,YAAaoB,EACb1E,mBAAoB,SAAUx/C,EAAY2nC,GACxC,OAAO3nC,EAAaqF,KAAKi/C,KAAK3c,EAAM,GAAKqc,EAC3C,GAEJ,EASK,MAAMO,EAAc,CACzB,IAAIF,EAAmB,aACvB,IAAIA,EAAmB,eACvB,IAAIA,EAAmB,eACvB,IAAIA,EAAmB,eACvB,IAAIA,EAAmB,8CACvB,IAAIA,EAAmB,iDAWlB,SAAS3B,EAAa1D,EAAOC,EAAQ4B,GAC1C,MAAM7iD,EAASghD,EAAMhhD,OACrB6iD,EAAYA,EAAY,EAAIA,EAAY,OACzB7/C,IAAXi+C,IAGAA,EAFE4B,EAAY,EAEL7B,EAAMp4C,QAEN,IAAIF,MAAM1I,IAGvB,IAAK,IAAIF,EAAI,EAAGA,EAAIE,EAAQF,GAAK+iD,EAAW,CAC1C5B,EAAOnhD,GAAMmmD,EAAYjF,EAAMlhD,GAAM,IACrC,IAAI8G,EAAIo/C,EAAS3+C,KAAKqZ,IAAIrZ,KAAK++C,IAAK/+C,KAAK0e,KAAOi7B,EAAMlhD,EAAI,GAAK,IAAO,MAClE8G,EAAIu/C,EACNv/C,EAAIu/C,EACKv/C,GAAKu/C,IACdv/C,GAAKu/C,GAEPlF,EAAOnhD,EAAI,GAAK8G,CAClB,CACA,OAAOq6C,CACT,CAUO,SAASa,EAAWd,EAAOC,EAAQ4B,GACxC,MAAM7iD,EAASghD,EAAMhhD,OACrB6iD,EAAYA,EAAY,EAAIA,EAAY,OACzB7/C,IAAXi+C,IAGAA,EAFE4B,EAAY,EAEL7B,EAAMp4C,QAEN,IAAIF,MAAM1I,IAGvB,IAAK,IAAIF,EAAI,EAAGA,EAAIE,EAAQF,GAAK+iD,EAC/B5B,EAAOnhD,GAAM,IAAMkhD,EAAMlhD,GAAMmmD,EAC/BhF,EAAOnhD,EAAI,GACR,IAAMuH,KAAKm/C,KAAKn/C,KAAKo/C,IAAIzF,EAAMlhD,EAAI,GAAKkmD,IAAY3+C,KAAK0e,GAAK,GAEnE,OAAOk7B,CACT,oLCzHO,MAAM+E,EAAS,QAQT1G,EAAS,EAAE,KAAM,GAAI,IAAK,IAM1BvwB,EAAmB1nB,KAAK0e,GAAKigC,EAAU,IAUpD,MAAMU,UAA2B,UAK/B/nD,YAAYC,EAAMomD,GAChBlmD,MAAM,CACJF,KAAMA,EACN6iD,MAAO,UACP1/C,OAAQu9C,EACR0F,gBAAiBA,EACjBE,QAAQ,EACRtD,cAAe7yB,EACf+1B,YAAaxF,GAEjB,EASK,MAAMiH,EAAc,CACzB,IAAIG,EAAmB,UACvB,IAAIA,EAAmB,YAAa,OACpC,IAAIA,EAAmB,iCACvB,IAAIA,EAAmB,4BACvB,IAAIA,EAAmB,gDACvB,IAAIA,EAAmB,+CAAgD,OACvE,IAAIA,EAAmB,6CAA8C,2GC3DvE,IAAI3zB,EAAQ,CAAC,EAKN,SAAS5yB,IACd4yB,EAAQ,CAAC,CACX,CAOO,SAASlyB,EAAIjC,GAClB,OACEm0B,EAAMn0B,IACNm0B,EAAMn0B,EAAKk8B,QAAQ,yCAA0C,aAC7D,IAEJ,CAOO,SAASlT,EAAIhpB,EAAMijB,GACxBkR,EAAMn0B,GAAQijB,CAChB,qJC3BA,IAAI8kC,EAAa,CAAC,EAKX,SAASxmD,IACdwmD,EAAa,CAAC,CAChB,CAUO,SAAS/+B,EAAIzpB,EAAQgsC,EAAajD,GACvC,MAAMwc,EAAavlD,EAAOijD,UACpBuC,EAAkBxZ,EAAYiX,UAC9BsC,KAAciD,IAClBA,EAAWjD,GAAc,CAAC,GAE5BiD,EAAWjD,GAAYC,GAAmBzc,CAC5C,CAWO,SAAS9lC,EAAOjD,EAAQgsC,GAC7B,MAAMuZ,EAAavlD,EAAOijD,UACpBuC,EAAkBxZ,EAAYiX,UAC9Bv2B,EAAY87B,EAAWjD,GAAYC,GAKzC,cAJOgD,EAAWjD,GAAYC,IAC1B,IAAAxwC,SAAQwzC,EAAWjD,YACdiD,EAAWjD,GAEb74B,CACT,CAQO,SAAShqB,EAAI6iD,EAAYC,GAC9B,IAAI94B,EAIJ,OAHI64B,KAAciD,GAAchD,KAAmBgD,EAAWjD,KAC5D74B,EAAY87B,EAAWjD,GAAYC,IAE9B94B,CACT,iKC5DA,MAAM+7B,UAAkB,UAItBjoD,YAAYyL,GACVtL,QAMAC,KAAK8nD,UAAY,KAMjB9nD,KAAKwa,SAAWpR,SAASgC,cAAc,OACvCpL,KAAKwa,SAASjP,MAAMC,SAAW,WAC/BxL,KAAKwa,SAASjP,MAAMM,cAAgB,OACpC7L,KAAKwa,SAASnP,UAAY,UAAYA,EAMtCrL,KAAKga,KAAO,KAMZha,KAAK41C,YAAc,KAMnB51C,KAAK+nD,UAAY,IACnB,CAKAjlD,kBACE9C,KAAK2N,OAAO,KACd,CAKAq6C,UACE,MAAM9R,EAAal2C,KAAK41C,YAClBO,EAAWn2C,KAAK+nD,UAChBE,EAAK,KACL18C,EAAQvL,KAAKwa,SAASjP,MAC5BA,EAAMqF,KAAOtI,KAAKwkB,IAAIopB,EAAW,GAAIC,EAAS,IAAM8R,EACpD18C,EAAMuF,IAAMxI,KAAKwkB,IAAIopB,EAAW,GAAIC,EAAS,IAAM8R,EACnD18C,EAAMG,MAAQpD,KAAK0T,IAAIm6B,EAAS,GAAKD,EAAW,IAAM+R,EACtD18C,EAAMpH,OAASmE,KAAK0T,IAAIm6B,EAAS,GAAKD,EAAW,IAAM+R,CACzD,CAKAt6C,OAAO3E,GACL,GAAIhJ,KAAKga,KAAM,CACbha,KAAKga,KAAKtH,sBAAsBohB,YAAY9zB,KAAKwa,UACjD,MAAMjP,EAAQvL,KAAKwa,SAASjP,MAC5BA,EAAMqF,KAAO,UACbrF,EAAMuF,IAAM,UACZvF,EAAMG,MAAQ,UACdH,EAAMpH,OAAS,SACjB,CACAnE,KAAKga,KAAOhR,EACRhJ,KAAKga,MACPha,KAAKga,KAAKtH,sBAAsB5G,YAAY9L,KAAKwa,SAErD,CAMA87B,UAAUJ,EAAYC,GACpBn2C,KAAK41C,YAAcM,EACnBl2C,KAAK+nD,UAAY5R,EACjBn2C,KAAKkoD,yBACLloD,KAAKgoD,SACP,CAKAE,yBACE,MAAMhS,EAAal2C,KAAK41C,YAClBO,EAAWn2C,KAAK+nD,UAOhBvjB,EANS,CACb0R,EACA,CAACA,EAAW,GAAIC,EAAS,IACzBA,EACA,CAACA,EAAS,GAAID,EAAW,KAEAltC,IACzBhJ,KAAKga,KAAK9K,+BACVlP,KAAKga,MAGPwqB,EAAY,GAAKA,EAAY,GAAG36B,QAC3B7J,KAAK8nD,UAGR9nD,KAAK8nD,UAAU3b,eAAe,CAAC3H,IAF/BxkC,KAAK8nD,UAAY,IAAI,UAAQ,CAACtjB,GAIlC,CAKA4R,cACE,OAAOp2C,KAAK8nD,SACd,EAGF,oIC7HA,MAAMK,UAAoB,UAQxBvoD,YAAYQ,EAAMgoD,EAAuBh3C,EAAYktB,GACnDv+B,MAAMK,GAQNJ,KAAKooD,sBAAwBA,EAO7BpoD,KAAKoR,WAAaA,EASlBpR,KAAKs+B,QAAUA,CACjB,EAGF,2FCpCA,SAME+pB,UAAW,YAOXvrC,WAAY,aASZwrC,WAAY,aASZC,YAAa,cASbC,eAAgB,utBC2CX,MAAMC,EAAc,kBAMdC,EAAmB,OAMnBC,EAAiB,QAMjBC,EAAkB,GAMlBC,EAAwB,EAMxBC,EAAkB,QAMlBC,EAAoB,GAMpBC,EAAqB,OAMrBC,EAAmB,SAMnBC,EAAsB,SAMtBC,EAAiB,CAAC,EAAG,EAAG,EAAG,GAM3BC,EAAmB,EAKnBC,EAAe,IAAI,UAKhC,IAKIC,EALAC,EAAiB,KAUd,MAAMC,EAAc,CAAC,EAMfC,EAAe,WAC1B,MAAMC,EAAU,IACV1yC,EAAO,QACP2yC,EAAiB,CAAC,YAAa,SAC/B/qC,EAAM+qC,EAAe1oD,OACrB2oD,EAAO,2BACb,IAAIC,EAAUC,EAQd,SAASC,EAAYC,EAAWC,EAAYC,GAC1C,IAAIC,GAAY,EAChB,IAAK,IAAIppD,EAAI,EAAGA,EAAI6d,IAAO7d,EAAG,CAC5B,MAAMqpD,EAAgBT,EAAe5oD,GAKrC,GAJA+oD,EAAiBO,EACfL,EAAY,IAAMC,EAAa,IAAMjzC,EAAOozC,EAC5CR,GAEEM,GAAcE,EAAe,CAC/B,MAAM1+C,EAAQ2+C,EACZL,EACE,IACAC,EACA,IACAjzC,EACAkzC,EACA,IACAE,EACFR,GAIFO,EAAYA,GAAaz+C,GAASo+C,CACpC,CACF,CACA,QAAIK,CAIN,CAEA,SAASG,IACP,IAAIC,GAAO,EACX,MAAMC,EAAQnB,EAAazrC,UAC3B,IAAK,IAAI7c,EAAI,EAAGC,EAAKwpD,EAAMvpD,OAAQF,EAAIC,IAAMD,EAAG,CAC9C,MAAM0pD,EAAOD,EAAMzpD,GACfsoD,EAAavnD,IAAI2oD,GAAQf,IACvBK,EAAY14C,MAAMrR,KAAMyqD,EAAK/1B,MAAM,SACrC,IAAAtzB,OAAMooD,GAEND,EAAiB,KACjBD,OAAcrlD,EACdolD,EAAa7mD,IAAIioD,EAAMf,KAEvBL,EAAa7mD,IAAIioD,EAAMpB,EAAavnD,IAAI2oD,GAAQ,GAAG,GACnDF,GAAO,GAGb,CACIA,IACFG,cAAcb,GACdA,OAAW5lD,EAEf,CAEA,OAAO,SAAUu5B,GACf,MAAMitB,GAAO,IAAAltB,mBAAkBC,GAC/B,IAAKitB,EACH,OAEF,MAAM5sB,EAAW4sB,EAAK5sB,SACtB,IAAK,IAAI98B,EAAI,EAAGC,EAAK68B,EAAS58B,OAAQF,EAAIC,IAAMD,EAAG,CACjD,MAAM+8B,EAASD,EAAS98B,GAClBwF,EAAMkkD,EAAKl/C,MAAQ,KAAOk/C,EAAK9sB,OAAS,KAAOG,OACvB75B,IAA1BolD,EAAavnD,IAAIyE,KACnB8iD,EAAa7mD,IAAI+D,EAAKmjD,GAAS,GAC1BK,EAAYU,EAAKl/C,MAAOk/C,EAAK9sB,OAAQG,KACxCurB,EAAa7mD,IAAI+D,EAAK,GAAG,QACRtC,IAAb4lD,IACFA,EAAWc,YAAYL,EAAO,MAItC,CACF,CACD,CAzF2B,GA+FfM,EAAoB,WAI/B,IAAIC,EACJ,OAAO,SAAUrtB,GACf,IAAIr5B,EAASqlD,EAAYhsB,GACzB,GAAcv5B,MAAVE,EAAqB,CACvB,GAAI,EAAA+5B,wBAAyB,CAC3B,MAAMusB,GAAO,IAAAltB,mBAAkBC,GACzBstB,EAAUC,EAAYvtB,EAAU,MAItCr5B,GAHmB8T,MAAM0c,OAAO81B,EAAK/sB,aACjC,IACA/I,OAAO81B,EAAK/sB,cAGbotB,EAAQE,wBAA0BF,EAAQG,yBAC/C,MACOJ,IACHA,EAAiBzhD,SAASgC,cAAc,OACxCy/C,EAAe7yB,UAAY,IAC3B6yB,EAAet/C,MAAM2/C,UAAY,IACjCL,EAAet/C,MAAM4/C,UAAY,OACjCN,EAAet/C,MAAMpH,OAAS,OAC9B0mD,EAAet/C,MAAM+Y,QAAU,IAC/BumC,EAAet/C,MAAM6/C,OAAS,OAC9BP,EAAet/C,MAAMC,SAAW,WAChCq/C,EAAet/C,MAAMusB,QAAU,QAC/B+yB,EAAet/C,MAAMqF,KAAO,YAE9Bi6C,EAAet/C,MAAMk/C,KAAOjtB,EAC5Bp0B,SAASwqB,KAAK9nB,YAAY++C,GAC1B1mD,EAAS0mD,EAAe3xC,aACxB9P,SAASwqB,KAAKE,YAAY+2B,GAE5BrB,EAAYhsB,GAAYr5B,CAC1B,CACA,OAAOA,CACT,CACD,CAvCgC,GA8CjC,SAAS4mD,EAAYN,EAAMb,GAQzB,OAPKL,IACHA,GAAiB,IAAA7iD,uBAAsB,EAAG,IAExC+jD,GAAQnB,IACVC,EAAekB,KAAOA,EACtBnB,EAAcC,EAAekB,MAExBlB,EAAewB,YAAYnB,EACpC,CAOO,SAASS,EAAiBI,EAAMb,GACrC,OAAOmB,EAAYN,EAAMb,GAAMl+C,KACjC,CASO,SAAS2/C,EAAyBZ,EAAMb,EAAM51B,GACnD,GAAI41B,KAAQ51B,EACV,OAAOA,EAAM41B,GAEf,MAAMl+C,EAAQk+C,EACXl1B,MAAM,MACN42B,QAAO,CAAChpD,EAAMipD,IAASjjD,KAAKmiB,IAAInoB,EAAM+nD,EAAiBI,EAAMc,KAAQ,GAExE,OADAv3B,EAAM41B,GAAQl+C,EACPA,CACT,CAOO,SAAS8/C,EAAkBC,EAAWC,GAC3C,MAAMC,EAAS,GACTC,EAAU,GACVC,EAAa,GACnB,IAAIngD,EAAQ,EACRogD,EAAY,EACZ3nD,EAAS,EACTu5B,EAAa,EACjB,IAAK,IAAI38B,EAAI,EAAGC,EAAK0qD,EAAOzqD,OAAQF,GAAKC,EAAID,GAAK,EAAG,CACnD,MAAM6oD,EAAO8B,EAAO3qD,GACpB,GAAa,OAAT6oD,GAAiB7oD,IAAMC,EAAI,CAC7B0K,EAAQpD,KAAKmiB,IAAI/e,EAAOogD,GACxBD,EAAWpqD,KAAKqqD,GAChBA,EAAY,EACZ3nD,GAAUu5B,EACV,QACF,CACA,MAAM+sB,EAAOiB,EAAO3qD,EAAI,IAAM0qD,EAAUhB,KAClCsB,EAAe1B,EAAiBI,EAAMb,GAC5C+B,EAAOlqD,KAAKsqD,GACZD,GAAaC,EACb,MAAMC,EAAgBpB,EAAkBH,GACxCmB,EAAQnqD,KAAKuqD,GACbtuB,EAAap1B,KAAKmiB,IAAIiT,EAAYsuB,EACpC,CACA,MAAO,CAACtgD,QAAOvH,SAAQwnD,SAAQC,UAASC,aAC1C,CAQO,SAASI,EAAe3tB,EAAS9mB,EAAU8N,EAASC,GACxC,IAAb/N,IACF8mB,EAAQ6M,UAAU7lB,EAASC,GAC3B+Y,EAAQ1V,OAAOpR,GACf8mB,EAAQ6M,WAAW7lB,GAAUC,GAEjC,CAeO,SAAS2mC,EACd5tB,EACAxS,EACAuwB,EACA8P,EACAC,EACAC,EACAtjC,EACAC,EACAphB,EACAC,EACAs0B,GAEAmC,EAAQguB,OAEQ,IAAZjQ,IACF/d,EAAQiuB,aAAelQ,GAErBvwB,GACFwS,EAAQkuB,aAAan7C,MAAMitB,EAASxS,GAGjB,EAAe2gC,qBAElCnuB,EAAQ6M,UAAUvjC,EAAGC,GACrBy2B,EAAQnC,MAAMA,EAAM,GAAIA,EAAM,IA2ClC,SAAkC7F,EAAOgI,GACvC,MAAMmuB,EAAsBn2B,EAAMm2B,oBAClC,IAAK,IAAI1rD,EAAI,EAAGC,EAAKyrD,EAAoBxrD,OAAQF,EAAIC,EAAID,GAAK,EACxD4I,MAAMC,QAAQ6iD,EAAoB1rD,EAAI,IACxCu9B,EAAQmuB,EAAoB1rD,IAAIsQ,MAC9BitB,EACAmuB,EAAoB1rD,EAAI,IAG1Bu9B,EAAQmuB,EAAoB1rD,IAAM0rD,EAAoB1rD,EAAI,EAGhE,CAtDI2rD,CAA8C,EAAgBpuB,IACrDnC,EAAM,GAAK,GAAKA,EAAM,GAAK,GAEpCmC,EAAQ6M,UAAUvjC,EAAGC,GACrBy2B,EAAQnC,MAAMA,EAAM,GAAIA,EAAM,IAC9BmC,EAAQquB,UAC6D,EAGnEP,EACAC,EACAtjC,EACAC,EACA,EACA,EACAD,EACAC,IAIFsV,EAAQquB,UAC6D,EAGnEP,EACAC,EACAtjC,EACAC,EACAphB,EACAC,EACAkhB,EAAIoT,EAAM,GACVnT,EAAImT,EAAM,IAIdmC,EAAQsuB,SACV,ybCjdA,MAAMC,UAA6B,UAIjCjtD,YAAYoJ,GACVjJ,MAAMiJ,GAKNhJ,KAAK8sD,wBAAyB,IAAAl3C,QAC5B,EAAAyzC,aACA,yBACArgD,EAAIuN,WAAWjS,KAAK0E,IAOtBhJ,KAAKwa,SAAWpR,SAASgC,cAAc,OACvC,MAAMG,EAAQvL,KAAKwa,SAASjP,MAC5BA,EAAMC,SAAW,WACjBD,EAAMG,MAAQ,OACdH,EAAMpH,OAAS,OACfoH,EAAMK,OAAS,IAEf5L,KAAKwa,SAASnP,UAAY,EAAA0rB,mBAAqB,aAE/C,MAAMg2B,EAAY/jD,EAAIyJ,cACtBs6C,EAAUptB,aAAa3/B,KAAKwa,SAAUuyC,EAAUC,YAAc,MAM9DhtD,KAAKitD,UAAY,GAMjBjtD,KAAKm3B,kBAAmB,CAC1B,CAMAniB,oBAAoB5U,EAAMgR,GACxB,MAAMpI,EAAMhJ,KAAK8T,SACjB,GAAI9K,EAAI+L,YAAY3U,GAAO,CACzB,MAAMsN,EAAQ,IAAI,UAAYtN,OAAM6D,EAAWmN,GAC/CpI,EAAI9G,cAAcwL,EACpB,CACF,CAEA5K,mBACE,IAAAwC,eAActF,KAAK8sD,wBACnB9sD,KAAKwa,SAASykB,WAAWnL,YAAY9zB,KAAKwa,UAC1Cza,MAAM+C,iBACR,CAMAsV,YAAYhH,GACV,IAAKA,EAKH,YAJIpR,KAAKm3B,mBACPn3B,KAAKwa,SAASjP,MAAMusB,QAAU,OAC9B93B,KAAKm3B,kBAAmB,IAK5Bn3B,KAAKktD,oBAAoB97C,GACzBpR,KAAKgV,oBAAoB,qBAA4B5D,GAErD,MAAMQ,EAAmBR,EAAWQ,iBAAiB0gB,MAAK,SAAUb,EAAGC,GACrE,OAAOD,EAAE7lB,OAAS8lB,EAAE9lB,MACtB,IACMyL,EAAYjG,EAAWiG,UAE7BrX,KAAKitD,UAAUhsD,OAAS,EAIxB,MAAMksD,EAAkB,GACxB,IAAIC,EAAkB,KACtB,IAAK,IAAIrsD,EAAI,EAAGC,EAAK4Q,EAAiB3Q,OAAQF,EAAIC,IAAMD,EAAG,CACzD,MAAMw2B,EAAa3lB,EAAiB7Q,GACpCqQ,EAAWqG,WAAa1W,EAExB,MAAM6H,EAAQ2uB,EAAW3uB,MACnBykD,EAAczkD,EAAMq0C,iBAC1B,KACG,IAAAzlB,QAAOD,EAAYlgB,IACJ,SAAfg2C,GAAyC,aAAfA,EAC3B,CACAzkD,EAAMo3C,WACN,QACF,CAEA,MAAMphD,EAAUgK,EAAMwM,OAAOhE,EAAYg8C,GACpCxuD,IAGDA,IAAYwuD,IACdptD,KAAKitD,UAAUxrD,KAAK7C,GACpBwuD,EAAkBxuD,GAEhB,iBAAkBgK,GACpBukD,EAAgB1rD,KAC0C,GAG9D,CACA,IAAK,IAAIV,EAAIosD,EAAgBlsD,OAAS,EAAGF,GAAK,IAAKA,EACjDosD,EAAgBpsD,GAAGusD,gBAAgBl8C,IAGrC,IAAAiuB,iBAAgBr/B,KAAKwa,SAAUxa,KAAKitD,WAEpCjtD,KAAKgV,oBAAoB,sBAA6B5D,GAEjDpR,KAAKm3B,mBACRn3B,KAAKwa,SAASjP,MAAMusB,QAAU,GAC9B93B,KAAKm3B,kBAAmB,GAG1Bn3B,KAAKutD,wBAAwBn8C,EAC/B,EAGF,yPC9IA,MAAMo8C,UAAsB,UAI1B5tD,YAAYgJ,GACV7I,QAMAC,KAAKiS,OAAQ,EAGbjS,KAAKytD,wBAA0BztD,KAAK0tD,mBAAmBppD,KAAKtE,MAM5DA,KAAK2tD,OAAS/kD,EAKd5I,KAAK4tD,uBAAyB,IAChC,CAQA/N,YAAY9wC,GACV,OAAO,IAAArJ,WACT,CAMAw4C,QAAQnvC,GACN,OAAO,IACT,CAQAgxC,aAAa3uC,GACX,OAAO,IAAA1L,WACT,CASA0S,YAAYhH,EAAY/R,GACtB,OAAO,IAAAqG,WACT,CAQAmoD,mBAAmBC,EAAOvuD,EAAMwT,GACzB+6C,EAAMvuD,KACTuuD,EAAMvuD,GAAQ,CAAC,GAEjBuuD,EAAMvuD,GAAMwT,EAAK3M,UAAU2H,YAAcgF,CAE3C,CAWAg7C,uBAAuB3uD,EAAQ0jB,EAAYgrC,GACzC,MAAO,CAMJvuD,EAAM4iB,KACL,MAAMnT,EAAWhP,KAAK6tD,mBAAmBvpD,KAAKtE,KAAM8tD,EAAOvuD,GAC3D,OAAOH,EAAO4uD,kBAAkBlrC,EAAYvjB,EAAM4iB,EAAWnT,EAEjE,CACF,CAWAO,2BACEN,EACAmC,EACAjC,EACAH,EACAi/C,GAGF,CAKAC,WACE,OAAOluD,KAAK2tD,MACd,CAMAj3C,qBAAsB,CAOtBg3C,mBAAmBhgD,GAC2CA,EAAY,OAC9D7H,aAAe,kBACvB7F,KAAKmuD,yBAET,CASAC,UAAU5pD,GACR,IAAI6pD,EAAa7pD,EAAMqB,WAQvB,OAPIwoD,GAAc,kBAAqBA,GAAc,iBACnD7pD,EAAMiJ,iBAAiB,iBAAkBzN,KAAKytD,yBAE5CY,GAAc,iBAChB7pD,EAAMJ,OACNiqD,EAAa7pD,EAAMqB,YAEdwoD,GAAc,gBACvB,CAKAF,0BACE,MAAMvlD,EAAQ5I,KAAKkuD,WACftlD,GAASA,EAAMk0C,cAA2C,UAA3Bl0C,EAAMq0C,kBACvCr0C,EAAM7E,SAEV,CAKAjB,yBACS9C,KAAK2tD,OACZ5tD,MAAM+C,iBACR,EAGF,kZC5KA,MAAMwrD,UAAoB,UAIxB1uD,YAAYoJ,GACVjJ,QAMAC,KAAKga,KAAOhR,CACd,CAOAgM,oBAAoB5U,EAAMgR,IACxB,IAAA1L,WACF,CAMAwnD,oBAAoB97C,GAClB,MAAMiG,EAAYjG,EAAWiG,UACvB7E,EAA6BpB,EAAWoB,2BACxClB,EAA6BF,EAAWE,4BAE9C,IAAAs6B,SACEp5B,EACApB,EAAW4F,KAAK,GAAK,EACrB5F,EAAW4F,KAAK,GAAK,EACrB,EAAIK,EAAUpU,YACb,EAAIoU,EAAUpU,YACdoU,EAAUG,UACVH,EAAUrY,OAAO,IACjBqY,EAAUrY,OAAO,KAGpB,IAAAuvD,aAAYj9C,EAA4BkB,EAC1C,CAiBAjD,2BACEN,EACAmC,EACAjC,EACAG,EACAN,EACA+wB,EACA3wB,EACAo/C,GAEA,IAAIC,EACJ,MAAMp3C,EAAYjG,EAAWiG,UAS7B,SAAS9H,EAA2BotC,EAASjtC,EAAS9G,EAAO8iB,GAC3D,OAAO1c,EAASgzB,KAAKjC,EAASrwB,EAASitC,EAAU/zC,EAAQ,KAAM8iB,EACjE,CAEA,MAAM5I,EAAazL,EAAUyL,WAEvB4rC,GAAuB,IAAAhyB,OAAMztB,EAAWpF,QAASiZ,GACjD6rC,EAAU,CAAC,CAAC,EAAG,IACrB,GAAI7rC,EAAW6Z,YAAcrtB,EAAc,CACzC,MAAM0tB,EAAmBla,EAAWrd,YAC9Bm3B,GAAa,IAAAxa,UAAS4a,GAC5B2xB,EAAQltD,KAAK,EAAEm7B,EAAY,GAAI,CAACA,EAAY,GAC9C,CAEA,MAAMpmB,EAAcpF,EAAWQ,iBACzBg9C,EAAYp4C,EAAYvV,OAExBgtD,EAA4C,GAC5CY,EAAW,GACjB,IAAK,IAAI9tD,EAAI,EAAGA,EAAI4tD,EAAQ1tD,OAAQF,IAClC,IAAK,IAAIwmB,EAAIqnC,EAAY,EAAGrnC,GAAK,IAAKA,EAAG,CACvC,MAAMgQ,EAAa/gB,EAAY+Q,GACzB3e,EAAQ2uB,EAAW3uB,MACzB,GACEA,EAAM6N,gBACN,IAAA+gB,QAAOD,EAAYlgB,IACnBjI,EAAY4yB,KAAKwsB,EAAU5lD,GAC3B,CACA,MAAMk3C,EAAgBl3C,EAAMoJ,cACtB5S,EAASwJ,EAAMsJ,YACrB,GAAI4tC,GAAiB1gD,EAAQ,CAC3B,MAAMolC,EAAcplC,EAAO0vD,WACvBJ,EACAz/C,EACED,EAAWO,EAA2BjL,KAC1C,KACAizB,EAAWolB,SAEbkS,EAAS,GAAKrqB,EAAY,GAAKmqB,EAAQ5tD,GAAG,GAC1C8tD,EAAS,GAAKrqB,EAAY,GAAKmqB,EAAQ5tD,GAAG,GAC1C0tD,EAAS3O,EAAcvwC,2BACrBs/C,EACAz9C,EACAjC,EACAH,EACAi/C,EAEJ,CACA,GAAIQ,EACF,OAAOA,CAEX,CACF,CAEF,GAAuB,IAAnBR,EAAQhtD,OACV,OAEF,MAAM8tD,EAAQ,EAAId,EAAQhtD,OAM1B,OALAgtD,EAAQvsD,SAAQ,CAAC8/C,EAAGzgD,IAAOygD,EAAEwN,YAAcjuD,EAAIguD,IAC/Cd,EAAQ37B,MAAK,CAACb,EAAGC,IAAMD,EAAEu9B,WAAat9B,EAAEs9B,aACxCf,EAAQ/N,MAAMsB,GACJiN,EAASjN,EAAExyC,SAASwyC,EAAE9xC,QAAS8xC,EAAE54C,MAAO44C,EAAE91B,YAE7C+iC,CACT,CAeA3+C,uBACEb,EACAmC,EACAjC,EACAG,EACAF,EACA2wB,GAaA,YAAsB97B,IAXHjE,KAAKuP,2BACtBN,EACAmC,EACAjC,EACAG,EACA,EAAAD,KACArP,KACAoP,EACA2wB,EAIJ,CAKAjsB,SACE,OAAO9T,KAAKga,IACd,CAOA5B,YAAYhH,IACV,IAAA1L,WACF,CAMA6nD,wBAAwBn8C,GAClB,2BACFA,EAAW6D,oBAAoBxT,KAAKwtD,EAExC,EAOF,SAASA,EAAgBjmD,EAAKoI,GAC5B,iBACF,CAEA,maC1NO,MAAM2sB,EAAa,GAK1B,IAAImxB,EAAe,KAanB,MAAMC,UAA4B,UAIhCvvD,YAAYgJ,GACV7I,MAAM6I,GAMN5I,KAAK+sD,UAAY,KAMjB/sD,KAAKovD,mBAQLpvD,KAAKqvD,eAAgB,IAAA1kD,UAQrB3K,KAAKsvD,gBAAiB,IAAA3kD,UAQtB3K,KAAKooD,uBAAwB,IAAAz9C,UAK7B3K,KAAKs+B,QAAU,KAKft+B,KAAKuvD,iBAAkB,EAMvBvvD,KAAKwvD,cAAgB,KAMrBxvD,KAAKoR,WAAa,IACpB,CAQAq+C,aAAajrD,EAAOkrD,EAAKC,GAMvB,IAAI99B,EALCq9B,IAnFPA,GAAe,IAAAxoD,uBAAsB,EAAG,OAAGzC,EAAW,CACpD2rD,oBAAoB,KAqFpBV,EAAa3wB,UAAU,EAAG,EAAG,EAAG,GAGhC,IACE2wB,EAAavC,UAAUnoD,EAAOkrD,EAAKC,EAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GACvD99B,EAAOq9B,EAAaO,aAAa,EAAG,EAAG,EAAG,GAAG59B,IAI/C,CAHE,MAAO0X,GAEP,OADA2lB,EAAe,KACR,IACT,CACA,OAAOr9B,CACT,CAMA2qB,cAAcprC,GAEZ,IAAIgrC,EADUp8C,KAAKkuD,WACI1R,gBAIvB,MAH0B,mBAAfJ,IACTA,EAAaA,EAAWhrC,EAAWiG,UAAUpU,aAExCm5C,QAAcn4C,CACvB,CAQA4rD,aAAaxwD,EAAQysB,EAAWgkC,GAC9B,MAAMC,EAAiB/vD,KAAKkuD,WAAWzR,eACvC,IAAIsQ,EAAWzuB,EACf,GACEj/B,GACAA,EAAOgM,YAAc0kD,KACnBD,GACCzwD,GACCA,EAAOkM,MAAMukD,kBACb,IAAAx3C,SACE,IAAAwc,SAAQz1B,EAAOkM,MAAMukD,kBACrB,IAAAh7B,SAAQg7B,KAEd,CACA,MAAMjpD,EAASxH,EAAO2wD,kBAClBnpD,aAAkBopD,oBACpB3xB,EAAUz3B,EAAOu3B,WAAW,MAEhC,CAYA,GAXIE,GAAWA,EAAQz3B,OAAO0E,MAAMugB,YAAcA,GAEhD9rB,KAAK+sD,UAAY1tD,EACjBW,KAAKs+B,QAAUA,EACft+B,KAAKuvD,iBAAkB,GACdvvD,KAAKuvD,kBAEdvvD,KAAK+sD,UAAY,KACjB/sD,KAAKs+B,QAAU,KACft+B,KAAKuvD,iBAAkB,IAEpBvvD,KAAK+sD,UAAW,CACnBA,EAAY3jD,SAASgC,cAAc,OACnC2hD,EAAU1hD,UAAY0kD,EACtB,IAAIxkD,EAAQwhD,EAAUxhD,MACtBA,EAAMC,SAAW,WACjBD,EAAMG,MAAQ,OACdH,EAAMpH,OAAS,OACfm6B,GAAU,IAAA53B,yBACV,MAAMG,EAASy3B,EAAQz3B,OACvBkmD,EAAUjhD,YAAYjF,GACtB0E,EAAQ1E,EAAO0E,MACfA,EAAMC,SAAW,WACjBD,EAAMqF,KAAO,IACbrF,EAAM2kD,gBAAkB,WACxBlwD,KAAK+sD,UAAYA,EACjB/sD,KAAKs+B,QAAUA,CACjB,CAEGt+B,KAAKuvD,kBACNO,GACC9vD,KAAK+sD,UAAUxhD,MAAMukD,kBAEtB9vD,KAAK+sD,UAAUxhD,MAAMukD,gBAAkBA,EAE3C,CAQAK,cAAc7xB,EAASltB,EAAYpO,GACjC,MAAMotD,GAAU,IAAA/pB,YAAWrjC,GACrBqtD,GAAW,IAAAjqB,aAAYpjC,GACvBstD,GAAc,IAAAnqB,gBAAenjC,GAC7ButD,GAAa,IAAArqB,eAAcljC,IAEjC,IAAAqO,OAAeD,EAAWoB,2BAA4B49C,IACtD,IAAA/+C,OAAeD,EAAWoB,2BAA4B69C,IACtD,IAAAh/C,OAAeD,EAAWoB,2BAA4B89C,IACtD,IAAAj/C,OAAeD,EAAWoB,2BAA4B+9C,GAEtD,MAAMC,EAAWxwD,KAAKooD,uBACtB,IAAA/2C,OAAem/C,EAAUJ,IACzB,IAAA/+C,OAAem/C,EAAUH,IACzB,IAAAh/C,OAAem/C,EAAUF,IACzB,IAAAj/C,OAAem/C,EAAUD,GAEzBjyB,EAAQguB,OACRhuB,EAAQmyB,YACRnyB,EAAQoyB,OAAOpoD,KAAKysB,MAAMq7B,EAAQ,IAAK9nD,KAAKysB,MAAMq7B,EAAQ,KAC1D9xB,EAAQqyB,OAAOroD,KAAKysB,MAAMs7B,EAAS,IAAK/nD,KAAKysB,MAAMs7B,EAAS,KAC5D/xB,EAAQqyB,OAAOroD,KAAKysB,MAAMu7B,EAAY,IAAKhoD,KAAKysB,MAAMu7B,EAAY,KAClEhyB,EAAQqyB,OAAOroD,KAAKysB,MAAMw7B,EAAW,IAAKjoD,KAAKysB,MAAMw7B,EAAW,KAChEjyB,EAAQsyB,MACV,CAQAC,qBAAqBzwD,EAAMk+B,EAASltB,GAClC,MAAMxI,EAAQ5I,KAAKkuD,WACnB,GAAItlD,EAAMmM,YAAY3U,GAAO,CAC3B,MAAMsN,EAAQ,IAAI,UAChBtN,EACAJ,KAAKooD,sBACLh3C,EACAktB,GAEF11B,EAAM1G,cAAcwL,EACtB,CACF,CAOAojD,UAAUxyB,EAASltB,GACjBpR,KAAKoR,WAAaA,EAClBpR,KAAK6wD,qBAAqB,oBAA2BvyB,EAASltB,EAChE,CAOA2/C,WAAWzyB,EAASltB,GAClBpR,KAAK6wD,qBAAqB,qBAA4BvyB,EAASltB,EACjE,CAcA4/C,mBACEhyD,EACAiE,EACAuU,EACAtU,EACAwI,EACAvH,EACAmhB,GAEA,MAAMwuB,EAAMpoC,EAAQ,EACdqoC,EAAM5vC,EAAS,EACf4mC,EAAK7nC,EAAaD,EAClB+nC,GAAMD,EACNiJ,GAAOh1C,EAAO,GAAKsmB,EACnB2uB,GAAOj1C,EAAO,GACpB,OAAO,IAAA4sC,SACL5rC,KAAKqvD,cACLvb,EACAC,EACAhJ,EACAC,GACCxzB,EACDw8B,EACAC,EAEJ,CAKAnxC,yBACS9C,KAAKoR,WACZrR,MAAM+C,iBACR,EAGF,kgBC/RA,MAAMmuD,UAAgC,UAIpCrxD,YAAYsxD,GACVnxD,MAAMmxD,GAMNlxD,KAAKmxD,eAAgB,EAMrBnxD,KAAKoxD,gBAAkB,KAMvBpxD,KAAKqxD,mBAMLrxD,KAAKsxD,mBAAqB,KAM1BtxD,KAAKuxD,iBAMLvxD,KAAKwxD,cAAgB,GAMrBxxD,KAAKyxD,WAAY,EAMjBzxD,KAAK0xD,WAAY,IAAAjtB,eAMjBzkC,KAAK2xD,cAAgB,IAAI,UAAU,EAAG,EAAG,EAAG,EAC9C,CAOAC,eAAe7+C,GACb,MAAMm+C,EAAYlxD,KAAKkuD,WACjB2D,EAAY9+C,EAAKlN,WACjBg4C,EAAyBqT,EAAUjT,4BACzC,OACE4T,GAAa,kBACbA,GAAa,iBACZA,GAAa,kBAAoBhU,CAEtC,CASAiU,QAAQrxC,EAAG7Y,EAAGC,EAAGuJ,GACf,MAAMlO,EAAakO,EAAWlO,WACxB4f,EAAa1R,EAAWiG,UAAUyL,WAClCouC,EAAYlxD,KAAKkuD,WAEvB,IAAIn7C,EADem+C,EAAUh/C,YACP4/C,QAAQrxC,EAAG7Y,EAAGC,EAAG3E,EAAY4f,GAUnD,OATI/P,EAAKlN,YAAc,iBACjBqrD,EAAUjT,6BAA+BiT,EAAUlT,aAAe,IAEpEh+C,KAAKyxD,WAAY,GAGhBzxD,KAAK4xD,eAAe7+C,KACvBA,EAAOA,EAAK2M,kBAEP3M,CACT,CAMAmrC,QAAQnvC,GACN,MAAMqC,EAAapR,KAAKoR,WACxB,IAAKA,EACH,OAAO,KAGT,MAAMxI,EAAQ5I,KAAKkuD,WACbj/C,GAAa,IAAAoC,OACjBD,EAAWE,2BACXvC,EAAMlF,SAGFkoD,EAAcnpD,EAAMnD,YAC1B,GAAIssD,KACG,IAAAjtB,oBAAmBitB,EAAa9iD,GACnC,OAAO,KAIX,MAAM/L,EAAakO,EAAWlO,WACxB4f,EAAa1R,EAAWiG,UAAUyL,WAClCzL,EAAYjG,EAAWiG,UACvBjY,EAASwJ,EAAM+2C,kBACfiH,EAAWxnD,EAAO4yD,yBAAyB36C,EAAUyL,YACrDmvC,EAAiB7yD,EAAO8yD,kBAAkB9gD,EAAWlO,YAE3D,IACE,IAAIud,EAAImmC,EAASuL,kBAAkB96C,EAAUpU,YAC7Cwd,GAAKmmC,EAAS78B,eACZtJ,EACF,CACA,MAAMra,EAAYwgD,EAASwL,yBAAyBnjD,EAAYwR,GAC1D1N,EAAO3T,EAAO0yD,QAClBrxC,EACAra,EAAU,GACVA,EAAU,GACVlD,EACA4f,GAEF,KACI/P,aAAgB,WAAaA,aAAgB,YAC9CA,aAAgB,WAAcA,EAAKlN,aAAe,gBAEnD,OAAO,KAGT,GAAIkN,EAAKlN,aAAe,iBACtB,SAGF,MAAMwsD,EAAazL,EAAS0L,UAAU7xC,GAChC8xC,GAAW,IAAAC,QAAO5L,EAAS6L,YAAYhyC,IACvCvN,EAAiB0zC,EAAShhD,cAAc6a,GAExCivC,EAAMpnD,KAAKijB,MACf0mC,IACIhjD,EAAW,GAAKojD,EAAW,IAAMn/C,EACjC9M,EAAU,GAAKmsD,EAAS,KAGxB5C,EAAMrnD,KAAKijB,MACf0mC,IACII,EAAW,GAAKpjD,EAAW,IAAMiE,EACjC9M,EAAU,GAAKmsD,EAAS,KAGxBG,EAASpqD,KAAKysB,MAClBk9B,EAAiB7yD,EAAOuzD,uBAAuBt7C,EAAUyL,aAG3D,OAAO9iB,KAAKyvD,aAAa18C,EAAKnP,WAAY8rD,EAAMgD,EAAQ/C,EAAM+C,EAChE,CAEA,OAAO,IACT,CAQA7E,mBAAmBC,EAAOvuD,EAAMwT,GAC9B,QAAI/S,KAAK4xD,eAAe7+C,IACfhT,MAAM8tD,mBAAmBC,EAAOvuD,EAAMwT,EAGjD,CAOAgtC,aAAa3uC,GACX,QAASpR,KAAKkuD,WAAWh8C,WAC3B,CAQAkG,YAAYhH,EAAY/R,GACtB,MAAMk4B,EAAanmB,EAAWQ,iBAAiBR,EAAWqG,YACpDJ,EAAYjG,EAAWiG,UACvByL,EAAazL,EAAUyL,WACvB8vC,EAAiBv7C,EAAUpU,WAC3B4vD,EAAax7C,EAAUrY,OACvBwY,EAAWH,EAAUG,SACrBtU,EAAakO,EAAWlO,WAExBguD,EAAYlxD,KAAKkuD,WACjB4E,EAAa5B,EAAUh/C,YACvB6gD,EAAiBD,EAAWp0C,cAC5BkoC,EAAWkM,EAAWd,yBAAyBlvC,GAC/CrC,EAAImmC,EAASuL,kBAAkBS,EAAgBE,EAAWE,YAC1D9/C,EAAiB0zC,EAAShhD,cAAc6a,GAE9C,IAAIzd,EAASoO,EAAWpO,OACxB,MAAMC,EAAamO,EAAWiG,UAAUpU,WAClCgvD,EAAiBa,EAAWZ,kBAAkBhvD,GAE9CwI,EAAQpD,KAAKysB,OAAO,IAAA3S,UAASpf,GAAUC,EAAcC,GACrDiB,EAASmE,KAAKysB,OAAO,IAAA7wB,WAAUlB,GAAUC,EAAcC,GAEvD6uD,EACJx6B,EAAWv0B,SAAU,IAAAwgB,gBAAe+T,EAAWv0B,OAAQ8f,GACrDivC,IACF/uD,GAAS,IAAAqkC,iBACPrkC,GACA,IAAAwgB,gBAAe+T,EAAWv0B,OAAQ8f,KAItC,MAAM1a,EAAM8K,EAAiBxH,EAAS,EAAIumD,EACpC5pD,EAAM6K,EAAiB/O,EAAU,EAAI8tD,EACrCgB,EAAe,CACnBJ,EAAW,GAAKzqD,EAChByqD,EAAW,GAAKxqD,EAChBwqD,EAAW,GAAKzqD,EAChByqD,EAAW,GAAKxqD,GAGZ8Z,EAAYykC,EAASsM,0BAA0BlwD,EAAQyd,GAKvD0yC,EAAiB,CAAC,EACxBA,EAAe1yC,GAAK,CAAC,EAErB,MAAM2yC,EAAkBpzD,KAAK+tD,uBAC3B+E,EACAhwC,EACAqwC,GAGIzB,EAAY1xD,KAAK0xD,UACjB2B,EAAerzD,KAAK2xD,cAC1B3xD,KAAKyxD,WAAY,EACjB,MAAM6B,EAAW97C,GACb,IAAAqvB,oBACExvB,EAAUrY,OACViE,EACAuU,EACApG,EAAW4F,WAEb/S,EACJ,IAAK,IAAI2D,EAAIua,EAAUN,KAAMja,GAAKua,EAAUL,OAAQla,EAClD,IAAK,IAAIC,EAAIsa,EAAUJ,KAAMla,GAAKsa,EAAUH,OAAQna,EAAG,CACrD,GACE2P,IACCovC,EAAS2M,4BAA4B,CAAC9yC,EAAG7Y,EAAGC,GAAIyrD,GAEjD,SAEF,MAAMvgD,EAAO/S,KAAK8xD,QAAQrxC,EAAG7Y,EAAGC,EAAGuJ,GACnC,GAAIpR,KAAK4xD,eAAe7+C,GAAO,CAC7B,MAAMygD,GAAM,IAAA37C,QAAO7X,MACnB,GAAI+S,EAAKlN,YAAc,iBAAkB,CACvCstD,EAAe1yC,GAAG1N,EAAK3M,UAAU2H,YAAcgF,EAC/C,IAAIkN,EAAelN,EAAKkN,aAAauzC,GACjCvzC,GAAuC,IAAvBsX,EAAW8kB,UAE7BtpC,EAAKmN,cAAcszC,GACnBvzC,GAAe,GAGdjgB,KAAKyxD,YACLxxC,GAAiBjgB,KAAKwxD,cAAc7vB,SAAS5uB,KAE9C/S,KAAKyxD,WAAY,EAErB,CACA,GAA4C,IAAxC1+C,EAAK8M,SAAS2zC,EAAKpiD,EAAWsD,MAEhC,QAEJ,CAEA,MAAM++C,EAAiB7M,EAAS8M,2BAC9B3gD,EAAK3M,UACLitD,EACA3B,GAGF,IAAIiC,GAAU,EACVF,IACFE,EAAUP,EAAgB3yC,EAAI,EAAGgzC,IAE9BE,GACH/M,EAASgN,gCACP7gD,EAAK3M,UACLgtD,EACAC,EACA3B,EAGN,CAGF,MAAMmC,EACF3gD,EAAiB0/C,EAAkB1vD,EAAc+uD,GAGrD,IAAArmB,SACE5rC,KAAKsvD,eACLl+C,EAAW4F,KAAK,GAAK,EACrB5F,EAAW4F,KAAK,GAAK,EACrB,EAAI9T,EACJ,EAAIA,EACJsU,GACC9L,EAAQ,GACRvH,EAAS,GAGZ,MAAM2vD,GAAkB,cAAkB9zD,KAAKsvD,gBAE/CtvD,KAAK6vD,aAAaxwD,EAAQy0D,EAAiB9zD,KAAKw8C,cAAcprC,IAC9D,MAAMktB,EAAUt+B,KAAKs+B,QACfz3B,EAASy3B,EAAQz3B,QAEvB,IAAA0nD,aAAYvuD,KAAKooD,sBAAuBpoD,KAAKsvD,iBAG7C,IAAA1jB,SACE5rC,KAAKqvD,cACL3jD,EAAQ,EACRvH,EAAS,EACT0vD,EACAA,EACA,GACCnoD,EAAQ,GACRvH,EAAS,GAGR0C,EAAO6E,OAASA,GAAS7E,EAAO1C,QAAUA,GAC5C0C,EAAO6E,MAAQA,EACf7E,EAAO1C,OAASA,GACNnE,KAAKuvD,iBACfjxB,EAAQC,UAAU,EAAG,EAAG7yB,EAAOvH,GAG7B4tD,GACF/xD,KAAKmwD,cAAc7xB,EAASltB,EAAY2gD,GAGrCe,EAAWiB,mBACdz1B,EAAQ01B,uBAAwB,GAGlCh0D,KAAK8wD,UAAUxyB,EAASltB,GAExBpR,KAAKwxD,cAAcvwD,OAAS,EAE5B,IAGIgzD,EAAOC,EAAQC,EAHfC,EAAK/4C,OAAOwC,KAAKs1C,GAAgBnqD,IAAI2rB,QACzCy/B,EAAG9hC,KAAK,EAAAjB,WAIiB,IAAvBkG,EAAW8kB,SACTr8C,KAAKuvD,kBACLuD,EAAWuB,UAAUjjD,EAAWiG,UAAUyL,aAI5CmxC,EAAQ,GACRC,EAAS,IAHTE,EAAKA,EAAGE,UAKV,IAAK,IAAIvzD,EAAIqzD,EAAGnzD,OAAS,EAAGF,GAAK,IAAKA,EAAG,CACvC,MAAMwzD,EAAWH,EAAGrzD,GACdyzD,EAAuB1B,EAAW2B,iBACtCF,EACArxD,EACA4f,GAGI4xC,EADoB9N,EAAShhD,cAAc2uD,GACRrhD,EACnC9K,EAAKosD,EAAqB,GAAKE,EAAeb,EAC9CxrD,EAAKmsD,EAAqB,GAAKE,EAAeb,EAC9Cc,EAAkB/N,EAASwL,0BAC/B,IAAA/rB,YAAW4sB,GACXsB,GAEIK,EAAmBhO,EAASiO,mBAAmBF,GAC/CG,GAAS,IAAAzjD,OAAerR,KAAKqvD,cAAe,CAC/C4C,GAAkB2C,EAAiB,GAAK3B,EAAa,IACpD//C,EACD++C,GAAkBgB,EAAa,GAAK2B,EAAiB,IACpD1hD,IAEE6hD,EACJ9C,EAAiBa,EAAWH,uBAAuB7vC,GAC/CkyC,EAAc7B,EAAeoB,GACnC,IAAK,MAAMU,KAAgBD,EAAa,CACtC,MAAMjiD,EACJiiD,EAAYC,GAER7uD,EAAY2M,EAAK3M,UAGjB8uD,EAASP,EAAgB,GAAKvuD,EAAU,GACxC+uD,EAAQ7sD,KAAKysB,MAAM+/B,EAAO,IAAMI,EAAS,GAAK9sD,GAC9CgtD,EAAST,EAAgB,GAAKvuD,EAAU,GACxCivD,EAAQ/sD,KAAKysB,MAAM+/B,EAAO,IAAMM,EAAS,GAAK/sD,GAC9CT,EAAIU,KAAKysB,MAAM+/B,EAAO,GAAKI,EAAS9sD,GACpCP,EAAIS,KAAKysB,MAAM+/B,EAAO,GAAKM,EAAS/sD,GACpC0gB,EAAIosC,EAAQvtD,EACZohB,EAAIqsC,EAAQxtD,EACZuX,EAAaqB,IAAM8zC,EAEnBt0C,EACJb,GAA+D,IAAjDrM,EAAK8M,UAAS,IAAAhI,QAAO7X,MAAOoR,EAAWsD,MACvD,IAAI4gD,GAAe,EACnB,IAAKr1C,EACH,GAAIg0C,EAAO,CAETE,EAAc,CAACvsD,EAAGC,EAAGD,EAAImhB,EAAGlhB,EAAGD,EAAImhB,EAAGlhB,EAAImhB,EAAGphB,EAAGC,EAAImhB,GACpD,IAAK,IAAIjoB,EAAI,EAAGC,EAAKizD,EAAMhzD,OAAQF,EAAIC,IAAMD,EAC3C,GAAI0f,IAAM8zC,GAAYA,EAAWL,EAAOnzD,GAAI,CAC1C,MAAM6vD,EAAOqD,EAAMlzD,IAEjB,IAAAshB,YACE,CAACza,EAAGC,EAAGD,EAAImhB,EAAGlhB,EAAImhB,GAClB,CAAC4nC,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,OAG9B0E,IACHh3B,EAAQguB,OACRgJ,GAAe,GAEjBh3B,EAAQmyB,YAERnyB,EAAQoyB,OAAOyD,EAAY,GAAIA,EAAY,IAC3C71B,EAAQqyB,OAAOwD,EAAY,GAAIA,EAAY,IAC3C71B,EAAQqyB,OAAOwD,EAAY,GAAIA,EAAY,IAC3C71B,EAAQqyB,OAAOwD,EAAY,GAAIA,EAAY,IAE3C71B,EAAQoyB,OAAOE,EAAK,GAAIA,EAAK,IAC7BtyB,EAAQqyB,OAAOC,EAAK,GAAIA,EAAK,IAC7BtyB,EAAQqyB,OAAOC,EAAK,GAAIA,EAAK,IAC7BtyB,EAAQqyB,OAAOC,EAAK,GAAIA,EAAK,IAC7BtyB,EAAQsyB,OAEZ,CAEFqD,EAAMxyD,KAAK0yD,GACXD,EAAOzyD,KAAK8yD,EACd,MACEj2B,EAAQC,UAAU32B,EAAGC,EAAGkhB,EAAGC,GAG/BhpB,KAAKu1D,cACHxiD,EACA3B,EACAxJ,EACAC,EACAkhB,EACAC,EACA+rC,EACA31C,GAEE60C,IAAUh0C,GACRq1C,GACFh3B,EAAQsuB,UAEV5sD,KAAKwxD,cAAcgE,QAAQziD,IAE3B/S,KAAKwxD,cAAc/vD,KAAKsR,GAE1B/S,KAAKy1D,gBAAgBrkD,EAAWsG,UAAWo7C,EAAY//C,EACzD,CACF,CAiCA,OA/BA/S,KAAKuxD,iBAAmBwB,EACxB/yD,KAAKovD,mBAAqBl8C,EAC1BlT,KAAKmxD,eACFnxD,KAAKoxD,mBAAoB,IAAA94C,QAAOtY,KAAKoxD,gBAAiB6B,GACzDjzD,KAAKoxD,gBAAkB6B,EACvBjzD,KAAKqxD,mBAAqBnuD,EAC1BlD,KAAKsxD,mBAAqBxuC,EAE1B9iB,KAAK01D,kBACHtkD,EACA0hD,EACAlM,EACA1jD,EACA4f,EACA9f,EACAyd,EACAywC,EAAUlT,cAEZh+C,KAAK21D,oBAAoBvkD,EAAY0hD,GAErC9yD,KAAK+wD,WAAWzyB,EAASltB,GAErBmmB,EAAWv0B,QACbs7B,EAAQsuB,UAEVtuB,EAAQ01B,uBAAwB,EAE5BF,IAAoBjtD,EAAO0E,MAAMugB,YACnCjlB,EAAO0E,MAAMugB,UAAYgoC,GAGpB9zD,KAAK+sD,SACd,CAYAwI,cAAcxiD,EAAM3B,EAAYxJ,EAAGC,EAAGkhB,EAAGC,EAAG0pC,EAAQtzC,GAClD,MAAM5a,EAAQxE,KAAK41D,aAAa7iD,GAChC,IAAKvO,EACH,OAEF,MAAMgvD,GAAM,IAAA37C,QAAO7X,MACbu3B,EAAanmB,EAAWQ,iBAAiBR,EAAWqG,YACpDo+C,EACJt+B,EAAW8kB,SACVj9B,EAAarM,EAAK8M,SAAS2zC,EAAKpiD,EAAWsD,MAAQ,GAChDohD,EAAeD,IAAU71D,KAAKs+B,QAAQiuB,YACxCuJ,IACF91D,KAAKs+B,QAAQguB,OACbtsD,KAAKs+B,QAAQiuB,YAAcsJ,GAE7B71D,KAAKs+B,QAAQquB,UACXnoD,EACAkuD,EACAA,EACAluD,EAAMkH,MAAQ,EAAIgnD,EAClBluD,EAAML,OAAS,EAAIuuD,EACnB9qD,EACAC,EACAkhB,EACAC,GAGE8sC,GACF91D,KAAKs+B,QAAQsuB,UAEXiJ,IAAUt+B,EAAW8kB,QACvBjrC,EAAW0D,SAAU,EACZsK,GACTrM,EAAKmN,cAAcszC,EAEvB,CAKA5vD,WACE,MAAM06B,EAAUt+B,KAAKs+B,QACrB,OAAOA,EAAUA,EAAQz3B,OAAS,IACpC,CAQA+uD,aAAa7iD,GACX,OAAOA,EAAKnP,UACd,CAOA+xD,oBAAoBvkD,EAAY0hD,GAC9B,GAAIA,EAAWzyC,iBAAkB,CAM/B,MAAM01C,EAAqB,SAAUjD,EAAY9pD,EAAKoI,GACpD,MAAM4B,GAAgB,IAAA6E,QAAOi7C,GACzB9/C,KAAiB5B,EAAWsG,WAC9Bo7C,EAAW1yC,YACThP,EAAWiG,UAAUyL,WACrB1R,EAAWsG,UAAU1E,GAG3B,EAAE1O,KAAK,KAAMwuD,GAEb1hD,EAAW6D,oBAAoBxT,KAC4B,EAI7D,CACF,CAQAg0D,gBAAgB/9C,EAAWo7C,EAAY//C,GAErC,MAAMC,GAAgB,IAAA6E,QAAOi7C,GACvB9/C,KAAiB0E,IACrBA,EAAU1E,GAAiB,CAAC,GAE9B0E,EAAU1E,GAAeD,EAAK0M,WAAY,CAC5C,CAoBAi2C,kBACEtkD,EACA0hD,EACAlM,EACA1jD,EACA4f,EACA9f,EACAuxD,EACA3W,EACAoY,GAEA,MAAMhjD,GAAgB,IAAA6E,QAAOi7C,GACvB9/C,KAAiB5B,EAAWuG,cAChCvG,EAAWuG,YAAY3E,GAAiB,CAAC,GAE3C,MAAM2E,EAAcvG,EAAWuG,YAAY3E,GACrCmB,EAAY/C,EAAW+C,UACvB3U,EAAUonD,EAAS78B,aACnBvS,EAAWpG,EAAWiG,UAAUG,SAChC87C,EAAW97C,GACb,IAAAqvB,oBACEz1B,EAAWiG,UAAUrY,OACrBoS,EAAWiG,UAAUpU,WACrBuU,EACApG,EAAW4F,WAEb/S,EACJ,IACI8O,EAAMoP,EAAWjP,EAAgBtL,EAAGC,EAAG4Y,EADvCw1C,EAAY,EAEhB,IAAKx1C,EAAIjhB,EAASihB,GAAK8zC,IAAY9zC,EAGjC,IAFA0B,EAAYykC,EAASsM,0BAA0BlwD,EAAQyd,EAAG0B,GAC1DjP,EAAiB0zC,EAAShhD,cAAc6a,GACnC7Y,EAAIua,EAAUN,KAAMja,GAAKua,EAAUL,OAAQla,EAC9C,IAAKC,EAAIsa,EAAUJ,KAAMla,GAAKsa,EAAUH,OAAQna,EAE5C2P,IACCovC,EAAS2M,4BAA4B,CAAC9yC,EAAG7Y,EAAGC,GAAIyrD,KAI/CiB,EAAW9zC,GAAKm9B,KAChBqY,EACFljD,EAAO+/C,EAAWhB,QAAQrxC,EAAG7Y,EAAGC,EAAG3E,EAAY4f,GAC3C/P,EAAKlN,YAAc,iBACrB8R,EAAY5E,EAAK0M,WAAY,EACxBtL,EAAU+hD,YAAYnjD,EAAK0M,WAC9BtL,EAAUgN,QAAQ,CAChBpO,EACAC,EACA4zC,EAASuP,mBAAmBpjD,EAAK3M,WACjC8M,UAIejP,IAAjB+xD,GACFA,EAAajjD,IAGf+/C,EAAWsD,QAAQ31C,EAAG7Y,EAAGC,EAAGib,IAKpCgwC,EAAWuD,gBAAgBJ,EAAWnzC,EACxC,EAGF,gTChvBA,IAAIwzC,EAKG,MAAMv4B,EAAa,GAY1B,SAASw4B,EAAiB9vD,EAAK+vD,EAAIC,EAAIC,EAAIC,GACzClwD,EAAIgqD,YACJhqD,EAAIiqD,OAAO,EAAG,GACdjqD,EAAIkqD,OAAO6F,EAAIC,GACfhwD,EAAIkqD,OAAO+F,EAAIC,GACflwD,EAAImwD,YACJnwD,EAAI6lD,OACJ7lD,EAAImqD,OACJnqD,EAAIG,SAAS,EAAG,EAAG0B,KAAKmiB,IAAI+rC,EAAIE,GAAM,EAAGpuD,KAAKmiB,IAAIgsC,EAAIE,IACtDlwD,EAAImmD,SACN,CAUA,SAASiK,EAA8BhlC,EAAM3G,GAE3C,OACE5iB,KAAK0T,IAAI6V,EAAc,EAAT3G,GAAc,KAAO,GACnC5iB,KAAK0T,IAAI6V,EAAc,EAAT3G,EAAa,GAAK,QAAc,CAElD,CA2CO,SAAS4rC,EACdzrB,EACA0rB,EACArwC,EACAE,GAEA,MAAMH,GAAe,IAAAqF,WAAUpF,EAAcqwC,EAAY1rB,GAGzD,IAAI1kB,GAAmB,IAAA87B,oBACrBsU,EACAnwC,EACAF,GAGF,MAAMswC,EAAsBD,EAAW9mC,wBACXhsB,IAAxB+yD,IACFrwC,GAAoBqwC,GAEtB,MAAMC,EAAsB5rB,EAAWpb,wBACXhsB,IAAxBgzD,IACFtwC,GAAoBswC,GAOtB,MAAMxR,EAAepa,EAAW5lC,YAChC,IAAKggD,IAAgB,IAAA3gB,oBAAmB2gB,EAAch/B,GAAe,CACnE,MAAMywC,GACJ,IAAAzU,oBAAmBpX,EAAY1kB,EAAkBF,GACjDE,EACE8hB,SAASyuB,IAAuBA,EAAqB,IACvDvwC,GAAoBuwC,EAExB,CAEA,OAAOvwC,CACT,CAcO,SAASwwC,EACd9rB,EACA0rB,EACAK,EACAxwC,GAEA,MAAMF,GAAe,IAAAtB,WAAUgyC,GAC/B,IAAIzwC,EAAmBmwC,EACrBzrB,EACA0rB,EACArwC,EACAE,GAeF,QAZK6hB,SAAS9hB,IAAqBA,GAAoB,KACrD,IAAAqf,eAAcoxB,GAAc,SAAU3wB,GAOpC,OANA9f,EAAmBmwC,EACjBzrB,EACA0rB,EACAtwB,EACA7f,GAEK6hB,SAAS9hB,IAAqBA,EAAmB,CAC1D,IAGKA,CACT,CAyBO,SAASvR,EACd1J,EACAvH,EACAjB,EACAyjB,EACA8+B,EACA7+B,EACAwwC,EACAC,EACAC,EACA5E,EACA6E,EACAj4C,GAEA,MAAMgf,GAAU,IAAA53B,uBACd4B,KAAKysB,MAAM7xB,EAAawI,GACxBpD,KAAKysB,MAAM7xB,EAAaiB,GACxB45B,GAOF,GAJKze,IACHgf,EAAQ01B,uBAAwB,GAGX,IAAnBsD,EAAQr2D,OACV,OAAOq9B,EAAQz3B,OAKjB,SAAS2wD,EAAW77C,GAClB,OAAOrT,KAAKysB,MAAMpZ,EAAQzY,GAAcA,CAC1C,CAJAo7B,EAAQnC,MAAMj5B,EAAYA,GAM1Bo7B,EAAQm5B,yBAA2B,UAEnC,MAAMC,GAAmB,IAAAjzB,eACzB6yB,EAAQ51D,SAAQ,SAAUyB,EAAKpC,EAAGS,IAChC,IAAAD,QAAOm2D,EAAkBv0D,EAAIH,OAC/B,IAEA,MAAM20D,GAAqB,IAAAv1C,UAASs1C,GAC9BE,GAAsB,IAAA1zD,WAAUwzD,GAChCG,GAAgB,IAAAnxD,uBACpB4B,KAAKysB,MAAO7xB,EAAay0D,EAAsBhxC,GAC/Cre,KAAKysB,MAAO7xB,EAAa00D,EAAuBjxC,GAChDoX,GAGGze,IACHu4C,EAAc7D,uBAAwB,GAGxC,MAAM8D,EAAc50D,EAAayjB,EAEjC2wC,EAAQ51D,SAAQ,SAAUyB,EAAKpC,EAAGS,GAChC,MAAMu2D,EAAO50D,EAAIH,OAAO,GAAK00D,EAAiB,GACxCM,IAAS70D,EAAIH,OAAO,GAAK00D,EAAiB,IAC1CO,GAAW,IAAA71C,UAASjf,EAAIH,QACxBk1D,GAAY,IAAAh0D,WAAUf,EAAIH,QAG5BG,EAAIqB,MAAMkH,MAAQ,GAAKvI,EAAIqB,MAAML,OAAS,GAC5C0zD,EAAclL,UACZxpD,EAAIqB,MACJkuD,EACAA,EACAvvD,EAAIqB,MAAMkH,MAAQ,EAAIgnD,EACtBvvD,EAAIqB,MAAML,OAAS,EAAIuuD,EACvBqF,EAAOD,EACPE,EAAOF,EACPG,EAAWH,EACXI,EAAYJ,EAGlB,IAEA,MAAMK,GAAgB,IAAA9xB,YAAW+wB,GA0JjC,OAxJAC,EAAce,eAAe12D,SAAQ,SAAU22D,EAAUt3D,EAAGS,GAqB1D,MAAMpC,EAASi5D,EAASj5D,OAClBC,EAASg5D,EAASh5D,OACxB,IAAI0oB,EAAK3oB,EAAO,GAAG,GACjB4oB,EAAK5oB,EAAO,GAAG,GACb6oB,EAAK7oB,EAAO,GAAG,GACjB8oB,EAAK9oB,EAAO,GAAG,GACbw7B,EAAKx7B,EAAO,GAAG,GACjBy7B,EAAKz7B,EAAO,GAAG,GAEjB,MAAMk5D,EAAKd,GAAYn4D,EAAO,GAAG,GAAK84D,EAAc,IAAMvxC,GACpD2xC,EAAKf,IACPn4D,EAAO,GAAG,GAAK84D,EAAc,IAAMvxC,GAEjC4vC,EAAKgB,GAAYn4D,EAAO,GAAG,GAAK84D,EAAc,IAAMvxC,GACpD6vC,EAAKe,IACPn4D,EAAO,GAAG,GAAK84D,EAAc,IAAMvxC,GAEjC8vC,EAAKc,GAAYn4D,EAAO,GAAG,GAAK84D,EAAc,IAAMvxC,GACpD+vC,EAAKa,IACPn4D,EAAO,GAAG,GAAK84D,EAAc,IAAMvxC,GAMjC4xC,EAAwBzwC,EACxB0wC,EAAwBzwC,EAC9BD,EAAK,EACLC,EAAK,EACLC,GAAMuwC,EACNtwC,GAAMuwC,EACN79B,GAAM49B,EACN39B,GAAM49B,EAEN,MAAMC,EAAkB,CACtB,CAACzwC,EAAIC,EAAI,EAAG,EAAGsuC,EAAK8B,GACpB,CAAC19B,EAAIC,EAAI,EAAG,EAAG67B,EAAK4B,GACpB,CAAC,EAAG,EAAGrwC,EAAIC,EAAIuuC,EAAK8B,GACpB,CAAC,EAAG,EAAG39B,EAAIC,EAAI87B,EAAK4B,IAEhBI,GAAc,IAAAzX,mBAAkBwX,GACtC,GAAKC,EAAL,CAOA,GAHAr6B,EAAQguB,OACRhuB,EAAQmyB,YA1RZ,WACE,QAAiCxsD,IAA7BqyD,EAAwC,CAC1C,MAAM7vD,GAAM,IAAAC,uBAAsB,EAAG,EAAGq3B,GACxCt3B,EAAIgxD,yBAA2B,UAC/BhxD,EAAIE,UAAY,wBAChB4vD,EAAiB9vD,EAAK,EAAG,EAAG,EAAG,GAC/B8vD,EAAiB9vD,EAAK,EAAG,EAAG,EAAG,GAC/B,MAAMorB,EAAOprB,EAAIgpD,aAAa,EAAG,EAAG,EAAG,GAAG59B,KAC1CykC,EACEO,EAA8BhlC,EAAM,IACpCglC,EAA8BhlC,EAAM,IACpCglC,EAA8BhlC,EAAM,IACtC,IAAAwM,eAAc53B,GACds3B,EAAWt8B,KAAKgF,EAAII,OACtB,CAEA,OAAOyvD,CACT,CA2QQsC,KAAgCt5C,EAAa,CAE/Cgf,EAAQoyB,OAAO8F,EAAIC,GAEnB,MAAMoC,EAAQ,EACRC,EAAKR,EAAK9B,EACVuC,EAAKR,EAAK9B,EAChB,IAAK,IAAIuC,EAAO,EAAGA,EAAOH,EAAOG,IAE/B16B,EAAQqyB,OACN6F,EAAKgB,GAAawB,EAAO,GAAKF,EAAMD,GACpCpC,EAAKe,EAAYwB,EAAOD,GAAOF,EAAQ,KAGrCG,GAAQH,EAAQ,GAClBv6B,EAAQqyB,OACN6F,EAAKgB,GAAawB,EAAO,GAAKF,EAAMD,GACpCpC,EAAKe,GAAawB,EAAO,GAAKD,GAAOF,EAAQ,KAKnDv6B,EAAQqyB,OAAO+F,EAAIC,EACrB,MACEr4B,EAAQoyB,OAAO8F,EAAIC,GACnBn4B,EAAQqyB,OAAO2H,EAAIC,GACnBj6B,EAAQqyB,OAAO+F,EAAIC,GAGrBr4B,EAAQsyB,OAERtyB,EAAQxS,UACN6sC,EAAY,GACZA,EAAY,GACZA,EAAY,GACZA,EAAY,GACZL,EACAC,GAGFj6B,EAAQ6M,UACNusB,EAAiB,GAAKc,EACtBd,EAAiB,GAAKe,GAGxBn6B,EAAQnC,MACNxV,EAAmBzjB,GAClByjB,EAAmBzjB,GAGtBo7B,EAAQquB,UAAUkL,EAAchxD,OAAQ,EAAG,GAC3Cy3B,EAAQsuB,SAxDR,CAyDF,KAEA,IAAAvuB,eAAcw5B,GACd95B,EAAWt8B,KAAKo2D,EAAchxD,QAE1B0wD,IACFj5B,EAAQguB,OAERhuB,EAAQm5B,yBAA2B,cACnCn5B,EAAQ26B,YAAc,QACtB36B,EAAQwtB,UAAY,EAEpBuL,EAAce,eAAe12D,SAAQ,SAAU22D,EAAUt3D,EAAGS,GAC1D,MAAMnC,EAASg5D,EAASh5D,OAClBi5D,GAAMj5D,EAAO,GAAG,GAAK84D,EAAc,IAAMvxC,EACzC2xC,IAAOl5D,EAAO,GAAG,GAAK84D,EAAc,IAAMvxC,EAC1C4vC,GAAMn3D,EAAO,GAAG,GAAK84D,EAAc,IAAMvxC,EACzC6vC,IAAOp3D,EAAO,GAAG,GAAK84D,EAAc,IAAMvxC,EAC1C8vC,GAAMr3D,EAAO,GAAG,GAAK84D,EAAc,IAAMvxC,EACzC+vC,IAAOt3D,EAAO,GAAG,GAAK84D,EAAc,IAAMvxC,EAEhD0X,EAAQmyB,YACRnyB,EAAQoyB,OAAO8F,EAAIC,GACnBn4B,EAAQqyB,OAAO2H,EAAIC,GACnBj6B,EAAQqyB,OAAO+F,EAAIC,GACnBr4B,EAAQs4B,YACRt4B,EAAQ46B,QACV,IAEA56B,EAAQsuB,WAEHtuB,EAAQz3B,MACjB,2cC3ZA,MAAMsyD,UAAmB,UAgBvBv5D,YACEyrC,EACA+tB,EACArC,EACAsC,EACAjzD,EACAkzD,EACAp2D,EACAwvD,EACA6G,EACAC,EACAjC,EACAj4C,GAEAvf,MAAMqG,EAAW,eAAgB,CAACkZ,cAAeA,IAMjDtf,KAAKy5D,kBAA+Bx1D,IAAhBszD,GAA4BA,EAMhDv3D,KAAKwF,YAActC,EAMnBlD,KAAK05D,QAAUhH,EAMf1yD,KAAK25D,QAAU,KAMf35D,KAAK45D,gBAAkBR,EAMvBp5D,KAAK65D,gBAAkBR,EAMvBr5D,KAAK85D,kBAAoBR,GAAsClzD,EAM/DpG,KAAK+5D,aAAe,GAMpB/5D,KAAKg6D,qBAAuB,KAM5Bh6D,KAAKi6D,SAAW,EAEhB,MAAM7C,EAAeiC,EAAexE,mBAClC70D,KAAK85D,mBAEDI,EAAkBl6D,KAAK65D,gBAAgBp0D,YAC7C,IAAI00D,EAAkBn6D,KAAK45D,gBAAgBn0D,YAE3C,MAAM20D,EAAsBF,GACxB,IAAA7yB,iBAAgB+vB,EAAc8C,GAC9B9C,EAEJ,GAAqC,KAAjC,IAAA9wB,SAAQ8zB,GAIV,YADAp6D,KAAK0D,MAAQ,iBAIf,MAAM22D,EAAmBhvB,EAAW5lC,YAChC40D,IAIAF,EAHGA,GAGe,IAAA9yB,iBAAgB8yB,EAAiBE,GAFjCA,GAMtB,MAAMzzC,EAAmByyC,EAAezzD,cACtC5F,KAAK85D,kBAAkB,IAGnBnzC,GAAmB,IAAAwwC,iCACvB9rB,EACA0rB,EACAqD,EACAxzC,GAGF,IAAK6hB,SAAS9hB,IAAqBA,GAAoB,EAIrD,YADA3mB,KAAK0D,MAAQ,iBAIf,MAAM42D,OACer2D,IAAnBu1D,EAA+BA,EAAiB,EAAAe,gBAelD,GATAv6D,KAAKw6D,eAAiB,IAAI,UACxBnvB,EACA0rB,EACAqD,EACAD,EACAxzC,EAAmB2zC,EACnB1zC,GAGgD,IAA9C5mB,KAAKw6D,eAAepC,eAAen3D,OAGrC,YADAjB,KAAK0D,MAAQ,iBAIf1D,KAAKi6D,SAAWb,EAAejH,kBAAkBxrC,GACjD,IAAI8+B,EAAezlD,KAAKw6D,eAAeC,wBAmBvC,GAjBIN,IACE9uB,EAAW1O,YACb8oB,EAAa,IAAK,IAAAn6B,OAChBm6B,EAAa,GACb0U,EAAgB,GAChBA,EAAgB,IAElB1U,EAAa,IAAK,IAAAn6B,OAChBm6B,EAAa,GACb0U,EAAgB,GAChBA,EAAgB,KAGlB1U,GAAe,IAAApe,iBAAgBoe,EAAc0U,KAI5C,IAAA7zB,SAAQmf,GAEN,CACL,MAAMiV,EAActB,EAAelG,0BACjCzN,EACAzlD,KAAKi6D,UAGP,IAAK,IAAIU,EAAOD,EAAY74C,KAAM84C,GAAQD,EAAY54C,KAAM64C,IAC1D,IAAK,IAAIC,EAAOF,EAAY34C,KAAM64C,GAAQF,EAAY14C,KAAM44C,IAAQ,CAClE,MAAM7nD,EAAOwmD,EAAgBv5D,KAAKi6D,SAAUU,EAAMC,EAAM13D,GACpD6P,GACF/S,KAAK+5D,aAAat4D,KAAKsR,EAE3B,CAG+B,IAA7B/S,KAAK+5D,aAAa94D,SACpBjB,KAAK0D,MAAQ,gBAEjB,MAnBE1D,KAAK0D,MAAQ,eAoBjB,CAMAE,WACE,OAAO5D,KAAK25D,OACd,CAKAkB,aACE,MAAMvD,EAAU,GAWhB,GAVAt3D,KAAK+5D,aAAar4D,SAASqR,IACrBA,GAAQA,EAAKlN,YAAc,kBAC7ByxD,EAAQ71D,KAAK,CACXuB,OAAQhD,KAAK45D,gBAAgB/E,mBAAmB9hD,EAAK3M,WACrD5B,MAAOuO,EAAKnP,YAEhB,IAEF5D,KAAK+5D,aAAa94D,OAAS,EAEJ,IAAnBq2D,EAAQr2D,OACVjB,KAAK0D,MAAQ,oBACR,CACL,MAAM+c,EAAIzgB,KAAK85D,kBAAkB,GAC3B9iD,EAAOhX,KAAK65D,gBAAgBpH,YAAYhyC,GACxC/U,EAAwB,iBAATsL,EAAoBA,EAAOA,EAAK,GAC/C7S,EAAyB,iBAAT6S,EAAoBA,EAAOA,EAAK,GAChD4P,EAAmB5mB,KAAK65D,gBAAgBj0D,cAAc6a,GACtDkG,EAAmB3mB,KAAK45D,gBAAgBh0D,cAC5C5F,KAAKi6D,UAGD7C,EAAep3D,KAAK65D,gBAAgBhF,mBACxC70D,KAAK85D,mBAGP95D,KAAK25D,SAAU,IAAAvkD,QACb1J,EACAvH,EACAnE,KAAKwF,YACLmhB,EACA3mB,KAAK45D,gBAAgBn0D,YACrBmhB,EACAwwC,EACAp3D,KAAKw6D,eACLlD,EACAt3D,KAAK05D,QACL15D,KAAKy5D,aACLz5D,KAAKsf,aAGPtf,KAAK0D,MAAQ,gBACf,CACA1D,KAAK+D,SACP,CAKAK,OACE,GAAIpE,KAAK0D,OAAS,eAAgB,CAChC1D,KAAK0D,MAAQ,kBACb1D,KAAK+D,UAEL,IAAI+2D,EAAa,EAEjB96D,KAAKg6D,qBAAuB,GAC5Bh6D,KAAK+5D,aAAar4D,SAASqR,IACzB,MAAMrP,EAAQqP,EAAKlN,WACnB,GAAInC,GAAS,gBAAkBA,GAAS,kBAAmB,CACzDo3D,IAEA,MAAMC,GAAkB,IAAAnlD,QACtB7C,EACA,kBACA,SAAUioD,GACR,MAAMt3D,EAAQqP,EAAKlN,WAEjBnC,GAAS,kBACTA,GAAS,iBACTA,GAAS,mBAET,IAAA4B,eAAcy1D,GACdD,IACmB,IAAfA,IACF96D,KAAKi7D,mBACLj7D,KAAK66D,cAGX,GACA76D,MAEFA,KAAKg6D,qBAAqBv4D,KAAKs5D,EACjC,KAGiB,IAAfD,EACFpiD,WAAW1Y,KAAK66D,WAAWv2D,KAAKtE,MAAO,GAEvCA,KAAK+5D,aAAar4D,SAAQ,SAAUqR,EAAMhS,EAAGS,GAC7BuR,EAAKlN,YACN,gBACXkN,EAAK3O,MAET,GAEJ,CACF,CAKA62D,mBACEj7D,KAAKg6D,qBAAqBt4D,QAAQ,EAAA4D,eAClCtF,KAAKg6D,qBAAuB,IAC9B,CAKAz6C,UACMvf,KAAK25D,WACP,IAAAt7B,eAAcr+B,KAAK25D,QAAQv7B,WAAW,OACtC,EAAAL,WAAA,KAAgB/9B,KAAK25D,SACrB35D,KAAK25D,QAAU,MAEjB55D,MAAMwf,SACR,EAGF,wMC0IA,QApcA,MASE3f,YACEyrC,EACA0rB,EACAK,EACA+C,EACAX,EACA0B,GAMAl7D,KAAKm7D,YAAc9vB,EAMnBrrC,KAAKo7D,YAAcrE,EAGnB,IAAIsE,EAAoB,CAAC,EACzB,MAAMC,GAAe,IAAAxvB,cAAa9rC,KAAKo7D,YAAap7D,KAAKm7D,aAOzDn7D,KAAKu7D,cAAgB,SAAUC,GAC7B,MAAMj1D,EAAMi1D,EAAE,GAAK,IAAMA,EAAE,GAI3B,OAHKH,EAAkB90D,KACrB80D,EAAkB90D,GAAO+0D,EAAaE,IAEjCH,EAAkB90D,EAC3B,EAMAvG,KAAKy7D,iBAAmBtB,EAMxBn6D,KAAK07D,uBAAyBlC,EAAiBA,EAM/Cx5D,KAAK27D,WAAa,GAOlB37D,KAAK47D,iBAAkB,EAMvB57D,KAAK67D,kBACH77D,KAAKm7D,YAAYx+B,cACfw9B,KACAn6D,KAAKm7D,YAAY11D,cACnB,IAAA2c,UAAS+3C,KAAoB,IAAA/3C,UAASpiB,KAAKm7D,YAAY11D,aAMzDzF,KAAK87D,kBAAoB97D,KAAKm7D,YAAY11D,aACtC,IAAA2c,UAASpiB,KAAKm7D,YAAY11D,aAC1B,KAMJzF,KAAK+7D,kBAAoB/7D,KAAKo7D,YAAY31D,aACtC,IAAA2c,UAASpiB,KAAKo7D,YAAY31D,aAC1B,KAEJ,MAAMu2D,GAAqB,IAAA31B,YAAW+wB,GAChC6E,GAAsB,IAAA71B,aAAYgxB,GAClC8E,GAAyB,IAAA/1B,gBAAeixB,GACxC+E,GAAwB,IAAAj2B,eAAckxB,GACtCgF,EAAgBp8D,KAAKu7D,cAAcS,GACnCK,EAAiBr8D,KAAKu7D,cAAcU,GACpCK,EAAoBt8D,KAAKu7D,cAAcW,GACvCK,EAAmBv8D,KAAKu7D,cAAcY,GAYtCK,EArIc,IAuIjBtB,EACG5yD,KAAKmiB,IACH,EACAniB,KAAKu5C,KACHv5C,KAAKm0D,MACH,IAAAn2B,SAAQ8wB,IACL8D,EAAwBA,EAAwB,IAAM,QAI/D,GAcN,GAZAl7D,KAAK08D,SACHV,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAGEx8D,KAAK47D,gBAAiB,CACxB,IAAIe,EAAYnwC,IAChBxsB,KAAK27D,WAAWj6D,SAAQ,SAAU22D,EAAUt3D,EAAGS,GAC7Cm7D,EAAYr0D,KAAKwkB,IACf6vC,EACAtE,EAASj5D,OAAO,GAAG,GACnBi5D,EAASj5D,OAAO,GAAG,GACnBi5D,EAASj5D,OAAO,GAAG,GAEvB,IAIAY,KAAK27D,WAAWj6D,SAAS22D,IACvB,GACE/vD,KAAKmiB,IACH4tC,EAASj5D,OAAO,GAAG,GACnBi5D,EAASj5D,OAAO,GAAG,GACnBi5D,EAASj5D,OAAO,GAAG,IAEnBu9D,EACF38D,KAAK87D,kBAAoB,EACzB,CACA,MAAMc,EAAc,CAClB,CAACvE,EAASj5D,OAAO,GAAG,GAAIi5D,EAASj5D,OAAO,GAAG,IAC3C,CAACi5D,EAASj5D,OAAO,GAAG,GAAIi5D,EAASj5D,OAAO,GAAG,IAC3C,CAACi5D,EAASj5D,OAAO,GAAG,GAAIi5D,EAASj5D,OAAO,GAAG,KAEzCw9D,EAAY,GAAG,GAAKD,EAAY38D,KAAK87D,kBAAoB,IAC3Dc,EAAY,GAAG,IAAM58D,KAAK87D,mBAExBc,EAAY,GAAG,GAAKD,EAAY38D,KAAK87D,kBAAoB,IAC3Dc,EAAY,GAAG,IAAM58D,KAAK87D,mBAExBc,EAAY,GAAG,GAAKD,EAAY38D,KAAK87D,kBAAoB,IAC3Dc,EAAY,GAAG,IAAM58D,KAAK87D,mBAM5B,MAAMj6C,EAAOvZ,KAAKwkB,IAChB8vC,EAAY,GAAG,GACfA,EAAY,GAAG,GACfA,EAAY,GAAG,IAEJt0D,KAAKmiB,IAChBmyC,EAAY,GAAG,GACfA,EAAY,GAAG,GACfA,EAAY,GAAG,IAEN/6C,EAAO7hB,KAAK87D,kBAAoB,IACzCzD,EAASj5D,OAASw9D,EAEtB,IAEJ,CAEAvB,EAAoB,CAAC,CACvB,CAYAwB,aAAaprC,EAAGC,EAAG8pC,EAAGsB,EAAMC,EAAMC,GAChCh9D,KAAK27D,WAAWl6D,KAAK,CACnBrC,OAAQ,CAAC09D,EAAMC,EAAMC,GACrB39D,OAAQ,CAACoyB,EAAGC,EAAG8pC,IAEnB,CAkBAkB,SAASjrC,EAAGC,EAAG8pC,EAAGlnC,EAAGwoC,EAAMC,EAAMC,EAAMC,EAAMT,GAC3C,MAAMU,GAAmB,IAAA34B,gBAAe,CAACu4B,EAAMC,EAAMC,EAAMC,IACrDE,EAAkBn9D,KAAK87D,mBACzB,IAAA15C,UAAS86C,GAAoBl9D,KAAK87D,kBAClC,KACEsB,EAA0Cp9D,KAAsB,kBAIhEq9D,EACJr9D,KAAKm7D,YAAYx+B,YACjBwgC,EAAkB,IAClBA,EAAkB,EAEpB,IAAIG,GAAmB,EAEvB,GAAId,EAAiB,EAAG,CACtB,GAAIx8D,KAAKo7D,YAAY3rC,YAAczvB,KAAK+7D,kBAAmB,CACzD,MAAMwB,GAAmB,IAAAh5B,gBAAe,CAAC9S,EAAGC,EAAG8pC,EAAGlnC,IAGlDgpC,GADE,IAAAl7C,UAASm7C,GAAoBv9D,KAAK+7D,kBAvQjB,KAyQuBuB,CAC5C,EACKD,GAAUr9D,KAAKm7D,YAAY1rC,YAAc0tC,IAC5CG,EACEH,EA7QiB,KA6QuBG,EAE9C,CAEA,IAAKA,GAAoBt9D,KAAKy7D,kBAE1BhzB,SAASy0B,EAAiB,KAC1Bz0B,SAASy0B,EAAiB,KAC1Bz0B,SAASy0B,EAAiB,KAC1Bz0B,SAASy0B,EAAiB,OAErB,IAAA76C,YAAW66C,EAAkBl9D,KAAKy7D,kBAErC,OAKN,IAAI+B,EAAc,EAElB,KAAKF,GAEA70B,SAASq0B,EAAK,KACdr0B,SAASq0B,EAAK,KACdr0B,SAASs0B,EAAK,KACdt0B,SAASs0B,EAAK,KACdt0B,SAASu0B,EAAK,KACdv0B,SAASu0B,EAAK,KACdv0B,SAASw0B,EAAK,KACdx0B,SAASw0B,EAAK,KAEf,GAAIT,EAAiB,EACnBc,GAAmB,OASnB,GALAE,GACI/0B,SAASq0B,EAAK,KAAQr0B,SAASq0B,EAAK,IAAU,EAAJ,IAC1Cr0B,SAASs0B,EAAK,KAAQt0B,SAASs0B,EAAK,IAAU,EAAJ,IAC1Ct0B,SAASu0B,EAAK,KAAQv0B,SAASu0B,EAAK,IAAU,EAAJ,IAC1Cv0B,SAASw0B,EAAK,KAAQx0B,SAASw0B,EAAK,IAAU,EAAJ,GAE7B,GAAfO,GACe,GAAfA,GACe,GAAfA,GACe,GAAfA,EAEA,OAMR,GAAIhB,EAAiB,EAAG,CACtB,IAAKc,EAAkB,CACrB,MAAMt+D,EAAS,EAAEyyB,EAAE,GAAK+pC,EAAE,IAAM,GAAI/pC,EAAE,GAAK+pC,EAAE,IAAM,GAC7CiC,EAAYz9D,KAAKu7D,cAAcv8D,GAErC,IAAIoJ,EACJ,GAAIi1D,EAAQ,CAKVj1D,IAHG,IAAA2e,QAAO+1C,EAAK,GAAIM,IACf,IAAAr2C,QAAOi2C,EAAK,GAAII,IAClB,GACqB,IAAAr2C,QAAO02C,EAAU,GAAIL,EAC9C,MACEh1D,GAAM00D,EAAK,GAAKE,EAAK,IAAM,EAAIS,EAAU,GAE3C,MAAMp1D,GAAMy0D,EAAK,GAAKE,EAAK,IAAM,EAAIS,EAAU,GAE/CH,EAD8Bl1D,EAAKA,EAAKC,EAAKA,EACFrI,KAAK07D,sBAClD,CACA,GAAI4B,EAAkB,CACpB,GAAIh1D,KAAK0T,IAAIyV,EAAE,GAAK+pC,EAAE,KAAOlzD,KAAK0T,IAAIyV,EAAE,GAAK+pC,EAAE,IAAK,CAElD,MAAMkC,EAAK,EAAEhsC,EAAE,GAAK8pC,EAAE,IAAM,GAAI9pC,EAAE,GAAK8pC,EAAE,IAAM,GACzCmC,EAAQ39D,KAAKu7D,cAAcmC,GAC3BE,EAAK,EAAEtpC,EAAE,GAAK7C,EAAE,IAAM,GAAI6C,EAAE,GAAK7C,EAAE,IAAM,GACzCosC,EAAQ79D,KAAKu7D,cAAcqC,GAEjC59D,KAAK08D,SACHjrC,EACAC,EACAgsC,EACAE,EACAd,EACAC,EACAY,EACAE,EACArB,EAAiB,GAEnBx8D,KAAK08D,SACHkB,EACAF,EACAlC,EACAlnC,EACAupC,EACAF,EACAX,EACAC,EACAT,EAAiB,EAErB,KAAO,CAEL,MAAMsB,EAAK,EAAErsC,EAAE,GAAKC,EAAE,IAAM,GAAID,EAAE,GAAKC,EAAE,IAAM,GACzCqsC,EAAQ/9D,KAAKu7D,cAAcuC,GAC3BE,EAAK,EAAExC,EAAE,GAAKlnC,EAAE,IAAM,GAAIknC,EAAE,GAAKlnC,EAAE,IAAM,GACzC2pC,EAAQj+D,KAAKu7D,cAAcyC,GAEjCh+D,KAAK08D,SACHjrC,EACAqsC,EACAE,EACA1pC,EACAwoC,EACAiB,EACAE,EACAhB,EACAT,EAAiB,GAEnBx8D,KAAK08D,SACHoB,EACApsC,EACA8pC,EACAwC,EACAD,EACAhB,EACAC,EACAiB,EACAzB,EAAiB,EAErB,CACA,MACF,CACF,CAEA,GAAIa,EAAQ,CACV,IAAKr9D,KAAK67D,kBACR,OAEF77D,KAAK47D,iBAAkB,CACzB,CAM2B,IAAR,GAAd4B,IACHx9D,KAAK68D,aAAaprC,EAAG+pC,EAAGlnC,EAAGwoC,EAAME,EAAMC,GAEd,IAAR,GAAdO,IACHx9D,KAAK68D,aAAaprC,EAAG+pC,EAAG9pC,EAAGorC,EAAME,EAAMD,GAErCS,IAEyB,IAAR,GAAdA,IACHx9D,KAAK68D,aAAanrC,EAAG4C,EAAG7C,EAAGsrC,EAAME,EAAMH,GAEd,IAAR,EAAdU,IACHx9D,KAAK68D,aAAanrC,EAAG4C,EAAGknC,EAAGuB,EAAME,EAAMD,GAG7C,CAOAvC,wBACE,MAAMz3D,GAAS,IAAAyhC,eASf,OAPAzkC,KAAK27D,WAAWj6D,SAAQ,SAAU22D,EAAUt3D,EAAGS,GAC7C,MAAM2B,EAAMk1D,EAASj5D,QACrB,IAAAslC,kBAAiB1hC,EAAQG,EAAI,KAC7B,IAAAuhC,kBAAiB1hC,EAAQG,EAAI,KAC7B,IAAAuhC,kBAAiB1hC,EAAQG,EAAI,GAC/B,IAEOH,CACT,CAKAo1D,eACE,OAAOp4D,KAAK27D,UACd,yFCzeK,MAAMpB,EAAkB,uQCW/B,SAAS2D,EACPj7D,EACAk7D,EACA9tD,EACAsf,GAEA,MAAMpF,GAAc,IAAAnI,UAAS+7C,GAAa9tD,EAAa,GACjDma,GAAc,IAAAtmB,WAAUi6D,GAAa9tD,EAAa,GAExD,OAAIsf,EACKrnB,KAAKwkB,IAAI7pB,EAAYqF,KAAKmiB,IAAIF,EAAaC,IAE7CliB,KAAKwkB,IAAI7pB,EAAYqF,KAAKwkB,IAAIvC,EAAaC,GACpD,CAcA,SAAS4zC,EAA2Bn7D,EAAY6gB,EAAeE,GAC7D,IAAIyqC,EAASnmD,KAAKwkB,IAAI7pB,EAAY6gB,GAalC,OAVA2qC,GACEnmD,KAAKqZ,IAAI,EAHG,GAGSrZ,KAAKmiB,IAAI,EAAGxnB,EAAa6gB,EAAgB,IAHlD,GAIZ,EACEE,IACFyqC,EAASnmD,KAAKmiB,IAAIgkC,EAAQzqC,GAC1ByqC,GACEnmD,KAAKqZ,IAAI,EARC,GAQWrZ,KAAKmiB,IAAI,EAAGzG,EAAgB/gB,EAAa,IARpD,GAUV,IAEG,IAAAqoB,OAAMmjC,EAAQzqC,EAAgB,EAAmB,EAAhBF,EAC1C,CASO,SAAS+L,EACdzL,EACAgL,EACA+uC,EACAxuC,GAGA,OADAP,OAAoBnrB,IAAXmrB,GAAuBA,EACzB,SAQKnsB,EAAY0rB,EAAW3X,EAAMgX,GACrC,QAAmB/pB,IAAfhB,EAA0B,CAC5B,MAAM6gB,EAAgBM,EAAY,GAC5BJ,EAAgBI,EAAYA,EAAYnjB,OAAS,GACjDo9D,EAAeF,EACjBD,EACEp6C,EACAq6C,EACAnnD,EACA2Y,GAEF7L,EAGJ,GAAIkK,EACF,OAAKoB,EAGEgvC,EACLn7D,EACAo7D,EACAr6C,IALO,IAAAsH,OAAMroB,EAAY+gB,EAAeq6C,GAS5C,MAAMC,EAASh2D,KAAKwkB,IAAIuxC,EAAcp7D,GAChCwd,EAAInY,KAAKijB,OAAM,IAAAH,mBAAkBhH,EAAak6C,EAAQ3vC,IAC5D,OAAIvK,EAAY3D,GAAK49C,GAAgB59C,EAAI2D,EAAYnjB,OAAS,EACrDmjB,EAAY3D,EAAI,GAElB2D,EAAY3D,EACrB,CAGJ,CACF,CAWO,SAAS2P,EACdzF,EACA7G,EACAE,EACAoL,EACA+uC,EACAxuC,GAKA,OAHAP,OAAoBnrB,IAAXmrB,GAAuBA,EAChCpL,OAAkC/f,IAAlB+f,EAA8BA,EAAgB,EAEvD,SAQK/gB,EAAY0rB,EAAW3X,EAAMgX,GACrC,QAAmB/pB,IAAfhB,EAA0B,CAC5B,MAAMo7D,EAAeF,EACjBD,EACEp6C,EACAq6C,EACAnnD,EACA2Y,GAEF7L,EAGJ,GAAIkK,EACF,OAAKoB,EAGEgvC,EACLn7D,EACAo7D,EACAr6C,IALO,IAAAsH,OAAMroB,EAAY+gB,EAAeq6C,GAS5C,MAAMv4B,EAAY,KACZy4B,EAAej2D,KAAKu5C,KACxBv5C,KAAKqZ,IAAImC,EAAgBu6C,GAAgB/1D,KAAKqZ,IAAIgJ,GAASmb,GAEvD5a,GAAUyD,GAAa,GAAMmX,GAAa,GAC1Cw4B,EAASh2D,KAAKwkB,IAAIuxC,EAAcp7D,GAChCu7D,EAAkBl2D,KAAKijB,MAC3BjjB,KAAKqZ,IAAImC,EAAgBw6C,GAAUh2D,KAAKqZ,IAAIgJ,GAASO,GAEjDuzC,EAAYn2D,KAAKmiB,IAAI8zC,EAAcC,GACnCvwC,EAAgBnK,EAAgBxb,KAAKuiB,IAAIF,EAAO8zC,GACtD,OAAO,IAAAnzC,OAAM2C,EAAejK,EAAeq6C,EAC7C,CAGJ,CACF,CAUO,SAASvuC,EACdhM,EACAE,EACAoL,EACA+uC,EACAxuC,GAIA,OAFAP,OAAoBnrB,IAAXmrB,GAAuBA,EAEzB,SAQKnsB,EAAY0rB,EAAW3X,EAAMgX,GACrC,QAAmB/pB,IAAfhB,EAA0B,CAC5B,MAAMo7D,EAAeF,EACjBD,EACEp6C,EACAq6C,EACAnnD,EACA2Y,GAEF7L,EAEJ,OAAKsL,GAAWpB,EAGTowC,EACLn7D,EACAo7D,EACAr6C,IALO,IAAAsH,OAAMroB,EAAY+gB,EAAeq6C,EAO5C,CAGJ,CACF,gLCnOO,SAAS5tC,EAAQjZ,GACtB,QAAiBvT,IAAbuT,EACF,OAAO,CAGX,CAMO,SAAS6b,EAAK7b,GACnB,QAAiBvT,IAAbuT,EACF,OAAOA,CAGX,CAMO,SAASgZ,EAAcpuB,GAC5B,MAAMm1C,EAAS,EAAIjvC,KAAK0e,GAAM5kB,EAC9B,OAAO,SAMKoV,EAAUwW,GAClB,OAAIA,EACKxW,OAGQvT,IAAbuT,EACFA,EAAWlP,KAAKijB,MAAM/T,EAAW+/B,EAAQ,IAAOA,OADlD,CAMJ,CACF,CAMO,SAAShnB,EAAiBuV,GAE/B,OADAA,EAAYA,IAAa,IAAA6b,WAAU,GAC5B,SAMKnqC,EAAUwW,GAClB,OAAIA,EACKxW,OAGQvT,IAAbuT,EACElP,KAAK0T,IAAIxE,IAAasuB,EACjB,EAEFtuB,OAJT,CAQJ,CACF,yCClEO,SAASmtB,EAAO3tB,EAAM0nD,EAAK95B,GAMhC,YALa3gC,IAAT2gC,IACFA,EAAO,CAAC,EAAG,IAEbA,EAAK,GAAK5tB,EAAK,GAAK,EAAI0nD,EACxB95B,EAAK,GAAK5tB,EAAK,GAAK,EAAI0nD,EACjB95B,CACT,CAOO,SAAS1tB,EAAQF,GACtB,OAAOA,EAAK,GAAK,GAAKA,EAAK,GAAK,CAClC,CASO,SAASmlB,EAAMnlB,EAAM8W,EAAO8W,GAMjC,YALa3gC,IAAT2gC,IACFA,EAAO,CAAC,EAAG,IAEbA,EAAK,GAAM5tB,EAAK,GAAK8W,EAAQ,GAAO,EACpC8W,EAAK,GAAM5tB,EAAK,GAAK8W,EAAQ,GAAO,EAC7B8W,CACT,CAWO,SAAS4tB,EAAOx7C,EAAM4tB,GAC3B,OAAIj7B,MAAMC,QAAQoN,GACTA,QAEI/S,IAAT2gC,EACFA,EAAO,CAAC5tB,EAAMA,IAEd4tB,EAAK,GAAK5tB,EACV4tB,EAAK,GAAK5tB,GAEL4tB,EACT,2NCrBA,MAAM+5B,UAAe,UAInB/+D,YAAYY,GACVT,QAMAC,KAAK8iB,YAAa,IAAAhhB,KAActB,EAAQsiB,YAMxC9iB,KAAK4+D,cAAgBC,EAAkBr+D,EAAQ1B,cAM/CkB,KAAK8+D,8BACiC76D,IAApCzD,EAAQu+D,yBACJv+D,EAAQu+D,wBAQd/+D,KAAKmS,SAAU,EAMfnS,KAAKu8C,YAA2Bt4C,IAAlBzD,EAAQkD,MAAsBlD,EAAQkD,MAAQ,QAM5D1D,KAAKg/D,YAA2B/6D,IAAlBzD,EAAQk8B,OAAsBl8B,EAAQk8B,MAMpD18B,KAAKi/D,eAAiBz+D,EAAQ8e,YAM9Btf,KAAKk/D,aAAe,KAMpBl/D,KAAKm/D,aAAe,KAEpB,MAAMpqB,EAAO/0C,KAKbA,KAAKo/D,aAAe,IAAI51B,SAAQ,SAAUE,EAASD,GACjDsL,EAAKmqB,aAAex1B,EACpBqL,EAAKoqB,aAAe11B,CACtB,GACF,CAOA/R,kBACE,OAAO13B,KAAK4+D,aACd,CAMAjnC,6BACE,OAAO33B,KAAK8+D,wBACd,CAOA3tD,gBACE,OAAOnR,KAAK8iB,UACd,CAMAsH,eAAetH,GACb,OAAO,IACT,CAKA5R,UACE,OAAOlR,KAAKo/D,YACd,CAOAv5D,WACE,OAAO7F,KAAKu8C,MACd,CAKAuS,WACE,OAAO9uD,KAAKg/D,MACd,CAKAjL,iBACE,OAAO/zD,KAAKi/D,YACd,CAMAI,UACEr/D,KAAK+D,SACP,CASAu7D,gBAAgBxgE,GACdkB,KAAK4+D,cAAgBC,EAAkB//D,GACvCkB,KAAK+D,SACP,CAMAyb,SAAS9b,GACP1D,KAAKu8C,OAAS74C,EACd1D,KAAK+D,SACP,EAQF,SAAS86D,EAAkBU,GACzB,OAAKA,EAGD51D,MAAMC,QAAQ21D,GACT,SAAUnuD,GACf,OAAOmuD,CACT,EAG6B,mBAApBA,EACFA,EAGF,SAAUnuD,GACf,MAAO,CAACmuD,EACV,EAdS,IAeX,CAEA,ieChMA,MAAMC,UAAmB,UAIvB5/D,YAAYY,GACVT,MAAM,CACJjB,aAAc0B,EAAQ1B,aACtBigE,wBAAyBv+D,EAAQu+D,wBACjCj8C,WAAYtiB,EAAQsiB,WACpBpf,MAAOlD,EAAQkD,MACfg5B,MAAOl8B,EAAQk8B,MACfpd,YAAa9e,EAAQ8e,cAMvBtf,KAAKS,GAKLT,KAAKU,KAKLV,KAAKW,GAMLX,KAAKy/D,aAA6Bx7D,IAAnBzD,EAAQk/D,QAAuBl/D,EAAQk/D,OAMtD1/D,KAAK2/D,qBACwB17D,IAA3BzD,EAAQyxD,eAA+BzxD,EAAQyxD,eAAiB,EAKlEjyD,KAAK4mD,cAAgC3iD,IAArBzD,EAAQomD,SAAyBpmD,EAAQomD,SAAW,KAEpE,MAAM2L,EAAW,CAAC,IAAK,KACnBvyD,KAAK4mD,WACP,IAAA4L,QAAOxyD,KAAK4mD,SAAS6L,YAAYzyD,KAAK4mD,SAAS78B,cAAewoC,GAOhEvyD,KAAK4/D,UAAY,IAAI,UAAUp/D,EAAQyzB,WAAa,GAMpDj0B,KAAK6/D,QAAU,CAAC,EAAG,GAMnB7/D,KAAK8/D,KAAOt/D,EAAQ+F,KAAO,GAM3BvG,KAAK+/D,YAAc,CACjB3gD,WAAY5e,EAAQ4e,WACpBE,YAAa9e,EAAQ8e,aAUvBtf,KAAKgzD,WAAaxyD,EAAQwyD,WAAaxyD,EAAQwyD,WAAa,CAC9D,CAKA3yC,iBACE,OAAOrgB,KAAK4/D,UAAUv/C,gBACxB,CAMAD,YAAY0C,EAAYpL,GACtB,MAAMkoD,EAAY5/D,KAAKggE,0BAA0Bl9C,GAC7C88C,GACFA,EAAUx/C,YAAY1I,EAE1B,CAWAs2C,kBAAkBlrC,EAAYrC,EAAG0B,EAAWnT,GAC1C,MAAM4wD,EAAY5/D,KAAKggE,0BAA0Bl9C,GACjD,IAAK88C,EACH,OAAO,EAGT,IACI7sD,EAAMkiD,EAAcnwD,EADpB6uD,GAAU,EAEd,IAAK,IAAI/rD,EAAIua,EAAUN,KAAMja,GAAKua,EAAUL,OAAQla,EAClD,IAAK,IAAIC,EAAIsa,EAAUJ,KAAMla,GAAKsa,EAAUH,OAAQna,EAClDotD,GAAe,IAAAgL,WAAUx/C,EAAG7Y,EAAGC,GAC/B/C,GAAS,EACL86D,EAAUM,YAAYjL,KACxBliD,EACE6sD,EAAU99D,IAAImzD,GAEhBnwD,EAASiO,EAAKlN,aAAe,iBACzBf,IACFA,GAA4B,IAAnBkK,EAAS+D,KAGjBjO,IACH6uD,GAAU,GAIhB,OAAOA,CACT,CAMAhB,uBAAuB7vC,GACrB,OAAO,CACT,CAMArD,SACE,OAAOzf,KAAK8/D,IACd,CAOAK,OAAO55D,GACDvG,KAAK8/D,OAASv5D,IAChBvG,KAAK8/D,KAAOv5D,EACZvG,KAAK+D,UAET,CAMAswD,UAAUvxC,GACR,OAAO9iB,KAAKy/D,OACd,CAMAr1C,eAAetH,GACb,MAAM8jC,EAAW9jC,EACb9iB,KAAKgyD,yBAAyBlvC,GAC9B9iB,KAAK4mD,SACT,OAAKA,EAGEA,EAASx8B,iBAFP,IAGX,CAWA0nC,QAAQrxC,EAAG7Y,EAAGC,EAAG3E,EAAY4f,GAC3B,OAAO,IAAApd,WACT,CAOA06D,cACE,OAAOpgE,KAAK4mD,QACd,CAMAoL,yBAAyBlvC,GACvB,OAAK9iB,KAAK4mD,SAGH5mD,KAAK4mD,UAFH,sBAAyB9jC,EAGpC,CAOAk9C,0BAA0Bl9C,GACxB,MAAM2hC,EAAmBzkD,KAAKmR,gBAK9B,OAJA,IAAArH,QACuB,OAArB26C,IAA6B,IAAAF,YAAWE,EAAkB3hC,GAC1D,IAEK9iB,KAAK4/D,SACd,CASA1N,kBAAkBhvD,GAChB,OAAOlD,KAAK2/D,eACd,CAQAlL,iBAAiBh0C,EAAGvd,EAAY4f,GAC9B,MAAM8jC,EAAW5mD,KAAKgyD,yBAAyBlvC,GACzCmvC,EAAiBjyD,KAAKkyD,kBAAkBhvD,GACxCqvD,GAAW,IAAAC,QAAO5L,EAAS6L,YAAYhyC,GAAIzgB,KAAK6/D,SACtD,OAAsB,GAAlB5N,EACKM,GAEF,IAAAp2B,OAAUo2B,EAAUN,EAAgBjyD,KAAK6/D,QAClD,CAWAQ,+BAA+Bj6D,EAAW0c,GACxCA,OAA4B7e,IAAf6e,EAA2BA,EAAa9iB,KAAKmR,gBAC1D,MAAMy1C,EAAW5mD,KAAKgyD,yBAAyBlvC,GAI/C,OAHI9iB,KAAK8uD,YAAchsC,EAAW2M,aAChCrpB,GAAY,IAAAs2B,OAAMkqB,EAAUxgD,EAAW0c,KAElC,IAAAw9C,kBAAiBl6D,EAAWwgD,GAAYxgD,EAAY,IAC7D,CAMAhF,QACEpB,KAAK4/D,UAAUx+D,OACjB,CAEAi+D,UACEr/D,KAAKoB,QACLrB,MAAMs/D,SACR,CAOAhJ,gBAAgBJ,EAAWnzC,GACzB,MAAM88C,EAAY5/D,KAAKggE,0BAA0Bl9C,GAC7CmzC,EAAY2J,EAAUW,gBACxBX,EAAUW,cAAgBtK,EAE9B,CAUAG,QAAQ31C,EAAG7Y,EAAGC,EAAGib,GAAa,EAQzB,MAAM09C,UAAwB,UAKnC5gE,YAAYQ,EAAM2S,GAChBhT,MAAMK,GAONJ,KAAK+S,KAAOA,CACd,EAGF,+FCtYA,SAME0tD,cAAe,gBAQfC,YAAa,cASbC,cAAe,qeCoCjB,MAAMC,UAAkB,UAItBhhE,YAAYY,GACVT,MAAM,CACJjB,aAAc0B,EAAQ1B,aACtBm1B,UAAWzzB,EAAQyzB,UACnByrC,OAAQl/D,EAAQk/D,OAChB58C,WAAYtiB,EAAQsiB,WACpBpf,MAAOlD,EAAQkD,MACfkjD,SAAUpmD,EAAQomD,SAClBvgD,iBAAkB7F,EAAQ6F,iBACtB7F,EAAQ6F,iBACRw6D,EACJ5O,eAAgBzxD,EAAQyxD,eACxB6O,gBAAiBtgE,EAAQsgE,gBACzBC,IAAKvgE,EAAQugE,IACbhiE,KAAMyB,EAAQzB,KACd29B,MAAOl8B,EAAQk8B,MACftd,WAAY5e,EAAQ4e,WACpBE,iBAC0Brb,IAAxBzD,EAAQ8e,aAA4B9e,EAAQ8e,YAC9C/Y,IAAK/F,EAAQ+F,IACbw4D,wBAAyBv+D,EAAQu+D,wBACjC/L,WAAYxyD,EAAQwyD,aAOtBhzD,KAAKoD,iBACqBa,IAAxBzD,EAAQ4C,YAA4B5C,EAAQ4C,YAAc,KAM5DpD,KAAKghE,eACmB/8D,IAAtBzD,EAAQwgE,UAA0BxgE,EAAQwgE,UAAY,UAMxDhhE,KAAKihE,uBAAyB,CAAC,EAM/BjhE,KAAKkhE,sBAAwB,CAAC,EAM9BlhE,KAAKmhE,4BAA8B3gE,EAAQ4gE,2BAM3CphE,KAAKqhE,0BAA2B,CAClC,CAKAhhD,iBACE,GAAIrgB,KAAK4/D,UAAUv/C,iBACjB,OAAO,EAET,IAAK,MAAM9Z,KAAOvG,KAAKihE,uBACrB,GAAIjhE,KAAKihE,uBAAuB16D,GAAK8Z,iBACnC,OAAO,EAIX,OAAO,CACT,CAMAD,YAAY0C,EAAYpL,GACtB,MAAM4pD,EAAgBthE,KAAKggE,0BAA0Bl9C,GAErD9iB,KAAK4/D,UAAUx/C,YACbpgB,KAAK4/D,WAAa0B,EAAgB5pD,EAAY,CAAC,GAEjD,IAAK,MAAM7J,KAAM7N,KAAKihE,uBAAwB,CAC5C,MAAMrB,EAAY5/D,KAAKihE,uBAAuBpzD,GAC9C+xD,EAAUx/C,YAAYw/C,GAAa0B,EAAgB5pD,EAAY,CAAC,EAClE,CACF,CAMAi7C,uBAAuB7vC,GACrB,OACE9iB,KAAKmR,iBACL2R,KACC,IAAAyhC,YAAWvkD,KAAKmR,gBAAiB2R,GAE3B,EAEF9iB,KAAKuhE,WACd,CAKAA,YACE,OAAO,CACT,CAMA9hD,SACE,IAAIlZ,EAAMxG,MAAM0f,SAIhB,OAHKzf,KAAK+zD,mBACRxtD,GAAO,0BAEFA,CACT,CAMA8tD,UAAUvxC,GACR,QACE9iB,KAAKmR,iBACL2R,KACC,IAAAyhC,YAAWvkD,KAAKmR,gBAAiB2R,KAI7B/iB,MAAMs0D,UAAUvxC,EACzB,CAMAkvC,yBAAyBlvC,GACvB,MAAM0+C,EAAWxhE,KAAKmR,gBACtB,GAAInR,KAAK4mD,YAAc4a,IAAY,IAAAjd,YAAWid,EAAU1+C,IACtD,OAAO9iB,KAAK4mD,SAEd,MAAM6a,GAAU,IAAA5pD,QAAOiL,GAKvB,OAJM2+C,KAAWzhE,KAAKkhE,wBACpBlhE,KAAKkhE,sBAAsBO,IACzB,sBAAyB3+C,IAEtB9iB,KAAKkhE,sBAAsBO,EACpC,CAMAzB,0BAA0Bl9C,GACxB,MAAM0+C,EAAWxhE,KAAKmR,gBACtB,IAAKqwD,IAAY,IAAAjd,YAAWid,EAAU1+C,GACpC,OAAO9iB,KAAK4/D,UAEd,MAAM6B,GAAU,IAAA5pD,QAAOiL,GAMvB,OALM2+C,KAAWzhE,KAAKihE,yBACpBjhE,KAAKihE,uBAAuBQ,GAAW,IAAI,UACzCzhE,KAAK4/D,UAAUW,gBAGZvgE,KAAKihE,uBAAuBQ,EACrC,CAYAC,YAAYjhD,EAAG7Y,EAAGC,EAAG3E,EAAY4f,EAAYvc,GAC3C,MAAMH,EAAY,CAACqa,EAAG7Y,EAAGC,GACnB85D,EAAe3hE,KAAKqgE,+BACxBj6D,EACA0c,GAEI8+C,EAAUD,EACZ3hE,KAAK8gE,gBAAgBa,EAAcz+D,EAAY4f,QAC/C7e,EACE8O,EAAO,IAAI/S,KAAKghE,UACpB56D,OACYnC,IAAZ29D,EAAwB,eAAiB,qBAC7B39D,IAAZ29D,EAAwBA,EAAU,GAClC5hE,KAAKoD,YACLpD,KAAKqG,iBACLrG,KAAK+/D,aAIP,OAFAhtD,EAAKxM,IAAMA,EACXwM,EAAKtF,iBAAiB,iBAAkBzN,KAAK+gB,iBAAiBzc,KAAKtE,OAC5D+S,CACT,CAUA++C,QAAQrxC,EAAG7Y,EAAGC,EAAG3E,EAAY4f,GAC3B,MAAM2hC,EAAmBzkD,KAAKmR,gBAC9B,IACGszC,IACA3hC,IACD,IAAAyhC,YAAWE,EAAkB3hC,GAE7B,OAAO9iB,KAAK6hE,gBACVphD,EACA7Y,EACAC,EACA3E,EACAuhD,GAAoB3hC,GAGxB,MAAMkR,EAAQh0B,KAAKggE,0BAA0Bl9C,GACvC1c,EAAY,CAACqa,EAAG7Y,EAAGC,GACzB,IAAIkL,EACJ,MAAMkiD,GAAe,IAAAx1C,QAAOrZ,GACxB4tB,EAAMksC,YAAYjL,KACpBliD,EAAOihB,EAAMlyB,IAAImzD,IAEnB,MAAM1uD,EAAMvG,KAAKyf,SACjB,GAAI1M,GAAQA,EAAKxM,KAAOA,EACtB,OAAOwM,EAET,MAAMqmD,EAAiBp5D,KAAKgyD,yBAAyBvN,GAC/C4U,EAAiBr5D,KAAKgyD,yBAAyBlvC,GAC/Cw2C,EAAmBt5D,KAAKqgE,+BAC5Bj6D,EACA0c,GAEIg/C,EAAU,IAAI,UAClBrd,EACA2U,EACAt2C,EACAu2C,EACAjzD,EACAkzD,EACAt5D,KAAKkyD,kBAAkBhvD,GACvBlD,KAAKuhE,aACL,CAAC9gD,EAAG7Y,EAAGC,EAAG3E,IACRlD,KAAK6hE,gBAAgBphD,EAAG7Y,EAAGC,EAAG3E,EAAYuhD,IAC5CzkD,KAAKmhE,4BACLnhE,KAAKqhE,yBACLrhE,KAAK+zD,kBAWP,OATA+N,EAAQv7D,IAAMA,EAEVwM,GACF+uD,EAAQ5iD,YAAcnM,EACtB+uD,EAAQniD,sBACRqU,EAAM+H,QAAQk5B,EAAc6M,IAE5B9tC,EAAMxxB,IAAIyyD,EAAc6M,GAEnBA,CACT,CAWAD,gBAAgBphD,EAAG7Y,EAAGC,EAAG3E,EAAY4f,GACnC,IAAI/P,EAAO,KACX,MAAMkiD,GAAe,IAAAgL,WAAUx/C,EAAG7Y,EAAGC,GAC/BtB,EAAMvG,KAAKyf,SACjB,GAAKzf,KAAK4/D,UAAUM,YAAYjL,IAK9B,GADAliD,EAAO/S,KAAK4/D,UAAU99D,IAAImzD,GACtBliD,EAAKxM,KAAOA,EAAK,CAInB,MAAM2Y,EAAcnM,EACpBA,EAAO/S,KAAK0hE,YAAYjhD,EAAG7Y,EAAGC,EAAG3E,EAAY4f,EAAYvc,GAGrD2Y,EAAYrZ,YAAc,eAE5BkN,EAAKmM,YAAcA,EAAYA,YAE/BnM,EAAKmM,YAAcA,EAErBnM,EAAK4M,sBACL3f,KAAK4/D,UAAU7jC,QAAQk5B,EAAcliD,EACvC,OApBAA,EAAO/S,KAAK0hE,YAAYjhD,EAAG7Y,EAAGC,EAAG3E,EAAY4f,EAAYvc,GACzDvG,KAAK4/D,UAAUp9D,IAAIyyD,EAAcliD,GAqBnC,OAAOA,CACT,CAOAgvD,2BAA2B3sD,GACzB,GAAIpV,KAAKqhE,0BAA4BjsD,EAArC,CAGApV,KAAKqhE,yBAA2BjsD,EAChC,IAAK,MAAMvH,KAAM7N,KAAKihE,uBACpBjhE,KAAKihE,uBAAuBpzD,GAAIzM,QAElCpB,KAAK+D,SALL,CAMF,CAcAi+D,yBAAyBl/C,EAAYm/C,GACnC,MAAMC,GAAO,IAAApgE,KAAcghB,GAC3B,GAAIo/C,EAAM,CACR,MAAMT,GAAU,IAAA5pD,QAAOqqD,GACjBT,KAAWzhE,KAAKkhE,wBACpBlhE,KAAKkhE,sBAAsBO,GAAWQ,EAE1C,CACF,CAEA7gE,QACErB,MAAMqB,QACN,IAAK,MAAMyM,KAAM7N,KAAKihE,uBACpBjhE,KAAKihE,uBAAuBpzD,GAAIzM,OAEpC,EAOF,SAASy/D,EAAwBsB,EAAWh/D,GACQg/D,EAAUv+D,WAAYT,IACtEA,CACJ,CAEA,+UCpZA,MAAMi/D,UAAgB,UAIpBxiE,YAAYY,GACVT,MAAM,CACJjB,aAAc0B,EAAQ1B,aACtBm1B,UAAWzzB,EAAQyzB,UACnByrC,OAAQl/D,EAAQk/D,OAChB58C,WAAYtiB,EAAQsiB,WACpBpf,MAAOlD,EAAQkD,MACfkjD,SAAUpmD,EAAQomD,SAClBqL,eAAgBzxD,EAAQyxD,eACxBv1B,MAAOl8B,EAAQk8B,MACftd,WAAY5e,EAAQ4e,WACpBE,YAAa9e,EAAQ8e,YACrB/Y,IAAK/F,EAAQ+F,IACbw4D,wBAAyBv+D,EAAQu+D,wBACjC/L,WAAYxyD,EAAQwyD,aAOtBhzD,KAAKqiE,yBACHriE,KAAK8gE,kBAAoBsB,EAAQ/pD,UAAUyoD,gBAM7C9gE,KAAKqG,iBAAmB7F,EAAQ6F,iBAE5B7F,EAAQsgE,kBACV9gE,KAAK8gE,gBAAkBtgE,EAAQsgE,iBAOjC9gE,KAAKjB,KAAO,KAERyB,EAAQzB,KACViB,KAAKsiE,QAAQ9hE,EAAQzB,MACZyB,EAAQugE,KACjB/gE,KAAKuiE,OAAO/hE,EAAQugE,KAOtB/gE,KAAKwiE,iBAAmB,CAAC,CAC3B,CAOAC,sBACE,OAAOziE,KAAKqG,gBACd,CAOAq8D,qBACE,OAAOrnD,OAAOsnD,eAAe3iE,MAAM8gE,kBAAoB9gE,KAAK8gE,gBACxD9gE,KAAK8gE,gBAAgBx8D,KAAKtE,MAC1BA,KAAK8gE,eACX,CASA8B,UACE,OAAO5iE,KAAKjB,IACd,CAOAgiB,iBAAiBrT,GACf,MAAMqF,EAAoDrF,EAAY,OAChE8lD,GAAM,IAAA37C,QAAO9E,GACb8+C,EAAY9+C,EAAKlN,WACvB,IAAIzF,EACAyxD,GAAa,mBACf7xD,KAAKwiE,iBAAiBhP,IAAO,EAC7BpzD,EAAO,yBACEozD,KAAOxzD,KAAKwiE,0BACdxiE,KAAKwiE,iBAAiBhP,GAC7BpzD,EACEyxD,GAAa,gBACT,wBACAA,GAAa,iBACb,2BACA5tD,GAEIA,MAAR7D,GACFJ,KAAKkC,cAAc,IAAI,EAAAs+D,gBAAgBpgE,EAAM2S,GAEjD,CAOA8vD,oBAAoBx8D,GAClBrG,KAAK4/D,UAAUx+D,QACfpB,KAAKqG,iBAAmBA,EACxBrG,KAAK+D,SACP,CAQA++D,mBAAmBhC,EAAiBv6D,GAClCvG,KAAK8gE,gBAAkBA,EACvB9gE,KAAK4/D,UAAUr/C,0BACI,IAARha,EACTvG,KAAKmgE,OAAO55D,GAEZvG,KAAK+D,SAET,CAOAw+D,OAAOxB,GACL,MAAMhiE,GAAO,IAAAgkE,WAAUhC,GACvB/gE,KAAKjB,KAAOA,EACZiB,KAAKsiE,QAAQvjE,EACf,CAOAujE,QAAQvjE,GACNiB,KAAKjB,KAAOA,EACZ,MAAMwH,EAAMxH,EAAKs+B,KAAK,MAClBr9B,KAAKqiE,yBACPriE,KAAK8iE,oBAAmB,IAAAE,qBAAoBjkE,EAAMiB,KAAK4mD,UAAWrgD,GAElEvG,KAAKmgE,OAAO55D,EAEhB,CAQAu6D,gBAAgB16D,EAAWlD,EAAY4f,GAEvC,CAQAszC,QAAQ31C,EAAG7Y,EAAGC,GACZ,MAAMotD,GAAe,IAAAgL,WAAUx/C,EAAG7Y,EAAGC,GACjC7H,KAAK4/D,UAAUM,YAAYjL,IAC7Bj1D,KAAK4/D,UAAU99D,IAAImzD,EAEvB,EAGF,2KC9JA,MAAMgO,UAAY,UAIhBrjE,YAAYY,GAGV,MAAMsiB,OACmB7e,KAHzBzD,EAAUA,GAAW,CAAC,GAGZsiB,WAA2BtiB,EAAQsiB,WAAa,YAEpD8jC,OACiB3iD,IAArBzD,EAAQomD,SACJpmD,EAAQomD,UACR,IAAAsc,WAAU,CACRlgE,QAAQ,IAAAmgE,sBAAqBrgD,GAC7BgB,cAAetjB,EAAQsjB,cACvBgG,QAAStpB,EAAQspB,QACjBtqB,QAASgB,EAAQhB,QACjB+yD,SAAU/xD,EAAQ+xD,WAG1BxyD,MAAM,CACJjB,aAAc0B,EAAQ1B,aACtBm1B,UAAWzzB,EAAQyzB,UACnB7wB,YAAa5C,EAAQ4C,YACrBkc,YAAa9e,EAAQ8e,YACrBogD,OAAQl/D,EAAQk/D,OAChB58C,WAAYA,EACZs+C,2BAA4B5gE,EAAQ4gE,2BACpCxa,SAAUA,EACVvgD,iBAAkB7F,EAAQ6F,iBAC1B4rD,eAAgBzxD,EAAQyxD,eACxB6O,gBAAiBtgE,EAAQsgE,gBACzBC,IAAKvgE,EAAQugE,IACbhiE,KAAMyB,EAAQzB,KACd29B,WAAyBz4B,IAAlBzD,EAAQk8B,OAAsBl8B,EAAQk8B,MAC7Ctd,WAAY5e,EAAQ4e,WACpB2/C,wBAAyBv+D,EAAQu+D,wBACjC/L,WAAYxyD,EAAQwyD,aAOtBhzD,KAAK05D,aAA6Bz1D,IAAnBzD,EAAQkyD,OAAuBlyD,EAAQkyD,OAAS,CACjE,CAKA6O,YACE,OAAOvhE,KAAK05D,OACd,EAGF,0LC1GO,MAAM0J,EAAiB,UAWvB,SAAS36D,EAAY46D,EAAIC,EAAIt0B,GAClCA,EAASA,GAAUo0B,EACnB,MAAMG,GAAO,IAAA5hB,WAAU0hB,EAAG,IACpBG,GAAO,IAAA7hB,WAAU2hB,EAAG,IACpBG,GAAeD,EAAOD,GAAQ,EAC9BG,GAAc,IAAA/hB,WAAU2hB,EAAG,GAAKD,EAAG,IAAM,EACzC5xC,EACJnpB,KAAK4gB,IAAIu6C,GAAen7D,KAAK4gB,IAAIu6C,GACjCn7D,KAAK4gB,IAAIw6C,GACPp7D,KAAK4gB,IAAIw6C,GACTp7D,KAAK2gB,IAAIs6C,GACTj7D,KAAK2gB,IAAIu6C,GACb,OAAO,EAAIx0B,EAAS1mC,KAAKC,MAAMD,KAAKE,KAAKipB,GAAInpB,KAAKE,KAAK,EAAIipB,GAC7D,CAQA,SAASkyC,EAAkBn/B,EAAawK,GACtC,IAAI/tC,EAAS,EACb,IAAK,IAAIF,EAAI,EAAGC,EAAKwjC,EAAYvjC,OAAQF,EAAIC,EAAK,IAAKD,EACrDE,GAAUwH,EAAY+7B,EAAYzjC,GAAIyjC,EAAYzjC,EAAI,GAAIiuC,GAE5D,OAAO/tC,CACT,CAcO,SAASI,EAAUqqB,EAAUlrB,GAElC,MAAMwuC,GADNxuC,EAAUA,GAAW,CAAC,GACCwuC,QAAUo0B,EAC3BtgD,EAAatiB,EAAQsiB,YAAc,YACnC1iB,EAAOsrB,EAASC,UACT,uBAATvrB,IACFsrB,EAAWA,EAASlT,QAAQsT,UAAUhJ,EAAY,cAEpD,IACI0hB,EAAarY,EAAQprB,EAAGC,EAAIumB,EAAGC,EAD/BvmB,EAAS,EAEb,OAAQb,GACN,IAAK,QACL,IAAK,aACH,MAEF,IAAK,aACL,IAAK,aACHokC,EAAwE,EAEtEgI,iBACFvrC,EAAS0iE,EAAkBn/B,EAAawK,GACxC,MAEF,IAAK,kBACL,IAAK,UAIH,IAHAxK,EAAwE,EAEtEgI,iBACGzrC,EAAI,EAAGC,EAAKwjC,EAAYvjC,OAAQF,EAAIC,IAAMD,EAC7CE,GAAU0iE,EAAkBn/B,EAAYzjC,GAAIiuC,GAE9C,MAEF,IAAK,eAIH,IAHAxK,EAAwE,EAEtEgI,iBACGzrC,EAAI,EAAGC,EAAKwjC,EAAYvjC,OAAQF,EAAIC,IAAMD,EAE7C,IADAorB,EAASqY,EAAYzjC,GAChBwmB,EAAI,EAAGC,EAAK2E,EAAOlrB,OAAQsmB,EAAIC,IAAMD,EACxCtmB,GAAU0iE,EAAkBx3C,EAAO5E,GAAIynB,GAG3C,MAEF,IAAK,qBAAsB,CACzB,MAAM40B,EAC0D,EAE5DC,gBACJ,IAAK9iE,EAAI,EAAGC,EAAK4iE,EAAW3iE,OAAQF,EAAIC,IAAMD,EAC5CE,GAAUI,EAAUuiE,EAAW7iE,GAAIP,GAErC,KACF,CACA,QACE,MAAM,IAAIb,MAAM,8BAAgCS,GAGpD,OAAOa,CACT,CAgBA,SAAS6iE,EAAgBt/B,EAAawK,GACpC,IAAIzI,EAAO,EACX,MAAM3nB,EAAM4lB,EAAYvjC,OACxB,IAAIgnB,EAAKuc,EAAY5lB,EAAM,GAAG,GAC1BsJ,EAAKsc,EAAY5lB,EAAM,GAAG,GAC9B,IAAK,IAAI7d,EAAI,EAAGA,EAAI6d,EAAK7d,IAAK,CAC5B,MAAM65B,EAAK4J,EAAYzjC,GAAG,GACpB85B,EAAK2J,EAAYzjC,GAAG,GAC1BwlC,IACE,IAAAob,WAAU/mB,EAAK3S,IACd,EAAI3f,KAAK4gB,KAAI,IAAAy4B,WAAUz5B,IAAO5f,KAAK4gB,KAAI,IAAAy4B,WAAU9mB,KACpD5S,EAAK2S,EACL1S,EAAK2S,CACP,CACA,OAAQ0L,EAAOyI,EAASA,EAAU,CACpC,CAYO,SAAS1I,EAAQ5a,EAAUlrB,GAEhC,MAAMwuC,GADNxuC,EAAUA,GAAW,CAAC,GACCwuC,QAAUo0B,EAC3BtgD,EAAatiB,EAAQsiB,YAAc,YACnC1iB,EAAOsrB,EAASC,UACT,uBAATvrB,IACFsrB,EAAWA,EAASlT,QAAQsT,UAAUhJ,EAAY,cAEpD,IACI0hB,EAAarY,EAAQprB,EAAGC,EAAIumB,EAAGC,EAD/B+e,EAAO,EAEX,OAAQnmC,GACN,IAAK,QACL,IAAK,aACL,IAAK,aACL,IAAK,kBACL,IAAK,aACH,MAEF,IAAK,UAKH,IAJAokC,EAAiE,EAE/DgI,iBACFjG,EAAOj+B,KAAK0T,IAAI8nD,EAAgBt/B,EAAY,GAAIwK,IAC3CjuC,EAAI,EAAGC,EAAKwjC,EAAYvjC,OAAQF,EAAIC,IAAMD,EAC7CwlC,GAAQj+B,KAAK0T,IAAI8nD,EAAgBt/B,EAAYzjC,GAAIiuC,IAEnD,MAEF,IAAK,eAIH,IAHAxK,EAAwE,EAEtEgI,iBACGzrC,EAAI,EAAGC,EAAKwjC,EAAYvjC,OAAQF,EAAIC,IAAMD,EAG7C,IAFAorB,EAASqY,EAAYzjC,GACrBwlC,GAAQj+B,KAAK0T,IAAI8nD,EAAgB33C,EAAO,GAAI6iB,IACvCznB,EAAI,EAAGC,EAAK2E,EAAOlrB,OAAQsmB,EAAIC,IAAMD,EACxCgf,GAAQj+B,KAAK0T,IAAI8nD,EAAgB33C,EAAO5E,GAAIynB,IAGhD,MAEF,IAAK,qBAAsB,CACzB,MAAM40B,EAC0D,EAE5DC,gBACJ,IAAK9iE,EAAI,EAAGC,EAAK4iE,EAAW3iE,OAAQF,EAAIC,IAAMD,EAC5CwlC,GAAQD,EAAQs9B,EAAW7iE,GAAIP,GAEjC,KACF,CACA,QACE,MAAM,IAAIb,MAAM,8BAAgCS,GAGpD,OAAOmmC,CACT,CAaO,SAASrb,EAAOm4C,EAAI9mC,EAAUwnC,EAAS/0B,GAC5CA,EAASA,GAAUo0B,EACnB,MAAMG,GAAO,IAAA5hB,WAAU0hB,EAAG,IACpBW,GAAO,IAAAriB,WAAU0hB,EAAG,IACpBY,EAAO1nC,EAAWyS,EAClBk1B,EAAM57D,KAAK67D,KACf77D,KAAK4gB,IAAIq6C,GAAQj7D,KAAK2gB,IAAIg7C,GACxB37D,KAAK2gB,IAAIs6C,GAAQj7D,KAAK4gB,IAAI+6C,GAAQ37D,KAAK2gB,IAAI86C,IAEzCzf,EACJ0f,EACA17D,KAAKC,MACHD,KAAK4gB,IAAI66C,GAAWz7D,KAAK4gB,IAAI+6C,GAAQ37D,KAAK2gB,IAAIs6C,GAC9Cj7D,KAAK2gB,IAAIg7C,GAAQ37D,KAAK4gB,IAAIq6C,GAAQj7D,KAAK4gB,IAAIg7C,IAE/C,MAAO,EAAC,IAAAziB,WAAU6C,IAAM,IAAA7C,WAAUyiB,GACpC,2CC5PO,SAASvoC,EAAUyoC,EAAQ14D,EAAO24D,GACvC,MAAMC,OACUrgE,IAAdogE,EAA0BD,EAAO3oC,QAAQ4oC,GAAa,GAAKD,EAC7D,IAAIG,EAAUD,EAAatyC,QAAQ,KAEnC,OADAuyC,GAAuB,IAAbA,EAAiBD,EAAarjE,OAASsjE,EAC1CA,EAAU74D,EACb44D,EACA,IAAI36D,MAAM,EAAI+B,EAAQ64D,GAASlnC,KAAK,KAAOinC,CACjD,CAQO,SAASE,EAAgB/N,EAAIE,GAClC,MAAM8N,GAAM,GAAKhO,GAAI/hC,MAAM,KACrBgwC,GAAM,GAAK/N,GAAIjiC,MAAM,KAE3B,IAAK,IAAI3zB,EAAI,EAAGA,EAAIuH,KAAKmiB,IAAIg6C,EAAGxjE,OAAQyjE,EAAGzjE,QAASF,IAAK,CACvD,MAAM4jE,EAAKrrD,SAASmrD,EAAG1jE,IAAM,IAAK,IAC5B6jE,EAAKtrD,SAASorD,EAAG3jE,IAAM,IAAK,IAElC,GAAI4jE,EAAKC,EACP,OAAO,EAET,GAAIA,EAAKD,EACP,OAAQ,CAEZ,CAEA,OAAO,CACT,gLCkPA,QAtQA,MAIE/kE,YAAY2gE,GAMVvgE,KAAKugE,mBAAkCt8D,IAAlBs8D,EAA8BA,EAAgB,KAMnEvgE,KAAK6kE,OAAS,EAMd7kE,KAAK8kE,SAAW,CAAC,EAMjB9kE,KAAK+kE,QAAU,KAMf/kE,KAAKglE,QAAU,IACjB,CAKA3kD,iBACE,OAAOrgB,KAAKugE,cAAgB,GAAKvgE,KAAKyY,WAAazY,KAAKugE,aAC1D,CAMAngD,YAAY6kD,GACV,KAAOjlE,KAAKqgB,kBACVrgB,KAAKsB,KAET,CAKAF,QACEpB,KAAK6kE,OAAS,EACd7kE,KAAK8kE,SAAW,CAAC,EACjB9kE,KAAK+kE,QAAU,KACf/kE,KAAKglE,QAAU,IACjB,CAMA9E,YAAY35D,GACV,OAAOvG,KAAK8kE,SAASnnD,eAAepX,EACtC,CAQA7E,QAAQC,GACN,IAAIujE,EAAQllE,KAAK+kE,QACjB,KAAOG,GACLvjE,EAAEujE,EAAMC,OAAQD,EAAMpF,KAAM9/D,MAC5BklE,EAAQA,EAAME,KAElB,CAOAtjE,IAAIyE,EAAK/F,GACP,MAAM0kE,EAAQllE,KAAK8kE,SAASv+D,GAE5B,OADA,IAAAuD,aAAiB7F,IAAVihE,EAAqB,IACxBA,IAAUllE,KAAKglE,UAERE,IAAUllE,KAAK+kE,SACxB/kE,KAAK+kE,QAAgC/kE,KAAK+kE,QAAa,MACvD/kE,KAAK+kE,QAAQM,MAAQ,OAErBH,EAAME,MAAMC,MAAQH,EAAMG,MAC1BH,EAAMG,MAAMD,MAAQF,EAAME,OAE5BF,EAAME,MAAQ,KACdF,EAAMG,MAAQrlE,KAAKglE,QACnBhlE,KAAKglE,QAAQI,MAAQF,EACrBllE,KAAKglE,QAAUE,GAXNA,EAAMC,MAajB,CAOA9iE,OAAOkE,GACL,MAAM2+D,EAAQllE,KAAK8kE,SAASv+D,GAkB5B,OAjBA,IAAAuD,aAAiB7F,IAAVihE,EAAqB,IACxBA,IAAUllE,KAAKglE,SACjBhlE,KAAKglE,QAAgCE,EAAW,MAC5CllE,KAAKglE,UACPhlE,KAAKglE,QAAQI,MAAQ,OAEdF,IAAUllE,KAAK+kE,SACxB/kE,KAAK+kE,QAAgCG,EAAW,MAC5CllE,KAAK+kE,UACP/kE,KAAK+kE,QAAQM,MAAQ,QAGvBH,EAAME,MAAMC,MAAQH,EAAMG,MAC1BH,EAAMG,MAAMD,MAAQF,EAAME,cAErBplE,KAAK8kE,SAASv+D,KACnBvG,KAAK6kE,OACAK,EAAMC,MACf,CAKA1sD,WACE,OAAOzY,KAAK6kE,MACd,CAKAjnD,UACE,MAAMC,EAAO,IAAIlU,MAAM3J,KAAK6kE,QAC5B,IACIK,EADAnkE,EAAI,EAER,IAAKmkE,EAAQllE,KAAKglE,QAASE,EAAOA,EAAQA,EAAMG,MAC9CxnD,EAAK9c,KAAOmkE,EAAMpF,KAEpB,OAAOjiD,CACT,CAKAynD,YACE,MAAMh8D,EAAS,IAAIK,MAAM3J,KAAK6kE,QAC9B,IACIK,EADAnkE,EAAI,EAER,IAAKmkE,EAAQllE,KAAKglE,QAASE,EAAOA,EAAQA,EAAMG,MAC9C/7D,EAAOvI,KAAOmkE,EAAMC,OAEtB,OAAO77D,CACT,CAKAgX,WACE,OAAOtgB,KAAK+kE,QAAQI,MACtB,CAKAI,cACE,OAAOvlE,KAAK+kE,QAAQjF,IACtB,CAMAt/C,eACE,OAAOxgB,KAAKglE,QAAQlF,IACtB,CAOA0F,KAAKj/D,GACH,GAAKvG,KAAKkgE,YAAY35D,GAGtB,OAAOvG,KAAK8kE,SAASv+D,GAAK4+D,MAC5B,CAKA7jE,MACE,MAAM4jE,EAAQllE,KAAK+kE,QAUnB,cATO/kE,KAAK8kE,SAASI,EAAMpF,MACvBoF,EAAME,QACRF,EAAME,MAAMC,MAAQ,MAEtBrlE,KAAK+kE,QAAgCG,EAAW,MAC3CllE,KAAK+kE,UACR/kE,KAAKglE,QAAU,QAEfhlE,KAAK6kE,OACAK,EAAMC,MACf,CAMAppC,QAAQx1B,EAAKoV,GACX3b,KAAK8B,IAAIyE,GACTvG,KAAK8kE,SAASv+D,GAAK4+D,OAASxpD,CAC9B,CAMAnZ,IAAI+D,EAAKoV,IACP,IAAA7R,UAASvD,KAAOvG,KAAK8kE,UAAW,IAChC,MAAMI,EAAQ,CACZpF,KAAMv5D,EACN6+D,MAAO,KACPC,MAAOrlE,KAAKglE,QACZG,OAAQxpD,GAEL3b,KAAKglE,QAGRhlE,KAAKglE,QAAQI,MAAQF,EAFrBllE,KAAK+kE,QAAUG,EAIjBllE,KAAKglE,QAAUE,EACfllE,KAAK8kE,SAASv+D,GAAO2+D,IACnBllE,KAAK6kE,MACT,CAOAhsD,QAAQ7B,GACNhX,KAAKugE,cAAgBvpD,CACvB,4KCjRK,MAAMwK,EAAOgL,IA4PpB,QA9OA,MAKE5sB,YAAY6lE,EAAkBC,GAK5B1lE,KAAK2lE,kBAAoBF,EAMzBzlE,KAAK4lE,aAAeF,EAMpB1lE,KAAK6lE,UAAY,GAMjB7lE,KAAK8lE,YAAc,GAMnB9lE,KAAK+lE,gBAAkB,CAAC,CAC1B,CAKA3kE,QACEpB,KAAK6lE,UAAU5kE,OAAS,EACxBjB,KAAK8lE,YAAY7kE,OAAS,GAC1B,IAAAG,OAAMpB,KAAK+lE,gBACb,CAMAxkD,UACE,MAAMykD,EAAWhmE,KAAK6lE,UAChBI,EAAajmE,KAAK8lE,YAClBlnE,EAAUonE,EAAS,GACF,GAAnBA,EAAS/kE,QACX+kE,EAAS/kE,OAAS,EAClBglE,EAAWhlE,OAAS,IAEpB+kE,EAAS,GAAKA,EAAS1kE,MACvB2kE,EAAW,GAAKA,EAAW3kE,MAC3BtB,KAAKkmE,QAAQ,IAEf,MAAMC,EAAanmE,KAAK4lE,aAAahnE,GAErC,cADOoB,KAAK+lE,gBAAgBI,GACrBvnE,CACT,CAOAuiB,QAAQviB,IACN,IAAAkL,UAAS9J,KAAK4lE,aAAahnE,KAAYoB,KAAK+lE,iBAAkB,IAC9D,MAAMK,EAAWpmE,KAAK2lE,kBAAkB/mE,GACxC,OAAIwnE,GAAY5kD,IACdxhB,KAAK6lE,UAAUpkE,KAAK7C,GACpBoB,KAAK8lE,YAAYrkE,KAAK2kE,GACtBpmE,KAAK+lE,gBAAgB/lE,KAAK4lE,aAAahnE,KAAY,EACnDoB,KAAKqmE,UAAU,EAAGrmE,KAAK6lE,UAAU5kE,OAAS,IACnC,EAGX,CAKAwX,WACE,OAAOzY,KAAK6lE,UAAU5kE,MACxB,CAQAqlE,mBAAmBjmE,GACjB,OAAe,EAARA,EAAY,CACrB,CAQAkmE,oBAAoBlmE,GAClB,OAAe,EAARA,EAAY,CACrB,CAQAmmE,gBAAgBnmE,GACd,OAAQA,EAAQ,GAAM,CACxB,CAMAomE,WACE,IAAI1lE,EACJ,IAAKA,GAAKf,KAAK6lE,UAAU5kE,QAAU,GAAK,EAAGF,GAAK,EAAGA,IACjDf,KAAKkmE,QAAQnlE,EAEjB,CAKAqT,UACE,OAAiC,IAA1BpU,KAAK6lE,UAAU5kE,MACxB,CAMAi1D,YAAY3vD,GACV,OAAOA,KAAOvG,KAAK+lE,eACrB,CAMAW,SAAS9nE,GACP,OAAOoB,KAAKk2D,YAAYl2D,KAAK4lE,aAAahnE,GAC5C,CAMAsnE,QAAQ7lE,GACN,MAAM2lE,EAAWhmE,KAAK6lE,UAChBI,EAAajmE,KAAK8lE,YAClBa,EAAQX,EAAS/kE,OACjBrC,EAAUonE,EAAS3lE,GACnB+lE,EAAWH,EAAW5lE,GACtBumE,EAAavmE,EAEnB,KAAOA,EAAQsmE,GAAS,GAAG,CACzB,MAAME,EAAS7mE,KAAKsmE,mBAAmBjmE,GACjCymE,EAAS9mE,KAAKumE,oBAAoBlmE,GAElC0mE,EACJD,EAASH,GAASV,EAAWa,GAAUb,EAAWY,GAC9CC,EACAD,EAENb,EAAS3lE,GAAS2lE,EAASe,GAC3Bd,EAAW5lE,GAAS4lE,EAAWc,GAC/B1mE,EAAQ0mE,CACV,CAEAf,EAAS3lE,GAASzB,EAClBqnE,EAAW5lE,GAAS+lE,EACpBpmE,KAAKqmE,UAAUO,EAAYvmE,EAC7B,CAOAgmE,UAAUO,EAAYvmE,GACpB,MAAM2lE,EAAWhmE,KAAK6lE,UAChBI,EAAajmE,KAAK8lE,YAClBlnE,EAAUonE,EAAS3lE,GACnB+lE,EAAWH,EAAW5lE,GAE5B,KAAOA,EAAQumE,GAAY,CACzB,MAAMI,EAAchnE,KAAKwmE,gBAAgBnmE,GACzC,KAAI4lE,EAAWe,GAAeZ,GAK5B,MAJAJ,EAAS3lE,GAAS2lE,EAASgB,GAC3Bf,EAAW5lE,GAAS4lE,EAAWe,GAC/B3mE,EAAQ2mE,CAIZ,CACAhB,EAAS3lE,GAASzB,EAClBqnE,EAAW5lE,GAAS+lE,CACtB,CAKAxxD,eACE,MAAM6wD,EAAmBzlE,KAAK2lE,kBACxBK,EAAWhmE,KAAK6lE,UAChBI,EAAajmE,KAAK8lE,YACxB,IAAIzlE,EAAQ,EACZ,MAAM+B,EAAI4jE,EAAS/kE,OACnB,IAAIrC,EAASmC,EAAGqlE,EAChB,IAAKrlE,EAAI,EAAGA,EAAIqB,IAAKrB,EACnBnC,EAAUonE,EAASjlE,GACnBqlE,EAAWX,EAAiB7mE,GACxBwnE,GAAY5kD,SACPxhB,KAAK+lE,gBAAgB/lE,KAAK4lE,aAAahnE,KAE9CqnE,EAAW5lE,GAAS+lE,EACpBJ,EAAS3lE,KAAWzB,GAGxBonE,EAAS/kE,OAASZ,EAClB4lE,EAAWhlE,OAASZ,EACpBL,KAAKymE,UACP,2ICzPF,MAAMQ,EACJrnE,cAKEI,KAAKknE,OAAS,CAAC,EAMflnE,KAAKmnE,WAAa,EAMlBnnE,KAAKonE,cAAgB,EACvB,CAKAhmE,QACEpB,KAAKknE,OAAS,CAAC,EACflnE,KAAKmnE,WAAa,CACpB,CAKA9mD,iBACE,OAAOrgB,KAAKmnE,WAAannE,KAAKonE,aAChC,CAKAC,SACE,GAAIrnE,KAAKqgB,iBAAkB,CACzB,IAAItf,EAAI,EACR,IAAK,MAAMwF,KAAOvG,KAAKknE,OAAQ,CAC7B,MAAMI,EAAYtnE,KAAKknE,OAAO3gE,GACZ,IAAP,EAANxF,MAAmBumE,EAAUvyD,uBACzB/U,KAAKknE,OAAO3gE,KACjBvG,KAAKmnE,WAEX,CACF,CACF,CAQArlE,IAAIqB,EAAKC,EAAaqwB,GACpB,MAAMltB,EAAMkZ,EAAOtc,EAAKC,EAAaqwB,GACrC,OAAOltB,KAAOvG,KAAKknE,OAASlnE,KAAKknE,OAAO3gE,GAAO,IACjD,CAQA/D,IAAIW,EAAKC,EAAaqwB,EAAO6zC,GAC3B,MAAM/gE,EAAMkZ,EAAOtc,EAAKC,EAAaqwB,GACrCzzB,KAAKknE,OAAO3gE,GAAO+gE,IACjBtnE,KAAKmnE,UACT,CASAtuD,QAAQ0uD,GACNvnE,KAAKonE,cAAgBG,EACrBvnE,KAAKqnE,QACP,EASF,SAAS5nD,EAAOtc,EAAKC,EAAaqwB,GAEhC,OAAOrwB,EAAc,IAAMD,EAAM,KADbswB,GAAQ,IAAAD,UAASC,GAAS,OAEhD,CAEA,UAOa+zC,EAAS,IAAIP,8CCjGnB,SAAS3kD,EAAe7B,EAAG7Y,EAAGC,EAAGzB,GACtC,YAAkBnC,IAAdmC,GACFA,EAAU,GAAKqa,EACfra,EAAU,GAAKwB,EACfxB,EAAU,GAAKyB,EACRzB,GAEF,CAACqa,EAAG7Y,EAAGC,EAChB,CAQO,SAASo4D,EAAUx/C,EAAG7Y,EAAGC,GAC9B,OAAO4Y,EAAI,IAAM7Y,EAAI,IAAMC,CAC7B,CAOO,SAAS4X,EAAOrZ,GACrB,OAAO65D,EAAU75D,EAAU,GAAIA,EAAU,GAAIA,EAAU,GACzD,CAOO,SAASqhE,EAAsBpmD,GACpC,MAAOZ,EAAG7Y,EAAGC,GAAKwZ,EACfqmD,UAAUrmD,EAAQsmD,YAAY,KAAO,EAAGtmD,EAAQpgB,QAChDyzB,MAAM,KACN1rB,IAAI2rB,QACP,OAAOsrC,EAAUx/C,EAAG7Y,EAAGC,EACzB,CAOO,SAAS6Y,EAAQna,GACtB,OAAOA,EAAImuB,MAAM,KAAK1rB,IAAI2rB,OAC5B,CAMO,SAASizC,EAAKxhE,GACnB,OAAQA,EAAU,IAAMA,EAAU,IAAMA,EAAU,EACpD,CAOO,SAASk6D,EAAiBl6D,EAAWwgD,GAC1C,MAAMnmC,EAAIra,EAAU,GACdwB,EAAIxB,EAAU,GACdyB,EAAIzB,EAAU,GAEpB,GAAIwgD,EAAS78B,aAAetJ,GAAKA,EAAImmC,EAASj9B,aAC5C,OAAO,EAET,MAAMxH,EAAYykC,EAASihB,iBAAiBpnD,GAC5C,OAAK0B,GAGEA,EAAUF,WAAWra,EAAGC,EACjC,2gBC3EO,SAASigE,EAAiBhlD,GAC/B,IAAI8jC,EAAW9jC,EAAW4jC,qBAK1B,OAJKE,IACHA,EAAWmhB,EAAoBjlD,GAC/BA,EAAW6jC,mBAAmBC,IAEzBA,CACT,CAQO,SAASlqB,EAAMkqB,EAAUxgD,EAAW0c,GACzC,MAAMrC,EAAIra,EAAU,GACdpH,EAAS4nD,EAASuP,mBAAmB/vD,GACrC42B,EAAmBmmC,EAAqBrgD,GAC9C,KAAK,IAAAgiB,oBAAmB9H,EAAkBh+B,GAAS,CACjD,MAAM49B,GAAa,IAAAxa,UAAS4a,GACtBH,EAAav0B,KAAKu5C,MACrB7kB,EAAiB,GAAKh+B,EAAO,IAAM49B,GAGtC,OADA59B,EAAO,IAAM49B,EAAaC,EACnB+pB,EAASwL,yBAAyBpzD,EAAQyhB,EACnD,CACA,OAAOra,CACT,CAWO,SAAS4hE,EAAgBhlE,EAAQ8mB,EAASyoC,EAAU9rB,GACzDA,OAAoBxiC,IAAXwiC,EAAuBA,EAAS,WAEzC,MAAMriB,EAAc6jD,EAAsBjlE,EAAQ8mB,EAASyoC,GAE3D,OAAO,IAAI,UAAS,CAClBvvD,OAAQA,EACR8xD,QAAQ,IAAAtuB,WAAUxjC,EAAQyjC,GAC1BriB,YAAaA,EACbmuC,SAAUA,GAEd,CAoBO,SAAS2Q,EAAU1iE,GACxB,MAAM0nE,EAAa1nE,GAAW,CAAC,EAEzBwC,EAASklE,EAAWllE,SAAU,IAAAlB,KAAc,aAAa2D,YAEzD0iE,EAAc,CAClBnlE,OAAQA,EACRxD,QAAS0oE,EAAW1oE,QACpB+yD,SAAU2V,EAAW3V,SACrBnuC,YAAa6jD,EACXjlE,EACAklE,EAAWp+C,QACXo+C,EAAW3V,SACX2V,EAAWpkD,gBAGf,OAAO,IAAI,UAASqkD,EACtB,CAYA,SAASF,EAAsBjlE,EAAQ8mB,EAASyoC,EAAUzuC,GACxDgG,OAAsB7lB,IAAZ6lB,EAAwBA,EAAU,EAAAs+C,iBAC5C7V,GAAW,IAAAC,aAAoBvuD,IAAbsuD,EAAyBA,EAAW,EAAAriC,mBAEtD,MAAM/rB,GAAS,IAAAD,WAAUlB,GACnB0I,GAAQ,IAAA0W,UAASpf,GAEvB8gB,EACEA,EAAgB,EACZA,EACAxb,KAAKmiB,IAAI/e,EAAQ6mD,EAAS,GAAIpuD,EAASouD,EAAS,IAEtD,MAAMtxD,EAAS6oB,EAAU,EACnB1F,EAAc,IAAIza,MAAM1I,GAC9B,IAAK,IAAIwf,EAAI,EAAGA,EAAIxf,IAAUwf,EAC5B2D,EAAY3D,GAAKqD,EAAgBxb,KAAKuiB,IAAI,EAAGpK,GAE/C,OAAO2D,CACT,CAWO,SAAS2jD,EAAoBjlD,EAAYgH,EAASyoC,EAAU9rB,GAEjE,OAAOuhC,EADQ7E,EAAqBrgD,GACLgH,EAASyoC,EAAU9rB,EACpD,CAQO,SAAS08B,EAAqBrgD,GAEnC,IAAI9f,GADJ8f,GAAa,IAAAhhB,KAAcghB,IACHrd,YACxB,IAAKzC,EAAQ,CACX,MAAMqlE,EACH,IAAM,EAAAr4C,gBAAA,QAA2BlN,EAAWmN,mBAC/CjtB,GAAS,IAAAsf,iBAAgB+lD,GAAOA,EAAMA,EAAMA,EAC9C,CACA,OAAOrlE,CACT,kbCrJA,MAAMslE,EAAe,CAAC,EAAG,EAAG,GAspB5B,QAzmBA,MAIE1oE,YAAYY,GAwBV,IAAI0jB,EACJ,GApBAlkB,KAAKR,aAA8ByE,IAApBzD,EAAQhB,QAAwBgB,EAAQhB,QAAU,EAMjEQ,KAAKmkB,aAAe3jB,EAAQ4jB,aAC5B,IAAAta,SACE,IAAAyoB,UACEvyB,KAAKmkB,cACL,SAAUsN,EAAGC,GACX,OAAOA,EAAID,CACb,IACA,GAEF,KAKGjxB,EAAQ+nE,QACX,IAAK,IAAIxnE,EAAI,EAAGC,EAAKhB,KAAKmkB,aAAaljB,OAAS,EAAGF,EAAIC,IAAMD,EAC3D,GAAKmjB,GAGH,GAAIlkB,KAAKmkB,aAAapjB,GAAKf,KAAKmkB,aAAapjB,EAAI,KAAOmjB,EAAY,CAClEA,OAAajgB,EACb,KACF,OALAigB,EAAalkB,KAAKmkB,aAAapjB,GAAKf,KAAKmkB,aAAapjB,EAAI,GAchEf,KAAKikB,YAAcC,EAMnBlkB,KAAK8pB,QAAU9pB,KAAKmkB,aAAaljB,OAAS,EAM1CjB,KAAKwoE,aAA6BvkE,IAAnBzD,EAAQs0D,OAAuBt0D,EAAQs0D,OAAS,KAM/D90D,KAAKyoE,SAAW,UACQxkE,IAApBzD,EAAQ+nE,UACVvoE,KAAKyoE,SAAWjoE,EAAQ+nE,SACxB,IAAAz+D,QAAO9J,KAAKyoE,SAASxnE,QAAUjB,KAAKmkB,aAAaljB,OAAQ,KAG3D,MAAM+B,EAASxC,EAAQwC,YAERiB,IAAXjB,GAAyBhD,KAAKwoE,SAAYxoE,KAAKyoE,WACjDzoE,KAAKwoE,SAAU,IAAAniC,YAAWrjC,KAG5B,IAAA8G,SACI9J,KAAKwoE,SAAWxoE,KAAKyoE,UAAczoE,KAAKwoE,UAAYxoE,KAAKyoE,SAC3D,IAOFzoE,KAAK0oE,WAAa,UACQzkE,IAAtBzD,EAAQmoE,YACV3oE,KAAK0oE,WAAaloE,EAAQmoE,WAC1B,IAAA7+D,QAAO9J,KAAK0oE,WAAWznE,QAAUjB,KAAKmkB,aAAaljB,OAAQ,KAO7DjB,KAAK4oE,eACkB3kE,IAArBzD,EAAQ+xD,SACJ/xD,EAAQ+xD,SACPvyD,KAAK0oE,WAEN,KADA,EAAAx4C,mBAEN,IAAApmB,SACI9J,KAAK4oE,WAAa5oE,KAAK0oE,YACtB1oE,KAAK4oE,YAAc5oE,KAAK0oE,WAC3B,IAOF1oE,KAAK8pC,aAAqB7lC,IAAXjB,EAAuBA,EAAS,KAM/ChD,KAAK6oE,gBAAkB,KAMvB7oE,KAAK8oE,SAAW,CAAC,EAAG,GAMpB9oE,KAAK+oE,WAAa,CAAC,EAAG,EAAG,EAAG,QAEN9kE,IAAlBzD,EAAQwoE,MACVhpE,KAAK6oE,gBAAkBroE,EAAQwoE,MAAMhgE,KAAI,SAAUgO,EAAMyJ,GACvD,MAAM0B,EAAY,IAAI,UACpB7Z,KAAKwkB,IAAI,EAAG9V,EAAK,IACjB1O,KAAKmiB,IAAIzT,EAAK,GAAK,GAAI,GACvB1O,KAAKwkB,IAAI,EAAG9V,EAAK,IACjB1O,KAAKmiB,IAAIzT,EAAK,GAAK,GAAI,IAEzB,GAAIhU,EAAQ,CACV,MAAMimE,EAAsBjpE,KAAKkzD,0BAA0BlwD,EAAQyd,GACnE0B,EAAUN,KAAOvZ,KAAKmiB,IAAIw+C,EAAoBpnD,KAAMM,EAAUN,MAC9DM,EAAUL,KAAOxZ,KAAKwkB,IAAIm8C,EAAoBnnD,KAAMK,EAAUL,MAC9DK,EAAUJ,KAAOzZ,KAAKmiB,IAAIw+C,EAAoBlnD,KAAMI,EAAUJ,MAC9DI,EAAUH,KAAO1Z,KAAKwkB,IAAIm8C,EAAoBjnD,KAAMG,EAAUH,KAChE,CACA,OAAOG,CACT,GAAGniB,MACMgD,GACThD,KAAKkpE,qBAAqBlmE,EAE9B,CAUAmmE,iBAAiBnmE,EAAQzD,EAAMyP,GAC7B,MAAMmT,EAAYniB,KAAKkzD,0BAA0BlwD,EAAQzD,GACzD,IAAK,IAAIwB,EAAIohB,EAAUN,KAAM7gB,EAAKmhB,EAAUL,KAAM/gB,GAAKC,IAAMD,EAC3D,IAAK,IAAIwmB,EAAIpF,EAAUJ,KAAMyF,EAAKrF,EAAUH,KAAMuF,GAAKC,IAAMD,EAC3DvY,EAAS,CAACzP,EAAMwB,EAAGwmB,GAGzB,CASAqsC,gCACExtD,EACA4I,EACAo6D,EACAC,GAEA,IAAIlnD,EAAWva,EAAGC,EACdyhE,EAAkB,KAClB7oD,EAAIra,EAAU,GAAK,EAOvB,IANyB,IAArBpG,KAAKikB,aACPrc,EAAIxB,EAAU,GACdyB,EAAIzB,EAAU,IAEdkjE,EAAkBtpE,KAAK60D,mBAAmBzuD,EAAWijE,GAEhD5oD,GAAKzgB,KAAKR,SAAS,CAYxB,GAXyB,IAArBQ,KAAKikB,aACPrc,EAAIU,KAAKijB,MAAM3jB,EAAI,GACnBC,EAAIS,KAAKijB,MAAM1jB,EAAI,GACnBsa,GAAY,IAAAG,gBAAwB1a,EAAGA,EAAGC,EAAGA,EAAGuhE,IAEhDjnD,EAAYniB,KAAKkzD,0BACfoW,EACA7oD,EACA2oD,GAGAp6D,EAASyR,EAAG0B,GACd,OAAO,IAEP1B,CACJ,CACA,OAAO,CACT,CAOAhb,YACE,OAAOzF,KAAK8pC,OACd,CAOAngB,aACE,OAAO3pB,KAAK8pB,OACd,CAOAC,aACE,OAAO/pB,KAAKR,OACd,CAQA8yD,UAAU7xC,GACR,OAAIzgB,KAAKwoE,QACAxoE,KAAKwoE,QAEPxoE,KAAKyoE,SAAShoD,EACvB,CAQA7a,cAAc6a,GACZ,OAAOzgB,KAAKmkB,aAAa1D,EAC3B,CAOA2J,iBACE,OAAOpqB,KAAKmkB,YACd,CAQAuvC,2BAA2BttD,EAAWgjE,EAAeC,GACnD,GAAIjjE,EAAU,GAAKpG,KAAK8pB,QAAS,CAC/B,GAAyB,IAArB9pB,KAAKikB,YAAmB,CAC1B,MAAMpC,EAAsB,EAAfzb,EAAU,GACjB2b,EAAsB,EAAf3b,EAAU,GACvB,OAAO,IAAAkc,gBACLT,EACAA,EAAO,EACPE,EACAA,EAAO,EACPqnD,EAEJ,CACA,MAAME,EAAkBtpE,KAAK60D,mBAC3BzuD,EACAijE,GAAcrpE,KAAK+oE,YAErB,OAAO/oE,KAAKkzD,0BACVoW,EACAljE,EAAU,GAAK,EACfgjE,EAEJ,CACA,OAAO,IACT,CAQAG,6BAA6BnjE,EAAWqa,EAAG2oD,GACzC,GAAI3oD,EAAIzgB,KAAK8pB,SAAWrJ,EAAIzgB,KAAKR,QAC/B,OAAO,KAGT,MAAMgqE,EAAapjE,EAAU,GACvBqjE,EAAarjE,EAAU,GACvBsjE,EAAatjE,EAAU,GAE7B,GAAIqa,IAAM+oD,EACR,OAAO,IAAAlnD,gBACLmnD,EACAC,EACAD,EACAC,EACAN,GAIJ,GAAIppE,KAAKikB,YAAa,CACpB,MAAM0zB,EAASrvC,KAAKuiB,IAAI7qB,KAAKikB,YAAaxD,EAAI+oD,GACxC3nD,EAAOvZ,KAAKijB,MAAMk+C,EAAa9xB,GAC/B51B,EAAOzZ,KAAKijB,MAAMm+C,EAAa/xB,GACrC,GAAIl3B,EAAI+oD,EACN,OAAO,IAAAlnD,gBAAwBT,EAAMA,EAAME,EAAMA,EAAMqnD,GAGzD,MAAMtnD,EAAOxZ,KAAKijB,MAAMosB,GAAU8xB,EAAa,IAAM,EAC/CznD,EAAO1Z,KAAKijB,MAAMosB,GAAU+xB,EAAa,IAAM,EACrD,OAAO,IAAApnD,gBAAwBT,EAAMC,EAAMC,EAAMC,EAAMonD,EACzD,CAEA,MAAME,EAAkBtpE,KAAK60D,mBAAmBzuD,EAAWpG,KAAK+oE,YAChE,OAAO/oE,KAAKkzD,0BAA0BoW,EAAiB7oD,EAAG2oD,EAC5D,CASAO,mBAAmBlpD,EAAG0B,EAAWknD,GAC/B,MAAMvU,EAAS90D,KAAKsyD,UAAU7xC,GACxBxd,EAAajD,KAAK4F,cAAc6a,GAChC8xC,GAAW,IAAAC,QAAOxyD,KAAKyyD,YAAYhyC,GAAIzgB,KAAK8oE,UAC5CjnD,EAAOizC,EAAO,GAAK3yC,EAAUN,KAAO0wC,EAAS,GAAKtvD,EAClD6e,EAAOgzC,EAAO,IAAM3yC,EAAUL,KAAO,GAAKywC,EAAS,GAAKtvD,EACxD8e,EAAO+yC,EAAO,GAAK3yC,EAAUJ,KAAOwwC,EAAS,GAAKtvD,EAClD+e,EAAO8yC,EAAO,IAAM3yC,EAAUH,KAAO,GAAKuwC,EAAS,GAAKtvD,EAC9D,OAAO,IAAAqf,gBAAeT,EAAME,EAAMD,EAAME,EAAMqnD,EAChD,CASAnW,0BAA0BlwD,EAAQyd,EAAG2oD,GACnCppE,KAAK4pE,uBAAuB5mE,EAAO,GAAIA,EAAO,GAAIyd,GAAG,EAAO6nD,GAC5D,MAAMzmD,EAAOymD,EAAa,GACpBvmD,EAAOumD,EAAa,GAC1BtoE,KAAK4pE,uBAAuB5mE,EAAO,GAAIA,EAAO,GAAIyd,GAAG,EAAM6nD,GAC3D,MAAMxmD,EAAOwmD,EAAa,GACpBtmD,EAAOsmD,EAAa,GAC1B,OAAO,IAAAhmD,gBAAwBT,EAAMC,EAAMC,EAAMC,EAAMonD,EACzD,CAMAjT,mBAAmB/vD,GACjB,MAAM0uD,EAAS90D,KAAKsyD,UAAUlsD,EAAU,IAClCnD,EAAajD,KAAK4F,cAAcQ,EAAU,IAC1CmsD,GAAW,IAAAC,QAAOxyD,KAAKyyD,YAAYrsD,EAAU,IAAKpG,KAAK8oE,UAC7D,MAAO,CACLhU,EAAO,IAAM1uD,EAAU,GAAK,IAAOmsD,EAAS,GAAKtvD,EACjD6xD,EAAO,IAAM1uD,EAAU,GAAK,IAAOmsD,EAAS,GAAKtvD,EAErD,CAUA4xD,mBAAmBzuD,EAAWijE,GAC5B,MAAMvU,EAAS90D,KAAKsyD,UAAUlsD,EAAU,IAClCnD,EAAajD,KAAK4F,cAAcQ,EAAU,IAC1CmsD,GAAW,IAAAC,QAAOxyD,KAAKyyD,YAAYrsD,EAAU,IAAKpG,KAAK8oE,UACvDjnD,EAAOizC,EAAO,GAAK1uD,EAAU,GAAKmsD,EAAS,GAAKtvD,EAChD8e,EAAO+yC,EAAO,IAAM1uD,EAAU,GAAK,GAAKmsD,EAAS,GAAKtvD,EACtD6e,EAAOD,EAAO0wC,EAAS,GAAKtvD,EAC5B+e,EAAOD,EAAOwwC,EAAS,GAAKtvD,EAClC,OAAO,IAAAqf,gBAAeT,EAAME,EAAMD,EAAME,EAAMqnD,EAChD,CAaAQ,kCAAkC56D,EAAYhM,EAAY6mE,GACxD,OAAO9pE,KAAK+pE,gCACV96D,EAAW,GACXA,EAAW,GACXhM,GACA,EACA6mE,EAEJ,CAeAC,gCACEniE,EACAC,EACA5E,EACA+mE,EACAF,GAEA,MAAMrpD,EAAIzgB,KAAKmyD,kBAAkBlvD,GAC3Bk5B,EAAQl5B,EAAajD,KAAK4F,cAAc6a,GACxCq0C,EAAS90D,KAAKsyD,UAAU7xC,GACxB8xC,GAAW,IAAAC,QAAOxyD,KAAKyyD,YAAYhyC,GAAIzgB,KAAK8oE,UAElD,IAAIW,EAActtC,GAASv0B,EAAIktD,EAAO,IAAO7xD,EAAasvD,EAAS,GAC/DmX,EAAcvtC,GAAS24B,EAAO,GAAKjtD,GAAM5E,EAAasvD,EAAS,GAUnE,OARIyX,GACFP,GAAa,IAAA5nB,MAAK4nB,EAtfP,GAsf+B,EAC1CC,GAAa,IAAA7nB,MAAK6nB,EAvfP,GAuf+B,IAE1CD,GAAa,IAAAl+C,OAAMk+C,EAzfR,GA0fXC,GAAa,IAAAn+C,OAAMm+C,EA1fR,KA6fN,IAAApnD,gBAAwB7B,EAAGgpD,EAAYC,EAAYI,EAC5D,CAiBAF,uBAAuBhiE,EAAGC,EAAG4Y,EAAGupD,EAA2BF,GACzD,MAAMhV,EAAS90D,KAAKsyD,UAAU7xC,GACxBxd,EAAajD,KAAK4F,cAAc6a,GAChC8xC,GAAW,IAAAC,QAAOxyD,KAAKyyD,YAAYhyC,GAAIzgB,KAAK8oE,UAElD,IAAIW,GAAc7hE,EAAIktD,EAAO,IAAM7xD,EAAasvD,EAAS,GACrDmX,GAAc5U,EAAO,GAAKjtD,GAAK5E,EAAasvD,EAAS,GAUzD,OARIyX,GACFP,GAAa,IAAA5nB,MAAK4nB,EAxhBP,GAwhB+B,EAC1CC,GAAa,IAAA7nB,MAAK6nB,EAzhBP,GAyhB+B,IAE1CD,GAAa,IAAAl+C,OAAMk+C,EA3hBR,GA4hBXC,GAAa,IAAAn+C,OAAMm+C,EA5hBR,KA+hBN,IAAApnD,gBAAwB7B,EAAGgpD,EAAYC,EAAYI,EAC5D,CAUA1X,yBAAyBnjD,EAAYwR,EAAGqpD,GACtC,OAAO9pE,KAAK4pE,uBACV36D,EAAW,GACXA,EAAW,GACXwR,GACA,EACAqpD,EAEJ,CAMAG,uBAAuB7jE,GACrB,OAAOpG,KAAKmkB,aAAa/d,EAAU,GACrC,CAUAqsD,YAAYhyC,GACV,OAAIzgB,KAAK4oE,UACA5oE,KAAK4oE,UAEP5oE,KAAK0oE,WAAWjoD,EACzB,CAMAonD,iBAAiBpnD,GACf,OAAKzgB,KAAK6oE,gBAKH7oE,KAAK6oE,gBAAgBpoD,GAJnBzgB,KAAK8pC,QACR9pC,KAAKkzD,0BAA0BlzD,KAAK8pC,QAASrpB,GAC7C,IAGR,CAmBA0xC,kBAAkBlvD,EAAYinE,GAC5B,MAAMzpD,GAAI,IAAA2K,mBACRprB,KAAKmkB,aACLlhB,EACAinE,GAAiB,GAEnB,OAAO,IAAA5+C,OAAM7K,EAAGzgB,KAAKR,QAASQ,KAAK8pB,QACrC,CAQAypC,4BAA4BntD,EAAWktD,GACrC,OAAO,IAAAjhB,sBACLihB,EACA,EACAA,EAASryD,OACT,EACAjB,KAAK60D,mBAAmBzuD,GAE5B,CAMA8iE,qBAAqBlmE,GACnB,MAAM/B,EAASjB,KAAKmkB,aAAaljB,OAC3BkpE,EAAiB,IAAIxgE,MAAM1I,GACjC,IAAK,IAAIwf,EAAIzgB,KAAKR,QAASihB,EAAIxf,IAAUwf,EACvC0pD,EAAe1pD,GAAKzgB,KAAKkzD,0BAA0BlwD,EAAQyd,GAE7DzgB,KAAK6oE,gBAAkBsB,CACzB,oHC9pBK,MAAM/B,EAAmB,GAMnBl4C,EAAoB,mTCF1B,SAASk6C,EAAmBtuC,EAAU8qB,GAC3C,MAAMyjB,EAAS,SACTC,EAAS,SACTC,EAAS,SACTC,EAAa,UACnB,OAAO,SAOKpkE,EAAWlD,EAAY4f,GAC/B,GAAK1c,EAGL,OAAO01B,EACJC,QAAQsuC,EAAQjkE,EAAU,GAAG2H,YAC7BguB,QAAQuuC,EAAQlkE,EAAU,GAAG2H,YAC7BguB,QAAQwuC,EAAQnkE,EAAU,GAAG2H,YAC7BguB,QAAQyuC,GAAY,WACnB,MAAM/pD,EAAIra,EAAU,GACdqkE,EAAQ7jB,EAASihB,iBAAiBpnD,IACxC,IAAA3W,QAAO2gE,EAAO,IAEd,OADUA,EAAMvmE,YAAckC,EAAU,GAAK,GACpC2H,UACX,GAEN,CACF,CAOO,SAASi1D,EAAoB0H,EAAW9jB,GAC7C,MAAMhoC,EAAM8rD,EAAUzpE,OAChB0pE,EAAmB,IAAIhhE,MAAMiV,GACnC,IAAK,IAAI7d,EAAI,EAAGA,EAAI6d,IAAO7d,EACzB4pE,EAAiB5pE,GAAKqpE,EAAmBM,EAAU3pE,GAAI6lD,GAEzD,OAAOgkB,EAA2BD,EACpC,CAMO,SAASC,EAA2BD,GACzC,OAAgC,IAA5BA,EAAiB1pE,OACZ0pE,EAAiB,GAEnB,SAOKvkE,EAAWlD,EAAY4f,GAC/B,IAAK1c,EACH,OAEF,MAAM4iB,GAAI,UAAc5iB,GAClB/F,GAAQ,IAAA0mB,QAAOiC,EAAG2hD,EAAiB1pE,QACzC,OAAO0pE,EAAiBtqE,GAAO+F,EAAWlD,EAAY4f,EAE1D,CACF,CAQO,SAAS+nD,EAAoBzkE,EAAWlD,EAAY4f,GAE3D,CAMO,SAASigD,EAAUhC,GACxB,MAAMhiE,EAAO,GACb,IAAI0+B,EAAQ,sBAAsBpJ,KAAK0sC,GACvC,GAAItjC,EAAO,CAET,MAAMqtC,EAAgBrtC,EAAM,GAAGgb,WAAW,GACpCsyB,EAAettC,EAAM,GAAGgb,WAAW,GACzC,IAAID,EACJ,IAAKA,EAAWsyB,EAAetyB,GAAYuyB,IAAgBvyB,EACzDz5C,EAAK0C,KAAKs/D,EAAIhlC,QAAQ0B,EAAM,GAAI9G,OAAOq0C,aAAaxyB,KAEtD,OAAOz5C,CACT,CAEA,GADA0+B,EAAQ,kBAAkBpJ,KAAK0sC,GAC3BtjC,EAAO,CAET,MAAMwtC,EAAO3xD,SAASmkB,EAAM,GAAI,IAChC,IAAK,IAAI18B,EAAIuY,SAASmkB,EAAM,GAAI,IAAK18B,GAAKkqE,EAAMlqE,IAC9ChC,EAAK0C,KAAKs/D,EAAIhlC,QAAQ0B,EAAM,GAAI18B,EAAEgN,aAEpC,OAAOhP,CACT,CAEA,OADAA,EAAK0C,KAAKs/D,GACHhiE,CACT,wXC5FA,MAAMmsE,EAAO,IAAIvhE,MAAM,GAMhB,SAASgB,IACd,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EACzB,CAOO,SAASwgE,EAAMr/C,GACpB,OAAOtpB,EAAIspB,EAAW,EAAG,EAAG,EAAG,EAAG,EAAG,EACvC,CASO,SAASs/C,EAASC,EAAYC,GACnC,MAAMC,EAAKF,EAAW,GAChBG,EAAKH,EAAW,GAChBhI,EAAKgI,EAAW,GAChBI,EAAKJ,EAAW,GAChBK,EAAKL,EAAW,GAChBM,EAAKN,EAAW,GAChBO,EAAKN,EAAW,GAChBO,EAAKP,EAAW,GAChBhI,EAAKgI,EAAW,GAChBQ,EAAKR,EAAW,GAChBS,EAAKT,EAAW,GAChBU,EAAKV,EAAW,GAStB,OAPAD,EAAW,GAAKE,EAAKK,EAAKvI,EAAKwI,EAC/BR,EAAW,GAAKG,EAAKI,EAAKH,EAAKI,EAC/BR,EAAW,GAAKE,EAAKjI,EAAKD,EAAKyI,EAC/BT,EAAW,GAAKG,EAAKlI,EAAKmI,EAAKK,EAC/BT,EAAW,GAAKE,EAAKQ,EAAK1I,EAAK2I,EAAKN,EACpCL,EAAW,GAAKG,EAAKO,EAAKN,EAAKO,EAAKL,EAE7BN,CACT,CAaO,SAAS7oE,EAAIspB,EAAW2F,EAAGC,EAAG8pC,EAAGlnC,EAAG0mC,EAAGr5D,GAO5C,OANAmqB,EAAU,GAAK2F,EACf3F,EAAU,GAAK4F,EACf5F,EAAU,GAAK0vC,EACf1vC,EAAU,GAAKwI,EACfxI,EAAU,GAAKkvC,EACflvC,EAAU,GAAKnqB,EACRmqB,CACT,CAQO,SAASmgD,EAAaZ,EAAYC,GAOvC,OANAD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GACpBD,CACT,CAWO,SAASh6D,EAAMya,EAAW7c,GAC/B,MAAMrH,EAAIqH,EAAW,GACfpH,EAAIoH,EAAW,GAGrB,OAFAA,EAAW,GAAK6c,EAAU,GAAKlkB,EAAIkkB,EAAU,GAAKjkB,EAAIikB,EAAU,GAChE7c,EAAW,GAAK6c,EAAU,GAAKlkB,EAAIkkB,EAAU,GAAKjkB,EAAIikB,EAAU,GACzD7c,CACT,CAQO,SAAS2Z,EAAOkD,EAAWoQ,GAChC,MAAMjT,EAAM3gB,KAAK2gB,IAAIiT,GACfhT,EAAM5gB,KAAK4gB,IAAIgT,GACrB,OAAOkvC,EAASt/C,EAAWtpB,EAAI0oE,EAAMjiD,EAAKC,GAAMA,EAAKD,EAAK,EAAG,GAC/D,CASO,SAASkT,EAAMrQ,EAAWlkB,EAAGC,GAClC,OAAOujE,EAASt/C,EAAWtpB,EAAI0oE,EAAMtjE,EAAG,EAAG,EAAGC,EAAG,EAAG,GACtD,CASO,SAASqkE,EAAU7sE,EAAQuI,EAAGC,GACnC,OAAOrF,EAAInD,EAAQuI,EAAG,EAAG,EAAGC,EAAG,EAAG,EACpC,CASO,SAASsjC,EAAUrf,EAAW1jB,EAAIC,GACvC,OAAO+iE,EAASt/C,EAAWtpB,EAAI0oE,EAAM,EAAG,EAAG,EAAG,EAAG9iE,EAAIC,GACvD,CAeO,SAASujC,EAAQ9f,EAAWgoB,EAAKC,EAAKhJ,EAAIC,EAAI9O,EAAO8X,EAAKC,GAC/D,MAAM/qB,EAAM5gB,KAAK4gB,IAAIgT,GACfjT,EAAM3gB,KAAK2gB,IAAIiT,GAOrB,OANApQ,EAAU,GAAKif,EAAK9hB,EACpB6C,EAAU,GAAKkf,EAAK9hB,EACpB4C,EAAU,IAAMif,EAAK7hB,EACrB4C,EAAU,GAAKkf,EAAK/hB,EACpB6C,EAAU,GAAKkoB,EAAMjJ,EAAK9hB,EAAMgrB,EAAMlJ,EAAK7hB,EAAM4qB,EACjDhoB,EAAU,GAAKkoB,EAAMhJ,EAAK9hB,EAAM+qB,EAAMjJ,EAAK/hB,EAAM8qB,EAC1CjoB,CACT,CAgBO,SAASqgD,EAAoBr4B,EAAKC,EAAKhJ,EAAIC,EAAI9O,EAAO8X,EAAKC,GAChE,OAAOlmC,EAAS69B,EAtLT,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAsLWkI,EAAKC,EAAKhJ,EAAIC,EAAI9O,EAAO8X,EAAKC,GAClE,CAOO,SAASm4B,EAAOhtE,GACrB,OAAOmvD,EAAYnvD,EAAQA,EAC7B,CASO,SAASmvD,EAAYlvD,EAAQD,GAClC,MAAMitE,EAAMC,EAAYltE,IACxB,IAAA0K,QAAe,IAARuiE,EAAW,IAElB,MAAM56C,EAAIryB,EAAO,GACXsyB,EAAItyB,EAAO,GACXo8D,EAAIp8D,EAAO,GACXk1B,EAAIl1B,EAAO,GACX47D,EAAI57D,EAAO,GACXuC,EAAIvC,EAAO,GASjB,OAPAC,EAAO,GAAKi1B,EAAI+3C,EAChBhtE,EAAO,IAAMqyB,EAAI26C,EACjBhtE,EAAO,IAAMm8D,EAAI6Q,EACjBhtE,EAAO,GAAKoyB,EAAI46C,EAChBhtE,EAAO,IAAMm8D,EAAI75D,EAAI2yB,EAAI0mC,GAAKqR,EAC9BhtE,EAAO,KAAOoyB,EAAI9vB,EAAI+vB,EAAIspC,GAAKqR,EAExBhtE,CACT,CAOO,SAASitE,EAAYnrB,GAC1B,OAAOA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,EACxC,CAMA,IAAIorB,EAQG,SAASx+D,EAASozC,GACvB,MAAMqrB,EAAkB,UAAYrrB,EAAI9jB,KAAK,MAAQ,IACrD,GAAI,EAAAa,wBACF,OAAOsuC,EAET,MAAMrtC,EACJotC,IAAuBA,EAAqBnjE,SAASgC,cAAc,QAErE,OADA+zB,EAAK5zB,MAAMugB,UAAY0gD,EAChBrtC,EAAK5zB,MAAMugB,SACpB,yCCzRO,SAASpmB,IACd,MAAM,IAAI/F,MAAM,iCAClB,2DAOA,IAAI8sE,EAAc,EAWX,SAAS50D,EAAOka,GACrB,OAAOA,EAAI26C,SAAW36C,EAAI26C,OAAS/1C,SAAS81C,GAC9C,CAMO,MAAME,EAAU,UClCnBC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB7oE,IAAjB8oE,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CAGjDE,QAAS,CAAC,GAOX,OAHAE,EAAoBJ,GAAUG,EAAQA,EAAOD,QAASH,GAG/CI,EAAOD,OACf,CCrBAH,EAAoBv4C,EAAI,CAAC04C,EAASG,KACjC,IAAI,IAAI5mE,KAAO4mE,EACXN,EAAoBO,EAAED,EAAY5mE,KAASsmE,EAAoBO,EAAEJ,EAASzmE,IAC5E8U,OAAO25B,eAAeg4B,EAASzmE,EAAK,CAAE8mE,YAAY,EAAMvrE,IAAKqrE,EAAW5mE,IAE1E,ECNDsmE,EAAoBO,EAAI,CAACr7C,EAAKu7C,IAAUjyD,OAAOhD,UAAUsF,eAAeqkB,KAAKjQ,EAAKu7C,GCClFT,EAAoB14C,EAAK64C,IACH,oBAAXO,QAA0BA,OAAOC,aAC1CnyD,OAAO25B,eAAeg4B,EAASO,OAAOC,YAAa,CAAE7xD,MAAO,WAE7DN,OAAO25B,eAAeg4B,EAAS,aAAc,CAAErxD,OAAO,GAAO,+HCM9D,YATI,WACI,IAAIqqD,EAAW58D,SAASqkE,iBAAiB,mBACzCl4C,QAAQ5T,IAAIqkD,GACZ,IAAK,IAAIjlE,EAAI,EAAGA,EAAIilE,EAAS/kE,OAAQF,IACjC,IAAI,UAAailE,EAASjlE,GAElC","sources":["webpack:///../Resources/Private/TypeScript/MapProvider/OpenLayerMap.ts","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/Image.js","webpack:///./node_modules/ol/ImageBase.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/TileRange.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/console.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/control/defaults.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/events/Target.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/interaction/defaults.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/layer/BaseTile.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/renderer/Composite.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/source/Source.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/string.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/util.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///../Resources/Private/TypeScript/MapCreator.ts"],"sourcesContent":["import Map from 'ol/Map';\nimport Tile from 'ol/layer/Tile';\nimport View from 'ol/View';\nimport XYZSource from 'ol/source/XYZ';\nimport { transformExtent, fromLonLat } from 'ol/proj';\nvar OpenLayerMap = /** @class */ (function () {\n    function OpenLayerMap(element) {\n        var osmSource = new XYZSource({\n            attributions: '&#169; ' +\n                '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n                'contributors.',\n            urls: [\n                '/tile-proxy/?provider=osm&z={z}&x={x}&y={y}&s=a',\n                '/tile-proxy/?provider=osm&z={z}&x={x}&y={y}&s=b',\n                '/tile-proxy/?provider=osm&z={z}&x={x}&y={y}&s=c',\n            ]\n        });\n        var extent = transformExtent([11.86, 51.41, 12.07, 51.55], 'EPSG:4326', 'EPSG:3857');\n        var center = fromLonLat([11.940057754516602, 51.4974250793457]);\n        var map = new Map({\n            layers: [\n                new Tile({\n                    source: osmSource\n                })\n            ],\n            target: element,\n            view: new View({\n                center: center,\n                zoom: 12,\n                minZoom: 14\n            })\n        });\n    }\n    return OpenLayerMap;\n}());\nexport default OpenLayerMap;\n","/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n  69: '`width` or `height` cannot be provided together with `scale`',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n  let i;\n  if (direction > 0) {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n  } else if (direction < 0) {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n  } else {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] == target) {\n        return i;\n      } else if (arr[i] < target) {\n        if (typeof direction === 'function') {\n          if (direction(target, arr[i - 1], arr[i]) > 0) {\n            return i - 1;\n          }\n          return i;\n        } else if (arr[i - 1] - target < target - arr[i]) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    } else if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    } else if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link module:ol/Map~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../Map.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, tempExtent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.2.2';\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import OpenLayerMap from \"./MapProvider/OpenLayerMap\";\nvar MapCreator = /** @class */ (function () {\n    function MapCreator() {\n        var elements = document.querySelectorAll('.tile_proxy_map');\n        console.log(elements);\n        for (var i = 0; i < elements.length; i++) {\n            new OpenLayerMap(elements[i]);\n        }\n    }\n    return MapCreator;\n}());\nexport default new MapCreator();\n"],"names":["element","osmSource","attributions","urls","center","transformExtent","fromLonLat","layers","source","target","view","zoom","minZoom","messages","AssertionError","Error","constructor","code","message","super","this","name","Property","CollectionEvent","type","index","Collection","array","options","on","once","un","unique_","unique","array_","i","ii","length","assertUnique_","updateLength_","clear","getLength","pop","extend","arr","push","forEach","f","getArray","item","get","insertAt","elem","splice","dispatchEvent","removeAt","n","remove","prev","setAt","set","except","ADD","REMOVE","disposed","dispose","disposeInternal","ImageWrapper","extent","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","src_","image_","Image","unlisten_","state","imageLoadFunction_","getImage","handleImageError_","unlistenImage_","changed","handleImageLoad_","undefined","getHeight","height","load","listenImage","bind","setImage","image","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","listenOnce","IMAGE_DECODE","decode","then","catch","error","unlistenByKey","ImageBase","pixelRatio_","getExtent","abstract","getPixelRatio","getResolution","getState","IDLE","LOADING","LOADED","ERROR","EMPTY","ImageTile","tileCoord","tileLoadFunction","crossOrigin_","key","tileLoadFunction_","ctx","createCanvasContext2D","fillStyle","fillRect","canvas","getBlankImage","naturalWidth","naturalHeight","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","begin","update","x","y","Date","now","end","lastIndex","firstIndex","duration","dx","dy","Math","atan2","sqrt","getDistance","getAngle","removeLayerMapProperty","layer","setMapInternal","getLayers","setLayerMapProperty","map","Map","optionsInternal","keyboardEventTarget","document","getElementById","values","layerGroup","controls","interactions","overlays","Array","isArray","slice","assert","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","DEVICE_PIXEL_RATIO","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","create","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","createElement","className","window","style","position","overflow","width","overlayContainer_","zIndex","pointerEvents","appendChild","overlayContainerStopEvent_","mapBrowserEventHandler_","moveTolerance_","moveTolerance","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","onFocusOnly","overlays_","overlayIdIndex_","renderer_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","addChangeListener","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","setProperties","viewOptions","setView","addEventListener","event","setMap","addOverlayInternal_","id","getId","toString","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","setTarget","forEachFeatureAtPixel","pixel","callback","coordinate","getCoordinateFromPixelInternal","hitTolerance","layerFilter","TRUE","checkWrapped","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","getAllLayers","addLayersFrom","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","getCoordinateFromPixel","getEventPixel","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","viewportSize","getSize","scaleX","scaleY","eventPosition","changedTouches","clientX","left","clientY","top","getTarget","getTargetElement","toUserCoordinate","getView","getProjection","frameState","apply","pixelToCoordinateTransform","getOverlayById","setLayers","group","collection","getLoadingOrNotReady","layerStatesArray","getLayerStatesArray","visible","renderer","getRenderer","ready","getSource","loading","getPixelFromCoordinate","viewCoordinate","fromUserCoordinate","getPixelFromCoordinateInternal","coordinateToPixelTransform","getViewport","getOverlayContainer","getOverlayContainerStopEvent","getOwnerDocument","targetElement","ownerDocument","tile","tileSourceKey","tileCenter","tileResolution","browserEvent","mapBrowserEvent","handleMapBrowserEvent","originalEvent","eventType","doc","rootNode","getRootNode","contains","documentElement","interactionsArray","getMap","getActive","handleEvent","propagationStopped","handlePostRender","tileQueue","isEmpty","maxTotalLoading","maxNewLoads","hints","viewHints","lowOnFrameBudget","time","getTilesLoading","reprioritize","loadMoreTiles","animate","hasListener","dispatchRenderEvent","postRenderFunctions","getAnimating","resolveConstraints","render","removeEventListener","removeNode","unobserve","ShadowRoot","host","PASSIVE_EVENT_LISTENERS","passive","listen","observe","clearTimeout","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","GroupEvent","handleLayerRemove_","isRendered","renderFrame_","renderSync","redrawText","layerStates","hasRenderer","handleFontsChanged","requestAnimationFrame","removeControl","removeInteraction","removeLayer","removeOverlay","size","previousFrameState","hasArea","isDef","getHints","viewState","declutterTree","getForViewAndSize","rotation","layerIndex","usedTiles","wantedTiles","mapId","getUid","renderTargets","nextCenter","nextResolution","isNaN","nextRotation","nextExtent","renderFrame","prototype","equals","createOrUpdateEmpty","clone","getCount","setTimeout","setLayerGroup","oldLayerGroup","setSize","computedStyle","getComputedStyle","offsetWidth","parseFloat","offsetHeight","getClientRects","warn","oldSize","parseInt","setViewportSize","MapBrowserEvent","dragging","activePointers","pixel_","coordinate_","preventDefault","stopPropagation","MapBrowserEventHandler","map_","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","down_","activePointers_","trackedTouches_","element_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","updateActivePointers_","pointerId","Object","handlePointerUp_","defaultPrevented","isMouseActionButton_","button","property","value","VOID","handlePointerMove_","isMoving_","cancelable","abs","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapEvent","POSTRENDER","MOVESTART","MOVEEND","LOADSTART","LOADEND","LAYERGROUP","SIZE","TARGET","VIEW","ObjectEvent","oldValue","BaseObject","values_","hasOwnProperty","getKeys","keys","getProperties","assign","hasProperties","notify","listener","removeChangeListener","silent","applyProperties","unset","PROPERTYCHANGE","Observable","revision_","getRevision","onInternal","len","onceInternal","ol_key","unInternal","unByKey","Tile","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getKey","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","start","delta","easeIn","inTransition","endTransition","TileCache","expireCache","canExpireCache","peekLast","pruneExceptNewestZ","peekFirstKey","z","fromKey","TileQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","enqueue","added","tileKey","newLoads","dequeue","DROP","deltaX","deltaY","log","TileRange","minX","maxX","minY","maxY","containsXY","containsTileRange","tileRange","getWidth","intersects","createOrUpdate","DEFAULT_MIN_ZOOM","View","hints_","animations_","updateAnimationKey_","projection_","createProjection","projection","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","disableCoordinateWarning","fromUserExtent","applyOptions_","properties","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","maxResolution","minResolution_","minResolution","zoomFactor_","zoomFactor","resolutions_","resolutions","padding_","padding","minZoom_","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","oldPadding","getCenter","newPadding","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","var_args","args","arguments","anchor","animateInternal","animationCount","animationCallback","series","animation","complete","easing","inAndOut","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","modulo","PI","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","cancelAnimations","j","jj","NaN","more","seriesComplete","elapsed","fraction","progress","x0","y0","x1","y1","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","currentCenter","rotate","add","currentResolution","w","h","cos","sin","getConstraints","getConstrainResolution","calculateExtent","calculateExtentInternal","toUserExtent","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","maxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","constrainResolution","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","xResolution","yResolution","max","getResolutionForValueFunction","power","getConstrainedResolution","pow","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","offset","nearest","linearFindNearest","baseLevel","clamp","floor","fit","geometryOrExtent","geometry","getType","userProjection","getUserProjection","transform","fitInternal","rotatedExtentForGeometry","cosAngle","sinAngle","coords","getFlatCoordinates","stride","getStride","minRotX","Infinity","minRotY","maxRotX","maxRotY","rotX","rotY","min","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","ratio","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","direction","easeOut","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","returnValue","smooth","smoothExtentConstraint","createExtent","constrainOnlyCenter","multiWorld","isGlobal","smoothResolutionConstraint","showFullExtent","projExtent","createSnapToResolutions","createMinMaxResolution","defaultMaxResolution","METERS_PER_UNIT","getMetersPerUnit","DEFAULT_TILE_SIZE","defaultMinResolution","createSnapToPower","enableRotation","constrainRotation","createSnapToZero","createSnapToN","disable","ANIMATING","INTERACTING","CENTER","RESOLUTION","ROTATION","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","found","a","b","reverseSubArray","tmp","data","extension","obj","indexOf","arr1","arr2","len1","stableSort","compareFnc","sort","isSorted","func","strict","compare","every","currentVal","res","assertion","errorCode","onlyCenter","viewWidth","viewHeight","shiftX","shiftY","none","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromNamed","el","body","rgb","removeChild","fromString","cache","cacheSize","s","r","g","exec","d","hasAlpha","substr","startsWith","split","Number","normalize","fromStringInternal_","asArray","round","isStringColor","test","levels","info","level","setLevel","l","console","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","String","title","handleClick_","cssClasses","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","layerState","inView","attributionGetter","getAttributions","getAttributionsCollapsible","setCollapsible","updateElement_","display","removeChildren","innerHTML","handleToggle_","classList","toggle","replaceNode","getCollapsible","setCollapsed","getCollapsed","mapEvent","Control","target_","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","CLASS_HIDDEN","resetNorth_","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","defaults","zoomOptions","rotateOptions","attribution","attributionOptions","closestOnCircle","circle","getRadius","closestOnSegment","segment","x2","y2","along","createStringXY","fractionDigits","toStringXY","degreesToStringHDMS","hemispheres","degrees","normalizedDegrees","decimals","deg","sec","toFixed","hdms","padNumber","charAt","format","template","replace","coordinate1","coordinate2","angle","scale","squaredDistance","coord1","coord2","distance","squaredDistanceToSegment","toStringHDMS","wrapX","canWrapX","worldWidth","worldsAway","getWorldsAway","sourceExtentWidth","projectionExtent","CLASS_SELECTABLE","CLASS_UNSUPPORTED","fontRegEx","RegExp","join","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","canvasPool","settings","shift","WORKER_OFFSCREEN_CANVAS","OffscreenCanvas","getContext","releaseCanvas","context","clearRect","outerWidth","marginLeft","marginRight","outerHeight","marginTop","marginBottom","newNode","oldNode","parent","parentNode","replaceChild","node","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","t","linear","upAndDown","thisArg","originalListener","eventsKey","evt","CHANGE","BLUR","CLEAR","CONTEXTMENU","DRAGENTER","DRAGOVER","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","LEFT","UP","RIGHT","DOWN","Target","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","listenersForType","includes","isString","dispatching","pendingRemovals","propagate","call","pr","getListeners","all","conditions","pass","altKeyOnly","altKey","metaKey","ctrlKey","shiftKey","altShiftKeysOnly","focus","activeElement","focusWithTabindex","hasAttribute","always","click","mouseActionButton","WEBKIT","MAC","never","FALSE","pointerMove","singleClick","doubleClick","noModifierKeys","platformModifierKeyOnly","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","touchOnly","pointerEvt","penOnly","primaryAction","isPrimary","boundingExtent","coordinates","createEmpty","extendCoordinate","buffer","dest","closestSquaredDistanceXY","containsCoordinate","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","extendFlatCoordinates","createOrUpdateFromRings","rings","extendRings","approximatelyEquals","tolerance","extendXY","forEachCorner","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getCorner","corner","getEnlargedArea","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersectionArea","getIntersection","intersection","getMargin","returnOrUpdate","scaleFromCenter","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","xs","ys","_boundingExtentXYs","wrapAndSliceX","isFinite","UNKNOWN","INTERSECTING","ABOVE","BELOW","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","toPromise","getter","err","Promise","reject","resolve","promiseGetter","tmpTransform","Geometry","extent_","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","point","intersectsCoordinate","computeExtent","sx","sy","simplify","intersectsExtent","translate","destination","sourceProj","getUnits","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","compose","transform2D","getTransform","LinearRing","layout","maxDelta_","maxDeltaRevision_","setCoordinates","setFlatCoordinates","maxSquaredDelta","assignClosestPoint","linearRing","getCoordinates","inflateCoordinates","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","douglasPeucker","setLayout","deflateCoordinates","Point","deflateCoordinate","Polygon","ends","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","arrayMaxSquaredDelta","assignClosestArrayPoint","linearRingsContainsXY","getOrientedFlatCoordinates","linearRings","right","orientLinearRings","inflateCoordinatesArray","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPointOfArray","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRingsAreOriented","simplifiedEnds","quantizeArray","intersectsLinearRingArray","deflateCoordinatesArray","circular","radius","sphereRadius","fromExtent","fromCircle","sides","getLayout","arrayLength","makeRegular","startAngle","SimpleGeometry","getFirstCoordinate","getLastCoordinate","simplifiedGeometry","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","twiceArea","linearRingss","endss","assignClosest","offset1","offset2","lerp","squaredDelta","multiArrayMaxSquaredDelta","maxDelta","isRing","tmpPoint","assignClosestMultiArrayPoint","linearRingContainsExtent","linearRingContainsXY","wn","linearRingssContainsXY","coordinatess","deflateMultiCoordinatesArray","coordinatesss","inflateMultiCoordinatesArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","intersectsLineString","coordinatesExtent","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingMultiArray","linearRingIsClockwise","edge","isClockwise","linearRingssAreOriented","orientLinearRingsArray","inflateEnds","prevEndIndex","ret","simplifyLineString","highQuality","radialDistance","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredSegmentDistance","douglasPeuckerArray","douglasPeuckerMultiArray","simplifiedEndss","snap","quantize","dx1","dy1","dx2","dy2","quantizeMultiArray","anchorX","anchorY","k","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","SAFARI_BUG_237906","devicePixelRatio","WorkerGlobalScope","self","defineProperty","DoubleClickZoom","delta_","stopEvent","zoomByDelta","DragBoxEventType","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","startPixel_","condition_","condition","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","startPixel","endPixel","getGeometry","handleDragEvent","setPixels","handleUpEvent","completeBox","handleDownEvent","DragPan","stopDown","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","noKinetic_","targetPointers","centroid","centerpx","DragRotate","lastAngle_","theta","DragZoom","out_","out","factor","Interaction","setActive","active","pan","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","mapUnitsDelta","KeyboardZoom","charCode","charCodeAt","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","handlingDownUpSequence","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","PointerInteraction","handleMoveEvent","getPointerCount","updateTrackedPointers_","handledUp","handled","ACTIVE","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","BaseLayer","background_","background","opacity","className_","state_","getBackground","getClassName","getLayerState","managed","getZIndex","getOpacity","getVisible","getLayersArray","states","getSourceState","setBackground","setExtent","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","BaseTileLayer","baseOptions","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","getData","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","handleLayerChange_","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","currentLayers","pos","ownLayerState","defaultZIndex","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","rendered","handleSourcePropertyChange_","setSource","getRenderSource","handleSourceChange_","getFeatures","layerRenderer","prepareFrame","unrender","getMapInternal","some","arrayLayerState","createRenderer","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","MAP","TileLayer","PRELOAD","USE_INTERIM_TILES_ON_ERROR","solveLinearSystem","mat","maxRow","maxEl","absValue","coef","m","toDegrees","angleInRadians","toRadians","angleInDegrees","ceil","object","showCoordinateWarning","cloneTransform","input","output","identityTransform","addProjection","getCode","addProjections","projections","projectionLike","getPointResolution","units","pointResolution","getPointResolutionFunc","metersPerUnit","projUnits","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","clearAllProjections","defaultCode","createTransformFromCoordinateTransform","coordTransform","dimension","pointLength","addCoordinateTransforms","forward","inverse","destProj","toLonLat","lonLat","lon","equivalent","equalUnits","sourceProjection","destinationProjection","sourceCode","destinationCode","transformFunc","transformWithProjections","setUserProjection","clearUserProjection","useGeographic","destProjection","toUserResolution","sourceUnits","userUnits","fromUserResolution","createSafeCoordinateTransform","transformed","sourceExtent","addCommon","fromEPSG4326","code_","units_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","getAxisOrientation","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","unitByCode","fromCode","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","cosh","PROJECTIONS","atan","exp","EPSG4326Projection","transforms","RenderBox","geometry_","endPixel_","render_","px","createOrUpdateGeometry","RenderEvent","inversePixelTransform","PRERENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureFont","measureContext","textHeights","registerFont","retries","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","measureAndCacheTextWidth","reduce","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","rotateAtOffset","drawImageOrLabel","labelOrImage","originX","originY","save","globalAlpha","setTransform","contextInstructions","executeLabelInstructions","drawImage","restore","CompositeMapRenderer","fontChangeListenerKey_","container","firstChild","children_","calculateMatrices2D","declutterLayers","previousElement","sourceState","renderDeclutter","scheduleExpireIconCache","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","createLoadedTileFinder","forEachLoadedTile","matches","getLayer","renderIfReadyAndVisible","loadImage","imageState","MapRenderer","makeInverse","thisArg2","result","translatedCoordinate","offsets","numLayers","tmpCoord","getWrapX","order","distanceSq","expireIconCache","pixelContext","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","getImageData","col","row","willReadFrequently","useContainer","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","beginPath","moveTo","lineTo","clip","dispatchRenderEvent_","preRender","postRender","getRenderTransform","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileState","getTile","layerExtent","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getZForResolution","getTileCoordForCoordAndZ","tileOrigin","getOrigin","tileSize","toSize","getTileSize","gutter","getGutterForProjection","viewResolution","viewCenter","tileSource","sourceRevision","zDirection","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","viewport","tileCoordIntersectsViewport","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","canvasTransform","getInterpolate","imageSmoothingEnabled","clips","clipZs","currentClip","zs","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","getTileCoordExtent","origin","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alpha","alphaChanged","postRenderFunction","tileCallback","tileCount","isKeyQueued","getTileCoordCenter","useTile","updateCacheSize","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","closePath","verifyBrokenDiagonalRendering","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","calculateSourceExtentResolution","targetExtent","triangulation","sources","renderEdges","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","isBrokenDiagonalRendering","steps","ud","vd","step","strokeStyle","stroke","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","errorThreshold","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","maxSourceExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","ERROR_THRESHOLD","triangulation_","calculateSourceExtent","sourceRange","srcX","srcY","reproject_","leftToLoad","sourceListenKey","e","unlistenSources_","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","c","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","getViewportClampedResolution","maxExtent","getSmoothClampedResolution","cappedMaxRes","capped","minZoomLevel","cappedZoomLevel","zoomLevel","num","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","refresh","setAttributions","attributionLike","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","key_","tileOptions","getTileCacheForProjection","getKeyZXY","containsKey","setKey","getTileGrid","getTileCoordForTileUrlFunction","withinExtentAndZ","highWaterMark","TileSourceEvent","TILELOADSTART","TILELOADEND","TILELOADERROR","TileImage","defaultTileLoadFunction","tileUrlFunction","url","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","UrlTile","generateTileUrlFunction_","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","setTileLoadFunction","setTileUrlFunction","expandUrl","createFromTemplates","XYZ","createXYZ","extentFromProjection","DEFAULT_RADIUS","c1","c2","lat1","lat2","deltaLatBy2","deltaLonBy2","getLengthInternal","geometries","getGeometries","getAreaInternal","bearing","lon1","dByR","lat","asin","number","precision","numberString","decimal","compareVersions","s1","s2","n1","n2","count_","entries_","oldest_","newest_","keep","entry","value_","newer","older","getValues","peekLastKey","peek","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","elements","priorities","siftUp_","elementKey","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","IconImageCache","cache_","cacheSize_","maxCacheSize_","expire","iconImage","maxCacheSize","shared","getCacheKeyForTileKey","substring","lastIndexOf","hash","getFullTileRange","getForProjection","createForProjection","createForExtent","resolutionsFromExtent","xyzOptions","gridOptions","DEFAULT_MAX_ZOOM","half","tmpTileCoord","origins","origin_","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","opt_direction","fullTileRanges","createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","range","templates","tileUrlFunctions","createFromTileUrlFunctions","nullTileUrlFunction","startCharCode","stopCharCode","fromCharCode","stop","tmp_","reset","multiply","transform1","transform2","a1","b1","d1","e1","f1","a2","b2","d2","e2","f2","setFromArray","makeScale","composeCssTransform","invert","det","determinant","transformStringDiv","transformString","uidCounter_","ol_uid","VERSION","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","definition","o","enumerable","prop","Symbol","toStringTag","querySelectorAll"],"sourceRoot":""}