{"version":3,"file":"BoundingBoxMapElement.js","mappings":"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","sources":["webpack:///./node_modules/rbush/rbush.min.js","webpack:///../Resources/Private/TypeScript/BoundingBoxMap.ts","webpack:///./node_modules/ol-ext/interaction/Transform.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/Feature.js","webpack:///./node_modules/ol/Image.js","webpack:///./node_modules/ol/ImageBase.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/TileRange.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/console.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/control/defaults.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/events/Target.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/featureloader.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/interaction/defaults.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/layer/BaseTile.js","webpack:///./node_modules/ol/layer/BaseVector.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/layer/Vector.js","webpack:///./node_modules/ol/loadingstrategy.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/render/canvas/Builder.js","webpack:///./node_modules/ol/render/canvas/BuilderGroup.js","webpack:///./node_modules/ol/render/canvas/Executor.js","webpack:///./node_modules/ol/render/canvas/ExecutorGroup.js","webpack:///./node_modules/ol/render/canvas/ImageBuilder.js","webpack:///./node_modules/ol/render/canvas/Immediate.js","webpack:///./node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/ol/render/canvas/LineStringBuilder.js","webpack:///./node_modules/ol/render/canvas/PolygonBuilder.js","webpack:///./node_modules/ol/render/canvas/TextBuilder.js","webpack:///./node_modules/ol/render/canvas/hitdetect.js","webpack:///./node_modules/ol/renderer/Composite.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/source/OSM.js","webpack:///./node_modules/ol/source/Source.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/Vector.js","webpack:///./node_modules/ol/source/VectorEventType.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/string.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/structs/RBush.js","webpack:///./node_modules/ol/style/Circle.js","webpack:///./node_modules/ol/style/Fill.js","webpack:///./node_modules/ol/style/Icon.js","webpack:///./node_modules/ol/style/IconImage.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/style/Image.js","webpack:///./node_modules/ol/style/RegularShape.js","webpack:///./node_modules/ol/style/Stroke.js","webpack:///./node_modules/ol/style/Style.js","webpack:///./node_modules/ol/style/Text.js","webpack:///./node_modules/ol/style/flat.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/util.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///../Resources/Private/TypeScript/BoundingBoxMapElement.ts"],"sourcesContent":["!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","import Map from 'ol/Map.js';\nimport OSM from 'ol/source/OSM.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport View from 'ol/View.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport Feature from 'ol/Feature.js';\nimport Polygon from 'ol/geom/Polygon.js';\nimport Transform from 'ol-ext/interaction/Transform';\nimport { shiftKeyOnly } from 'ol/events/condition';\nimport { fromLonLat, toLonLat } from 'ol/proj';\nimport { isEmpty } from 'ol/extent';\nimport { Fill, Stroke, Style } from 'ol/style.js';\nvar BoundingBoxMap = /** @class */ (function () {\n    function BoundingBoxMap(parent, boundingBoxStringList, onChangeCallback) {\n        var _this = this;\n        this.parent = parent;\n        this.onChangeCallBack = onChangeCallback;\n        (function () {\n            _this.mount(_this.bboxTextToArray(boundingBoxStringList));\n        })();\n    }\n    BoundingBoxMap.prototype.mount = function (boundingBox) {\n        this.buildMap();\n        this.buildFeatureLayers(boundingBox);\n        this.initInteraction();\n        this.registerEvents();\n        this.fitBBox();\n    };\n    BoundingBoxMap.prototype.updateBoundingBox = function (boundingBoxStringList) {\n        var newCoordinates = this.bboxTextToArray(boundingBoxStringList);\n        this.bbox.getGeometry().setCoordinates(newCoordinates);\n        this.fitBBox();\n    };\n    BoundingBoxMap.prototype.bboxTextToArray = function (value) {\n        var stringArray = value.split(\",\");\n        var southWest = fromLonLat([parseFloat(stringArray[0]), parseFloat(stringArray[1])]);\n        var northEast = fromLonLat([parseFloat(stringArray[2]), parseFloat(stringArray[3])]);\n        var northWest = fromLonLat([parseFloat(stringArray[0]), parseFloat(stringArray[3])]);\n        var southEast = fromLonLat([parseFloat(stringArray[2]), parseFloat(stringArray[1])]);\n        return [[southWest, northWest, northEast, southEast]];\n    };\n    BoundingBoxMap.prototype.fitBBox = function () {\n        var extent = this.vectorLayer.getSource().getExtent();\n        if (!isEmpty(extent)) {\n            this.map.getView().fit(extent, { padding: [50, 50, 50, 50] });\n        }\n        else {\n            this.map.getView().setCenter(fromLonLat([11.96, 51.23]));\n            this.map.getView().setZoom(8);\n        }\n    };\n    BoundingBoxMap.prototype.roundCoordValue = function (coord) {\n        return [Math.round((coord[0]) * 100) / 100, Math.round((coord[1]) * 100) / 100];\n    };\n    BoundingBoxMap.prototype.buildBoundingBoxRectString = function () {\n        var coordinates = this.bbox.getGeometry().getFlatCoordinates();\n        var southWest = [Number.MAX_VALUE, Number.MAX_VALUE];\n        var northEast = [Number.MIN_VALUE, Number.MIN_VALUE];\n        for (var i = 0; i < coordinates.length; i += 2) {\n            if (isNaN(coordinates[i]) || isNaN(coordinates[i + 1])) {\n                return;\n            }\n            ;\n            var coord = this.roundCoordValue(toLonLat([coordinates[i], coordinates[i + 1]]));\n            if (coord[0] < southWest[0])\n                southWest[0] = coord[0];\n            if (coord[1] < southWest[1])\n                southWest[1] = coord[1];\n            if (coord[0] > northEast[0])\n                northEast[0] = coord[0];\n            if (coord[1] > northEast[1])\n                northEast[1] = coord[1];\n        }\n        var resutlArray = [southWest[0], southWest[1], northEast[0], northEast[1]];\n        return resutlArray.join(',');\n    };\n    BoundingBoxMap.prototype.updateBBoxRounded = function () {\n        var coordinates = this.bbox.getGeometry().getFlatCoordinates();\n        var roundedArray = [];\n        roundedArray.push([]);\n        for (var i = 0; i < coordinates.length; i += 2) {\n            if (isNaN(coordinates[i]) || isNaN(coordinates[i + 1])) {\n                return;\n            }\n            ;\n            var coord = this.roundCoordValue(toLonLat([coordinates[i], coordinates[i + 1]]));\n            roundedArray[0].push(fromLonLat(coord));\n        }\n        this.bboxRounded.getGeometry().setCoordinates(roundedArray);\n    };\n    BoundingBoxMap.prototype.buildMap = function () {\n        this.map = new Map({\n            layers: [\n                new TileLayer({\n                    source: new OSM(),\n                }),\n            ],\n            target: this.parent.querySelector('.map'),\n            view: new View({\n                zoom: 10,\n            }),\n        });\n    };\n    BoundingBoxMap.prototype.buildFeatureLayers = function (boundingBox) {\n        this.vectorLayer = new VectorLayer({\n            source: new VectorSource({ wrapX: false }),\n        });\n        this.map.addLayer(this.vectorLayer);\n        this.bbox = new Feature(new Polygon(boundingBox));\n        this.vectorLayer.getSource().addFeature(this.bbox);\n        var styles = [\n            new Style({\n                stroke: new Stroke({\n                    color: 'green',\n                    width: 3,\n                }),\n                fill: new Fill({\n                    color: 'rgba(255, 255, 255, 0.01)',\n                }),\n            }),\n        ];\n        var staticVectorLayer = new VectorLayer({\n            source: new VectorSource({ wrapX: false }),\n            style: styles,\n        });\n        this.map.addLayer(staticVectorLayer);\n        this.bboxRounded = new Feature(new Polygon(boundingBox));\n        staticVectorLayer.getSource().addFeature(this.bboxRounded);\n    };\n    BoundingBoxMap.prototype.initInteraction = function () {\n        var interaction = new Transform({\n            enableRotatedTransform: false,\n            addCondition: shiftKeyOnly,\n            hitTolerance: 2,\n            translateFeature: true,\n            scale: true,\n            rotate: false,\n            keepAspectRatio: undefined,\n            keepRectangle: false,\n            translate: true,\n            stretch: true,\n            layers: [this.vectorLayer],\n            // Get scale on points\n            pointRadius: function (f) {\n                var radius = f.get('radius') || 10;\n                return [radius, radius];\n            }\n        });\n        this.map.addInteraction(interaction);\n    };\n    BoundingBoxMap.prototype.registerEvents = function () {\n        var _this = this;\n        this.bbox.on('change', function (evt) {\n            _this.updateBBoxRounded();\n            _this.onChangeCallBack(_this.buildBoundingBoxRectString());\n        });\n    };\n    return BoundingBoxMap;\n}());\nexport default BoundingBoxMap;\n","import ol_style_Style from 'ol/style/Style.js'\r\nimport ol_style_Stroke from 'ol/style/Stroke.js'\r\nimport ol_source_Vector from 'ol/source/Vector.js'\r\nimport ol_style_Fill from 'ol/style/Fill.js'\r\nimport ol_layer_Vector from 'ol/layer/Vector.js'\r\nimport ol_geom_Point from 'ol/geom/Point.js'\r\nimport ol_Feature from 'ol/Feature.js'\r\nimport ol_Collection from 'ol/Collection.js'\r\nimport ol_interaction_Pointer from 'ol/interaction/Pointer.js'\r\nimport ol_style_RegularShape from 'ol/style/RegularShape.js'\r\nimport {fromExtent as ol_geom_Polygon_fromExtent} from 'ol/geom/Polygon.js'\r\nimport {boundingExtent as ol_extent_boundingExtent, buffer as ol_extent_buffer, createEmpty as ol_extent_createEmpty, extend as ol_extent_extend, getCenter as ol_extent_getCenter} from 'ol/extent.js'\r\nimport {unByKey as ol_Observable_unByKey} from 'ol/Observable.js'\r\nimport ol_geom_Polygon from 'ol/geom/Polygon.js'\r\n\r\n/** Interaction rotate\r\n * @constructor\r\n * @extends {ol_interaction_Pointer}\r\n * @fires select | rotatestart | rotating | rotateend | translatestart | translating | translateend | scalestart | scaling | scaleend\r\n * @param {any} options\r\n *  @param {function} options.filter A function that takes a Feature and a Layer and returns true if the feature may be transformed or false otherwise.\r\n *  @param {Array<ol.Layer>} options.layers array of layers to transform,\r\n *  @param {ol.Collection<ol.Feature>} options.features collection of feature to transform,\r\n *\t@param {ol.EventsConditionType|undefined} options.condition A function that takes an ol.MapBrowserEvent and a feature collection and returns a boolean to indicate whether that event should be handled. default: ol.events.condition.always.\r\n *\t@param {ol.EventsConditionType|undefined} options.addCondition A function that takes an ol.MapBrowserEvent and returns a boolean to indicate whether that event should be handled ie. the feature will be added to the transforms features. default: ol.events.condition.never.\r\n *\t@param {number | undefined} options.hitTolerance Tolerance to select feature in pixel, default 0\r\n *\t@param {bool} options.translateFeature Translate when click on feature\r\n *\t@param {bool} options.translate Can translate the feature\r\n *  @param {bool} options.translateBBox Enable translate when the user drags inside the bounding box\r\n *\t@param {bool} options.stretch can stretch the feature\r\n *\t@param {bool} options.scale can scale the feature\r\n *\t@param {bool} options.rotate can rotate the feature\r\n *\t@param {bool} options.noFlip prevent the feature geometry to flip, default false\r\n *\t@param {bool} options.selection the intraction handle selection/deselection, if not use the select prototype to add features to transform, default true\r\n *\t@param {ol.events.ConditionType | undefined} options.keepAspectRatio A function that takes an ol.MapBrowserEvent and returns a boolean to keep aspect ratio, default ol.events.condition.shiftKeyOnly.\r\n *\t@param {ol.events.ConditionType | undefined} options.modifyCenter A function that takes an ol.MapBrowserEvent and returns a boolean to apply scale & strech from the center, default ol.events.condition.metaKey or ol.events.condition.ctrlKey.\r\n *\t@param {boolean} options.enableRotatedTransform Enable transform when map is rotated\r\n *\t@param {boolean} [options.keepRectangle=false] keep rectangle when possible\r\n *\t@param {*} options.style list of ol.style for handles\r\n *  @param {number|Array<number>|function} [options.pointRadius=0] radius for points or a function that takes a feature and returns the radius (or [radiusX, radiusY]). If not null show handles to transform the points\r\n */\r\nvar ol_interaction_Transform = class olinteractionTransform extends ol_interaction_Pointer {\r\n  constructor(options) {\r\n    options = options || {}\r\n    // Extend pointer\r\n    super({\r\n      handleDownEvent: function(e) { return self.handleDownEvent_(e) },\r\n      handleDragEvent: function(e) { return this.handleDragEvent_(e) },\r\n      handleMoveEvent: function(e) { return this.handleMoveEvent_(e) },\r\n      handleUpEvent: function(e) { return this.handleUpEvent_(e) },\r\n    })\r\n    \r\n    var self = this\r\n    this.selection_ = new ol_Collection()\r\n\r\n    // Create a new overlay layer for the sketch\r\n    this.handles_ = new ol_Collection()\r\n    this.overlayLayer_ = new ol_layer_Vector({\r\n      source: new ol_source_Vector({\r\n        features: this.handles_,\r\n        useSpatialIndex: false,\r\n        wrapX: false // For vector editing across the -180° and 180° meridians to work properly, this should be set to false\r\n      }),\r\n      name: 'Transform overlay',\r\n      displayInLayerSwitcher: false,\r\n      // Return the style according to the handle type\r\n      style: function (feature) {\r\n        return (self.style[(feature.get('handle') || 'default') + (feature.get('constraint') || '') + (feature.get('option') || '')])\r\n      },\r\n    })\r\n\r\n    // Collection of feature to transform\r\n    this.features_ = options.features\r\n    // Filter or list of layers to transform\r\n    if (typeof (options.filter) === 'function')\r\n      this._filter = options.filter\r\n    this.layers_ = options.layers ? (options.layers instanceof Array) ? options.layers : [options.layers] : null\r\n\r\n    this._handleEvent = options.condition || function () { return true }\r\n    this.addFn_ = options.addCondition || function () { return false }\r\n    this.setPointRadius(options.pointRadius)\r\n    /* Translate when click on feature */\r\n    this.set('translateFeature', (options.translateFeature !== false))\r\n    /* Can translate the feature */\r\n    this.set('translate', (options.translate !== false))\r\n    /* Translate when click on the bounding box */\r\n    this.set('translateBBox', (options.translateBBox === true))\r\n    /* Can stretch the feature */\r\n    this.set('stretch', (options.stretch !== false))\r\n    /* Can scale the feature */\r\n    this.set('scale', (options.scale !== false))\r\n    /* Can rotate the feature */\r\n    this.set('rotate', (options.rotate !== false))\r\n    /* Keep aspect ratio */\r\n    this.set('keepAspectRatio', (options.keepAspectRatio || function (e) { return e.originalEvent.shiftKey }))\r\n    /* Modify center */\r\n    this.set('modifyCenter', (options.modifyCenter || function (e) { return e.originalEvent.metaKey || e.originalEvent.ctrlKey }))\r\n    /* Prevent flip */\r\n    this.set('noFlip', (options.noFlip || false))\r\n    /* Handle selection */\r\n    this.set('selection', (options.selection !== false))\r\n    /*  */\r\n    this.set('hitTolerance', (options.hitTolerance || 0))\r\n    /* Enable view rotated transforms */\r\n    this.set('enableRotatedTransform', (options.enableRotatedTransform || false))\r\n    /* Keep rectangle angles 90 degrees */\r\n    this.set('keepRectangle', (options.keepRectangle || false))\r\n\r\n\r\n    // Force redraw when changed\r\n    this.on('propertychange', function () {\r\n      this.drawSketch_()\r\n    })\r\n\r\n    // setstyle\r\n    this.setDefaultStyle()\r\n  }\r\n  /**\r\n   * Remove the interaction from its current map, if any,  and attach it to a new\r\n   * map, if any. Pass `null` to just remove the interaction from the current map.\r\n   * @param {ol.Map} map Map.\r\n   * @api stable\r\n   */\r\n  setMap(map) {\r\n    var oldMap = this.getMap()\r\n    if (oldMap) {\r\n      var targetElement = oldMap.getTargetElement()\r\n      oldMap.removeLayer(this.overlayLayer_)\r\n      if (this.previousCursor_ && targetElement) {\r\n        targetElement.style.cursor = this.previousCursor_\r\n      }\r\n      this.previousCursor_ = undefined\r\n    }\r\n    super.setMap(map)\r\n    this.overlayLayer_.setMap(map)\r\n    if (map === null) {\r\n      this.select(null)\r\n    }\r\n    if (map !== null) {\r\n      this.isTouch = /touch/.test(map.getViewport().className)\r\n      this.setDefaultStyle()\r\n    }\r\n  }\r\n  /**\r\n   * Activate/deactivate interaction\r\n   * @param {bool}\r\n   * @api stable\r\n   */\r\n  setActive(b) {\r\n    this.select(null)\r\n    if (this.overlayLayer_) this.overlayLayer_.setVisible(b)\r\n    super.setActive(b)\r\n  }\r\n  /** Set default sketch style\r\n   * @param {Object|undefined} options\r\n   *  @param {ol_style_Stroke} stroke stroke style for selection rectangle\r\n   *  @param {ol_style_Fill} fill fill style for selection rectangle\r\n   *  @param {ol_style_Stroke} pointStroke stroke style for handles\r\n   *  @param {ol_style_Fill} pointFill fill style for handles\r\n   */\r\n  setDefaultStyle(options) {\r\n    options = options || {}\r\n    // Style\r\n    var stroke = options.pointStroke || new ol_style_Stroke({ color: [255, 0, 0, 1], width: 1 })\r\n    var strokedash = options.stroke || new ol_style_Stroke({ color: [255, 0, 0, 1], width: 1, lineDash: [4, 4] })\r\n    var fill0 = options.fill || new ol_style_Fill({ color: [255, 0, 0, 0.01] })\r\n    var fill = options.pointFill || new ol_style_Fill({ color: [255, 255, 255, 0.8] })\r\n    var circle = new ol_style_RegularShape({\r\n      fill: fill,\r\n      stroke: stroke,\r\n      radius: this.isTouch ? 12 : 6,\r\n      displacement: this.isTouch ? [24, -24] : [12, -12],\r\n      points: 15\r\n    })\r\n    // Old version with no displacement\r\n    if (!circle.setDisplacement)\r\n      circle.getAnchor()[0] = this.isTouch ? -10 : -5\r\n    var bigpt = new ol_style_RegularShape({\r\n      fill: fill,\r\n      stroke: stroke,\r\n      radius: this.isTouch ? 16 : 8,\r\n      points: 4,\r\n      angle: Math.PI / 4\r\n    })\r\n    var smallpt = new ol_style_RegularShape({\r\n      fill: fill,\r\n      stroke: stroke,\r\n      radius: this.isTouch ? 12 : 6,\r\n      points: 4,\r\n      angle: Math.PI / 4\r\n    })\r\n    function createStyle(img, stroke, fill) {\r\n      return [new ol_style_Style({ image: img, stroke: stroke, fill: fill })]\r\n    }\r\n    /** Style for handles */\r\n    this.style = {\r\n      'default': createStyle(bigpt, strokedash, fill0),\r\n      'translate': createStyle(bigpt, stroke, fill),\r\n      'rotate': createStyle(circle, stroke, fill),\r\n      'rotate0': createStyle(bigpt, stroke, fill),\r\n      'scale': createStyle(bigpt, stroke, fill),\r\n      'scale1': createStyle(bigpt, stroke, fill),\r\n      'scale2': createStyle(bigpt, stroke, fill),\r\n      'scale3': createStyle(bigpt, stroke, fill),\r\n      'scalev': createStyle(smallpt, stroke, fill),\r\n      'scaleh1': createStyle(smallpt, stroke, fill),\r\n      'scalev2': createStyle(smallpt, stroke, fill),\r\n      'scaleh3': createStyle(smallpt, stroke, fill),\r\n    }\r\n    this.drawSketch_()\r\n  }\r\n  /**\r\n   * Set sketch style.\r\n   * @param {style} style Style name: 'default','translate','rotate','rotate0','scale','scale1','scale2','scale3','scalev','scaleh1','scalev2','scaleh3'\r\n   * @param {ol.style.Style|Array<ol.style.Style>} olstyle\r\n   * @api stable\r\n   */\r\n  setStyle(style, olstyle) {\r\n    if (!olstyle)\r\n      return\r\n    if (olstyle instanceof Array)\r\n      this.style[style] = olstyle\r\n    else\r\n      this.style[style] = [olstyle]\r\n    for (var i = 0; i < this.style[style].length; i++) {\r\n      var im = this.style[style][i].getImage()\r\n      if (im) {\r\n        if (style == 'rotate') {\r\n          im.getAnchor()[0] = -5\r\n        }\r\n        if (this.isTouch)\r\n          im.setScale(1.8)\r\n      }\r\n      var tx = this.style[style][i].getText()\r\n      if (tx) {\r\n        if (style == 'rotate')\r\n          tx.setOffsetX(this.isTouch ? 14 : 7)\r\n        if (this.isTouch)\r\n          tx.setScale(1.8)\r\n      }\r\n    }\r\n    this.drawSketch_()\r\n  }\r\n  /** Get Feature at pixel\r\n   * @param {ol.Pixel}\r\n   * @return {ol.feature}\r\n   * @private\r\n   */\r\n  getFeatureAtPixel_(pixel) {\r\n    var self = this\r\n    return this.getMap().forEachFeatureAtPixel(pixel,\r\n      function (feature, layer) {\r\n        var found = false\r\n        // Overlay ?\r\n        if (!layer) {\r\n          if (feature === self.bbox_) {\r\n            if (self.get('translateBBox')) {\r\n              return { feature: feature, handle: 'translate', constraint: '', option: '' }\r\n            } else {\r\n              return false\r\n            }\r\n          }\r\n          self.handles_.forEach(function (f) {\r\n            if (f === feature)\r\n              found = true\r\n          })\r\n          if (found)\r\n            return { feature: feature, handle: feature.get('handle'), constraint: feature.get('constraint'), option: feature.get('option') }\r\n        }\r\n        // No seletion\r\n        if (!self.get('selection')) {\r\n          // Return the currently selected feature the user is interacting with.\r\n          if (self.selection_.getArray().some(function (f) { return feature === f })) {\r\n            return { feature: feature }\r\n          }\r\n          return null\r\n        }\r\n        // filter condition\r\n        if (self._filter) {\r\n          if (self._filter(feature, layer))\r\n            return { feature: feature }\r\n          else\r\n            return null\r\n        }\r\n\r\n        // feature belong to a layer\r\n        else if (self.layers_) {\r\n          for (var i = 0; i < self.layers_.length; i++) {\r\n            if (self.layers_[i] === layer)\r\n              return { feature: feature }\r\n          }\r\n          return null\r\n        }\r\n\r\n        // feature in the collection\r\n        else if (self.features_) {\r\n          self.features_.forEach(function (f) {\r\n            if (f === feature)\r\n              found = true\r\n          })\r\n          if (found)\r\n            return { feature: feature }\r\n          else\r\n            return null\r\n        }\r\n\r\n        // Others\r\n        else\r\n          return { feature: feature }\r\n      },\r\n      { hitTolerance: this.get('hitTolerance') }\r\n    ) || {}\r\n  }\r\n  /** Rotate feature from map view rotation\r\n   * @param {ol.Feature} f the feature\r\n   * @param {boolean} clone clone resulting geom\r\n   * @param {ol.geom.Geometry} rotated geometry\r\n   */\r\n  getGeometryRotateToZero_(f, clone) {\r\n    var origGeom = f.getGeometry()\r\n    var viewRotation = this.getMap().getView().getRotation()\r\n    if (viewRotation === 0 || !this.get('enableRotatedTransform')) {\r\n      return (clone) ? origGeom.clone() : origGeom\r\n    }\r\n    var rotGeom = origGeom.clone()\r\n    rotGeom.rotate(viewRotation * -1, this.getMap().getView().getCenter())\r\n    return rotGeom\r\n  }\r\n  /** Test if rectangle\r\n   * @param {ol.Geometry} geom\r\n   * @returns {boolean}\r\n   * @private\r\n   */\r\n  _isRectangle(geom) {\r\n    if (this.get('keepRectangle') && geom.getType() === 'Polygon') {\r\n      var coords = geom.getCoordinates()[0]\r\n      return coords.length === 5\r\n    }\r\n    return false\r\n  }\r\n  /** Draw transform sketch\r\n  * @param {boolean} draw only the center\r\n  */\r\n  drawSketch_(center) {\r\n    var i, f, geom\r\n    var keepRectangle = this.selection_.item(0) && this._isRectangle(this.selection_.item(0).getGeometry())\r\n    this.overlayLayer_.getSource().clear()\r\n    if (!this.selection_.getLength())\r\n      return\r\n    var viewRotation = this.getMap().getView().getRotation()\r\n    var ext = this.getGeometryRotateToZero_(this.selection_.item(0)).getExtent()\r\n    var coords\r\n    if (keepRectangle) {\r\n      coords = this.getGeometryRotateToZero_(this.selection_.item(0)).getCoordinates()[0].slice(0, 4)\r\n      coords.unshift(coords[3])\r\n    }\r\n    // Clone and extend\r\n    ext = ol_extent_buffer(ext, 0)\r\n    this.selection_.forEach(function (f) {\r\n      var extendExt = this.getGeometryRotateToZero_(f).getExtent()\r\n      ol_extent_extend(ext, extendExt)\r\n    }.bind(this))\r\n\r\n    var ptRadius = (this.selection_.getLength() === 1 ? this._pointRadius(this.selection_.item(0)) : 0)\r\n    if (ptRadius && !(ptRadius instanceof Array))\r\n      ptRadius = [ptRadius, ptRadius]\r\n\r\n    if (center === true) {\r\n      if (!this.ispt_) {\r\n        this.overlayLayer_.getSource().addFeature(new ol_Feature({ geometry: new ol_geom_Point(this.center_), handle: 'rotate0' }))\r\n        geom = ol_geom_Polygon_fromExtent(ext)\r\n        if (this.get('enableRotatedTransform') && viewRotation !== 0) {\r\n          geom.rotate(viewRotation, this.getMap().getView().getCenter())\r\n        }\r\n        f = this.bbox_ = new ol_Feature(geom)\r\n        this.overlayLayer_.getSource().addFeature(f)\r\n      }\r\n    } else {\r\n      if (this.ispt_) {\r\n        // Calculate extent arround the point\r\n        var p = this.getMap().getPixelFromCoordinate([ext[0], ext[1]])\r\n        if (p) {\r\n          var dx = ptRadius ? ptRadius[0] || 10 : 10\r\n          var dy = ptRadius ? ptRadius[1] || 10 : 10\r\n          ext = ol_extent_boundingExtent([\r\n            this.getMap().getCoordinateFromPixel([p[0] - dx, p[1] - dy]),\r\n            this.getMap().getCoordinateFromPixel([p[0] + dx, p[1] + dy])\r\n          ])\r\n        }\r\n      }\r\n      geom = keepRectangle ? new ol_geom_Polygon([coords]) : ol_geom_Polygon_fromExtent(ext)\r\n      if (this.get('enableRotatedTransform') && viewRotation !== 0) {\r\n        geom.rotate(viewRotation, this.getMap().getView().getCenter())\r\n      }\r\n      f = this.bbox_ = new ol_Feature(geom)\r\n      var features = []\r\n      var g = geom.getCoordinates()[0]\r\n      if (!this.ispt_ || ptRadius) {\r\n        features.push(f)\r\n        // Middle\r\n        if (!this.iscircle_ && !this.ispt_ && this.get('stretch') && this.get('scale'))\r\n          for (i = 0; i < g.length - 1; i++) {\r\n            f = new ol_Feature({ geometry: new ol_geom_Point([(g[i][0] + g[i + 1][0]) / 2, (g[i][1] + g[i + 1][1]) / 2]), handle: 'scale', constraint: i % 2 ? \"h\" : \"v\", option: i })\r\n            features.push(f)\r\n          }\r\n        // Handles\r\n        if (this.get('scale'))\r\n          for (i = 0; i < g.length - 1; i++) {\r\n            f = new ol_Feature({ geometry: new ol_geom_Point(g[i]), handle: 'scale', option: i })\r\n            features.push(f)\r\n          }\r\n        // Center\r\n        if (this.get('translate') && !this.get('translateFeature')) {\r\n          f = new ol_Feature({ geometry: new ol_geom_Point([(g[0][0] + g[2][0]) / 2, (g[0][1] + g[2][1]) / 2]), handle: 'translate' })\r\n          features.push(f)\r\n        }\r\n      }\r\n      // Rotate\r\n      if (!this.iscircle_ && this.get('rotate')) {\r\n        f = new ol_Feature({ geometry: new ol_geom_Point(g[3]), handle: 'rotate' })\r\n        features.push(f)\r\n      }\r\n      // Add sketch\r\n      this.overlayLayer_.getSource().addFeatures(features)\r\n    }\r\n\r\n  }\r\n  /** Select a feature to transform\r\n  * @param {ol.Feature} feature the feature to transform\r\n  * @param {boolean} add true to add the feature to the selection, default false\r\n  */\r\n  select(feature, add) {\r\n    if (!feature) {\r\n      if (this.selection_) {\r\n        this.selection_.clear()\r\n        this.drawSketch_()\r\n      }\r\n      return\r\n    }\r\n    if (!feature.getGeometry || !feature.getGeometry()) return\r\n    // Add to selection\r\n    if (add) {\r\n      this.selection_.push(feature)\r\n    } else {\r\n      var index = this.selection_.getArray().indexOf(feature)\r\n      this.selection_.removeAt(index)\r\n    }\r\n    this.ispt_ = (this.selection_.getLength() === 1 ? (this.selection_.item(0).getGeometry().getType() == \"Point\") : false)\r\n    this.iscircle_ = (this.selection_.getLength() === 1 ? (this.selection_.item(0).getGeometry().getType() == \"Circle\") : false)\r\n    this.drawSketch_()\r\n    this.watchFeatures_()\r\n    // select event\r\n    this.dispatchEvent({ type: 'select', feature: feature, features: this.selection_ })\r\n  }\r\n  /** Update the selection collection.\r\n  * @param {ol.Collection<ol.Feature>} features the features to transform\r\n  */\r\n  setSelection(features) {\r\n    this.selection_.clear()\r\n    features.forEach(function (feature) {\r\n      this.selection_.push(feature)\r\n    }.bind(this))\r\n\r\n    this.ispt_ = (this.selection_.getLength() === 1 ? (this.selection_.item(0).getGeometry().getType() == \"Point\") : false)\r\n    this.iscircle_ = (this.selection_.getLength() === 1 ? (this.selection_.item(0).getGeometry().getType() == \"Circle\") : false)\r\n    this.drawSketch_()\r\n    this.watchFeatures_()\r\n    // select event\r\n    this.dispatchEvent({ type: 'select', features: this.selection_ })\r\n  }\r\n  /** Watch selected features\r\n   * @private\r\n   */\r\n  watchFeatures_() {\r\n    // Listen to feature modification\r\n    if (this._featureListeners) {\r\n      this._featureListeners.forEach(function (l) {\r\n        ol_Observable_unByKey(l)\r\n      })\r\n    }\r\n    this._featureListeners = []\r\n    this.selection_.forEach(function (f) {\r\n      this._featureListeners.push(\r\n        f.on('change', function () {\r\n          if (!this.isUpdating_) {\r\n            this.drawSketch_()\r\n          }\r\n        }.bind(this))\r\n      )\r\n    }.bind(this))\r\n  }\r\n  /**\r\n   * @param {ol.MapBrowserEvent} evt Map browser event.\r\n   * @return {boolean} `true` to start the drag sequence.\r\n   * @private\r\n   */\r\n  handleDownEvent_(evt) {\r\n    if (!this._handleEvent(evt, this.selection_))\r\n      return\r\n    var sel = this.getFeatureAtPixel_(evt.pixel)\r\n    var feature = sel.feature\r\n    if (this.selection_.getLength()\r\n      && this.selection_.getArray().indexOf(feature) >= 0\r\n      && ((this.ispt_ && this.get('translate')) || this.get('translateFeature'))) {\r\n      sel.handle = 'translate'\r\n    }\r\n    if (sel.handle) {\r\n      this.mode_ = sel.handle\r\n      this.opt_ = sel.option\r\n      this.constraint_ = sel.constraint\r\n      // Save info\r\n      var viewRotation = this.getMap().getView().getRotation()\r\n      this.coordinate_ = evt.coordinate\r\n      this.pixel_ = evt.pixel\r\n      this.geoms_ = []\r\n      this.rotatedGeoms_ = []\r\n      var extent = ol_extent_createEmpty()\r\n      var rotExtent = ol_extent_createEmpty()\r\n      for (var i = 0, f; f = this.selection_.item(i); i++) {\r\n        this.geoms_.push(f.getGeometry().clone())\r\n        extent = ol_extent_extend(extent, f.getGeometry().getExtent())\r\n        if (this.get('enableRotatedTransform') && viewRotation !== 0) {\r\n          var rotGeom = this.getGeometryRotateToZero_(f, true)\r\n          this.rotatedGeoms_.push(rotGeom)\r\n          rotExtent = ol_extent_extend(rotExtent, rotGeom.getExtent())\r\n        }\r\n      }\r\n      this.extent_ = (ol_geom_Polygon_fromExtent(extent)).getCoordinates()[0]\r\n      if (this.get('enableRotatedTransform') && viewRotation !== 0) {\r\n        this.rotatedExtent_ = (ol_geom_Polygon_fromExtent(rotExtent)).getCoordinates()[0]\r\n      }\r\n      if (this.mode_ === 'rotate') {\r\n        this.center_ = this.getCenter() || ol_extent_getCenter(extent)\r\n        // we are now rotating (cursor down on rotate mode), so apply the grabbing cursor\r\n        var element = evt.map.getTargetElement()\r\n        element.style.cursor = this.Cursors.rotate0\r\n        this.previousCursor_ = element.style.cursor\r\n      } else {\r\n        this.center_ = ol_extent_getCenter(extent)\r\n      }\r\n      this.angle_ = Math.atan2(this.center_[1] - evt.coordinate[1], this.center_[0] - evt.coordinate[0])\r\n\r\n      this.dispatchEvent({\r\n        type: this.mode_ + 'start',\r\n        feature: this.selection_.item(0),\r\n        features: this.selection_,\r\n        pixel: evt.pixel,\r\n        coordinate: evt.coordinate\r\n      })\r\n      return true\r\n    }\r\n    else if (this.get('selection')) {\r\n      if (feature) {\r\n        if (!this.addFn_(evt))\r\n          this.selection_.clear()\r\n        var index = this.selection_.getArray().indexOf(feature)\r\n        if (index < 0)\r\n          this.selection_.push(feature)\r\n        else\r\n          this.selection_.removeAt(index)\r\n      } else {\r\n        this.selection_.clear()\r\n      }\r\n      this.ispt_ = this.selection_.getLength() === 1 ? (this.selection_.item(0).getGeometry().getType() == \"Point\") : false\r\n      this.iscircle_ = (this.selection_.getLength() === 1 ? (this.selection_.item(0).getGeometry().getType() == \"Circle\") : false)\r\n      this.drawSketch_()\r\n      this.watchFeatures_()\r\n      this.dispatchEvent({ type: 'select', feature: feature, features: this.selection_, pixel: evt.pixel, coordinate: evt.coordinate })\r\n      return false\r\n    }\r\n  }\r\n  /**\r\n   * Get the rotation center\r\n   * @return {ol.coordinate|undefined}\r\n   */\r\n  getCenter() {\r\n    return this.get('center')\r\n  }\r\n  /**\r\n   * Set the rotation center\r\n   * @param {ol.coordinate|undefined} c the center point, default center on the objet\r\n   */\r\n  setCenter(c) {\r\n    return this.set('center', c)\r\n  }\r\n  /**\r\n   * @param {ol.MapBrowserEvent} evt Map browser event.\r\n   * @private\r\n   */\r\n  handleDragEvent_(evt) {\r\n    if (!this._handleEvent(evt, this.features_))\r\n      return\r\n    var viewRotation = this.getMap().getView().getRotation()\r\n    var i, j, f, geometry\r\n    var pt0 = [this.coordinate_[0], this.coordinate_[1]]\r\n    var pt = [evt.coordinate[0], evt.coordinate[1]]\r\n    this.isUpdating_ = true\r\n    switch (this.mode_) {\r\n      case 'rotate': {\r\n        var a = Math.atan2(this.center_[1] - pt[1], this.center_[0] - pt[0])\r\n        if (!this.ispt) {\r\n          // var geometry = this.geom_.clone();\r\n          // geometry.rotate(a-this.angle_, this.center_);\r\n          // this.feature_.setGeometry(geometry);\r\n          for (i = 0, f; f = this.selection_.item(i); i++) {\r\n            geometry = this.geoms_[i].clone()\r\n            geometry.rotate(a - this.angle_, this.center_)\r\n            // bug: ol, bad calculation circle geom extent\r\n            if (geometry.getType() == 'Circle')\r\n              geometry.setCenterAndRadius(geometry.getCenter(), geometry.getRadius())\r\n            f.setGeometry(geometry)\r\n          }\r\n        }\r\n        this.drawSketch_(true)\r\n        this.dispatchEvent({\r\n          type: 'rotating',\r\n          feature: this.selection_.item(0),\r\n          features: this.selection_,\r\n          angle: a - this.angle_,\r\n          pixel: evt.pixel,\r\n          coordinate: evt.coordinate\r\n        })\r\n        break\r\n      }\r\n      case 'translate': {\r\n        var deltaX = pt[0] - pt0[0]\r\n        var deltaY = pt[1] - pt0[1]\r\n\r\n        //this.feature_.getGeometry().translate(deltaX, deltaY);\r\n        for (i = 0, f; f = this.selection_.item(i); i++) {\r\n          f.getGeometry().translate(deltaX, deltaY)\r\n        }\r\n        this.handles_.forEach(function (f) {\r\n          f.getGeometry().translate(deltaX, deltaY)\r\n        })\r\n\r\n        this.coordinate_ = evt.coordinate\r\n        this.dispatchEvent({\r\n          type: 'translating',\r\n          feature: this.selection_.item(0),\r\n          features: this.selection_,\r\n          delta: [deltaX, deltaY],\r\n          pixel: evt.pixel,\r\n          coordinate: evt.coordinate\r\n        })\r\n        break\r\n      }\r\n      case 'scale': {\r\n        var center = this.center_\r\n        if (this.get('modifyCenter')(evt)) {\r\n          var extentCoordinates = this.extent_\r\n          if (this.get('enableRotatedTransform') && viewRotation !== 0) {\r\n            extentCoordinates = this.rotatedExtent_\r\n          }\r\n          center = extentCoordinates[(Number(this.opt_) + 2) % 4]\r\n        }\r\n        var keepRectangle = (this.geoms_.length == 1 && this._isRectangle(this.geoms_[0]))\r\n        var stretch = this.constraint_\r\n        var opt = this.opt_\r\n\r\n        var downCoordinate = this.coordinate_\r\n        var dragCoordinate = evt.coordinate\r\n        if (this.get('enableRotatedTransform') && viewRotation !== 0) {\r\n          var downPoint = new ol_geom_Point(this.coordinate_)\r\n          downPoint.rotate(viewRotation * -1, center)\r\n          downCoordinate = downPoint.getCoordinates()\r\n\r\n          var dragPoint = new ol_geom_Point(evt.coordinate)\r\n          dragPoint.rotate(viewRotation * -1, center)\r\n          dragCoordinate = dragPoint.getCoordinates()\r\n        }\r\n\r\n        var scx = ((dragCoordinate)[0] - (center)[0]) / (downCoordinate[0] - (center)[0])\r\n        var scy = ((dragCoordinate)[1] - (center)[1]) / (downCoordinate[1] - (center)[1])\r\n        var displacementVector = [dragCoordinate[0] - downCoordinate[0], (dragCoordinate)[1] - downCoordinate[1]]\r\n\r\n        if (this.get('enableRotatedTransform') && viewRotation !== 0) {\r\n          var centerPoint = new ol_geom_Point(center)\r\n          centerPoint.rotate(viewRotation * -1, this.getMap().getView().getCenter())\r\n          center = centerPoint.getCoordinates()\r\n        }\r\n\r\n        if (this.get('noFlip')) {\r\n          if (scx < 0)\r\n            scx = -scx\r\n          if (scy < 0)\r\n            scy = -scy\r\n        }\r\n\r\n        if (this.constraint_) {\r\n          if (this.constraint_ == \"h\")\r\n            scx = 1\r\n          else\r\n            scy = 1\r\n        } else {\r\n          if (this.get('keepAspectRatio')(evt)) {\r\n            scx = scy = Math.min(scx, scy)\r\n          }\r\n        }\r\n\r\n        for (i = 0, f; f = this.selection_.item(i); i++) {\r\n          geometry = (viewRotation === 0 || !this.get('enableRotatedTransform')) ? this.geoms_[i].clone() : this.rotatedGeoms_[i].clone()\r\n          geometry.applyTransform(function (g1, g2, dim) {\r\n            if (dim < 2) return g2\r\n\r\n            if (!keepRectangle) {\r\n              for (j = 0; j < g1.length; j += dim) {\r\n                if (scx != 1)\r\n                  g2[j] = center[0] + (g1[j] - center[0]) * scx\r\n                if (scy != 1)\r\n                  g2[j + 1] = center[1] + (g1[j + 1] - center[1]) * scy\r\n              }\r\n            } else {\r\n              var pointArray = [[6], [0, 8], [2], [4]]\r\n              var pointA = [g1[0], g1[1]]\r\n              var pointB = [g1[2], g1[3]]\r\n              var pointC = [g1[4], g1[5]]\r\n              var pointD = [g1[6], g1[7]]\r\n              var pointA1 = [g1[8], g1[9]]\r\n\r\n              if (stretch) {\r\n                var base = (opt % 2 === 0) ? this._countVector(pointA, pointB) : this._countVector(pointD, pointA)\r\n                var projectedVector = this._projectVectorOnVector(displacementVector, base)\r\n                var nextIndex = opt + 1 < pointArray.length ? opt + 1 : 0\r\n                var coordsToChange = [...pointArray[opt], ...pointArray[nextIndex]]\r\n\r\n                for (j = 0; j < g1.length; j += dim) {\r\n                  g2[j] = coordsToChange.includes(j) ? g1[j] + projectedVector[0] : g1[j]\r\n                  g2[j + 1] = coordsToChange.includes(j) ? g1[j + 1] + projectedVector[1] : g1[j + 1]\r\n                }\r\n              } else {\r\n                var projectedLeft, projectedRight\r\n                switch (opt) {\r\n                  case 0:\r\n                    displacementVector = this._countVector(pointD, dragCoordinate)\r\n                    projectedLeft = this._projectVectorOnVector(displacementVector, this._countVector(pointC, pointD))\r\n                    projectedRight = this._projectVectorOnVector(displacementVector, this._countVector(pointA, pointD));\r\n                    [g2[0], g2[1]] = this._movePoint(pointA, projectedLeft);\r\n                    [g2[4], g2[5]] = this._movePoint(pointC, projectedRight);\r\n                    [g2[6], g2[7]] = this._movePoint(pointD, displacementVector);\r\n                    [g2[8], g2[9]] = this._movePoint(pointA1, projectedLeft)\r\n                    break\r\n                  case 1:\r\n                    displacementVector = this._countVector(pointA, dragCoordinate)\r\n                    projectedLeft = this._projectVectorOnVector(displacementVector, this._countVector(pointD, pointA))\r\n                    projectedRight = this._projectVectorOnVector(displacementVector, this._countVector(pointB, pointA));\r\n                    [g2[0], g2[1]] = this._movePoint(pointA, displacementVector);\r\n                    [g2[2], g2[3]] = this._movePoint(pointB, projectedLeft);\r\n                    [g2[6], g2[7]] = this._movePoint(pointD, projectedRight);\r\n                    [g2[8], g2[9]] = this._movePoint(pointA1, displacementVector)\r\n                    break\r\n                  case 2:\r\n                    displacementVector = this._countVector(pointB, dragCoordinate)\r\n                    projectedLeft = this._projectVectorOnVector(displacementVector, this._countVector(pointA, pointB))\r\n                    projectedRight = this._projectVectorOnVector(displacementVector, this._countVector(pointC, pointB));\r\n                    [g2[0], g2[1]] = this._movePoint(pointA, projectedRight);\r\n                    [g2[2], g2[3]] = this._movePoint(pointB, displacementVector);\r\n                    [g2[4], g2[5]] = this._movePoint(pointC, projectedLeft);\r\n                    [g2[8], g2[9]] = this._movePoint(pointA1, projectedRight)\r\n                    break\r\n                  case 3:\r\n                    displacementVector = this._countVector(pointC, dragCoordinate)\r\n                    projectedLeft = this._projectVectorOnVector(displacementVector, this._countVector(pointB, pointC))\r\n                    projectedRight = this._projectVectorOnVector(displacementVector, this._countVector(pointD, pointC));\r\n                    [g2[2], g2[3]] = this._movePoint(pointB, projectedRight);\r\n                    [g2[4], g2[5]] = this._movePoint(pointC, displacementVector);\r\n                    [g2[6], g2[7]] = this._movePoint(pointD, projectedLeft)\r\n                    break\r\n                }\r\n              }\r\n            }\r\n\r\n            // bug: ol, bad calculation circle geom extent\r\n            if (geometry.getType() == 'Circle') geometry.setCenterAndRadius(geometry.getCenter(), geometry.getRadius())\r\n            return g2\r\n          }.bind(this))\r\n          if (this.get('enableRotatedTransform') && viewRotation !== 0) {\r\n            //geometry.rotate(viewRotation, rotationCenter);\r\n            geometry.rotate(viewRotation, this.getMap().getView().getCenter())\r\n          }\r\n          f.setGeometry(geometry)\r\n        }\r\n        this.drawSketch_()\r\n        this.dispatchEvent({\r\n          type: 'scaling',\r\n          feature: this.selection_.item(0),\r\n          features: this.selection_,\r\n          scale: [scx, scy],\r\n          pixel: evt.pixel,\r\n          coordinate: evt.coordinate\r\n        })\r\n        break\r\n      }\r\n      default: break\r\n    }\r\n    this.isUpdating_ = false\r\n  }\r\n  /**\r\n   * @param {ol.MapBrowserEvent} evt Event.\r\n   * @private\r\n   */\r\n  handleMoveEvent_(evt) {\r\n    if (!this._handleEvent(evt, this.features_))\r\n      return\r\n    // console.log(\"handleMoveEvent\");\r\n    if (!this.mode_) {\r\n      var sel = this.getFeatureAtPixel_(evt.pixel)\r\n      var element = evt.map.getTargetElement()\r\n      if (sel.feature) {\r\n        var c = sel.handle ? this.Cursors[(sel.handle || 'default') + (sel.constraint || '') + (sel.option || '')] : this.Cursors.select\r\n\r\n        if (this.previousCursor_ === undefined) {\r\n          this.previousCursor_ = element.style.cursor\r\n        }\r\n        element.style.cursor = c\r\n      } else {\r\n        if (this.previousCursor_ !== undefined)\r\n          element.style.cursor = this.previousCursor_\r\n        this.previousCursor_ = undefined\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * @param {ol.MapBrowserEvent} evt Map browser event.\r\n   * @return {boolean} `false` to stop the drag sequence.\r\n   */\r\n  handleUpEvent_(evt) {\r\n    // remove rotate0 cursor on Up event, otherwise it's stuck on grab/grabbing\r\n    if (this.mode_ === 'rotate') {\r\n      var element = evt.map.getTargetElement()\r\n      element.style.cursor = this.Cursors.default\r\n      this.previousCursor_ = undefined\r\n    }\r\n\r\n    //dispatchEvent\r\n    this.dispatchEvent({\r\n      type: this.mode_ + 'end',\r\n      feature: this.selection_.item(0),\r\n      features: this.selection_,\r\n      oldgeom: this.geoms_[0],\r\n      oldgeoms: this.geoms_\r\n    })\r\n\r\n    this.drawSketch_()\r\n    this.mode_ = null\r\n    return false\r\n  }\r\n  /** Set the point radius to calculate handles on points\r\n   *  @param {number|Array<number>|function} [pointRadius=0] radius for points or a function that takes a feature and returns the radius (or [radiusX, radiusY]). If not null show handles to transform the points\r\n   */\r\n  setPointRadius(pointRadius) {\r\n    if (typeof (pointRadius) === 'function') {\r\n      this._pointRadius = pointRadius\r\n    } else {\r\n      this._pointRadius = function () { return pointRadius }\r\n    }\r\n  }\r\n  /** Get the features that are selected for transform\r\n   * @return ol.Collection\r\n   */\r\n  getFeatures() {\r\n    return this.selection_;\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n  _projectVectorOnVector(displacement_vector, base) {\r\n    var k = (displacement_vector[0] * base[0] + displacement_vector[1] * base[1]) / (base[0] * base[0] + base[1] * base[1]);\r\n    return [base[0] * k, base[1] * k];\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n  _countVector(start, end) {\r\n    return [end[0] - start[0], end[1] - start[1]];\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n  _movePoint(point, displacementVector) {\r\n    return [point[0]+displacementVector[0], point[1]+displacementVector[1]];\r\n  }\r\n  \r\n  \r\n}\r\n\r\n/** Cursors for transform\r\n*/\r\nol_interaction_Transform.prototype.Cursors = {\r\n  'default': 'auto',\r\n  'select': 'pointer',\r\n  'translate': 'move',\r\n  'rotate': 'move',\r\n  'rotate0': 'move',\r\n  'scale': 'nesw-resize',\r\n  'scale1': 'nwse-resize',\r\n  'scale2': 'nesw-resize',\r\n  'scale3': 'nwse-resize',\r\n  'scalev': 'ew-resize',\r\n  'scaleh1': 'ns-resize',\r\n  'scalev2': 'ew-resize',\r\n  'scaleh3': 'ns-resize'\r\n};\r\n\r\nexport default ol_interaction_Transform\r\n","/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n  69: '`width` or `height` cannot be provided together with `scale`',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n  let i;\n  if (direction > 0) {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n  } else if (direction < 0) {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n  } else {\n    for (i = 1; i < n; ++i) {\n      if (arr[i] == target) {\n        return i;\n      } else if (arr[i] < target) {\n        if (typeof direction === 'function') {\n          if (direction(target, arr[i - 1], arr[i]) > 0) {\n            return i - 1;\n          }\n          return i;\n        } else if (arr[i - 1] - target < target - arr[i]) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    } else if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    } else if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use \"flat\" style object literals instead of\n   * using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.).  See the documentation\n   * for the [flat style types]{@link module:ol/style/flat~FlatStyle} to see what properties are supported.\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link module:ol/Map~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../Map.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    // `width` or `height` cannot be provided together with `scale`\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      69\n    );\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.height_ = options.height;\n\n    /**\n     * Recalculate the scale if width or height where given.\n     */\n    if (this.width_ !== undefined || this.height_ !== undefined) {\n      const image = this.getImage(1);\n      const setScale = () => {\n        this.updateScaleFromWidthAndHeight(this.width_, this.height_);\n      };\n      if (image.width > 0) {\n        this.updateScaleFromWidthAndHeight(this.width_, this.height_);\n      } else {\n        image.addEventListener('load', setScale);\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n      width: this.width_,\n      height: this.height_,\n    });\n  }\n\n  /**\n   * Set the scale of the Icon by calculating it from given width and height and the\n   * width and height of the image.\n   *\n   * @private\n   * @param {number} width The width.\n   * @param {number} height The height.\n   */\n  updateScaleFromWidthAndHeight(width, height) {\n    const image = this.getImage(1);\n    if (width !== undefined && height !== undefined) {\n      super.setScale([width / image.width, height / image.height]);\n    } else if (width !== undefined) {\n      super.setScale([width / image.width, width / image.width]);\n    } else if (height !== undefined) {\n      super.setScale([height / image.height, height / image.height]);\n    } else {\n      super.setScale([1, 1]);\n    }\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels).\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Get the height of the icon (in pixels).\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    return this.height_;\n  }\n\n  /**\n   * Set the width of the icon in pixels.\n   *\n   * @param {number} width The width to set.\n   */\n  setWidth(width) {\n    this.width_ = width;\n    this.updateScaleFromWidthAndHeight(width, this.height_);\n  }\n\n  /**\n   * Set the height of the icon in pixels.\n   *\n   * @param {number} height The height to set.\n   */\n  setHeight(height) {\n    this.height_ = height;\n    this.updateScaleFromWidthAndHeight(this.width_, height);\n  }\n\n  /**\n   * Set the scale and updates the width and height correspondingly.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @override\n   * @api\n   */\n  setScale(scale) {\n    super.setScale(scale);\n    const image = this.getImage(1);\n    if (image) {\n      const widthScale = Array.isArray(scale) ? scale[0] : scale;\n      if (widthScale !== undefined) {\n        this.width_ = widthScale * image.width;\n      }\n      const heightScale = Array.isArray(scale) ? scale[1] : scale;\n      if (heightScale !== undefined) {\n        this.height_ = heightScale * image.height;\n      }\n    }\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `text-placement: 'point'`. For `text-placement: 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `text-placement: 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, tempExtent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.2.2';\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import BoundingBoxMap from './BoundingBoxMap';\nvar BoundingBoxMapElement = /** @class */ (function () {\n    function BoundingBoxMapElement() {\n        var elements = document.querySelectorAll('.bboxmap');\n        var _loop_1 = function (i) {\n            var currentElementSection = elements[i];\n            var selectElement = currentElementSection.querySelector('input[type=\"text\"]');\n            var newBoundingBoxStringList = selectElement.value;\n            var map = new BoundingBoxMap(currentElementSection, newBoundingBoxStringList, function (newBoundingBoxStringList) {\n                selectElement.value = newBoundingBoxStringList;\n            });\n            selectElement.addEventListener('change', function (event) {\n                var inputTarget = event.target;\n                inputTarget.classList.add('has-change');\n                map.updateBoundingBox(inputTarget.value);\n            });\n        };\n        for (var i = 0; i < elements.length; i++) {\n            _loop_1(i);\n        }\n    }\n    return BoundingBoxMapElement;\n}());\nnew BoundingBoxMapElement();\n"],"names":["module","exports","t","r","e","a","h","n","o","s","l","Math","log","f","exp","u","sqrt","max","floor","min","p","d","x","i","length","this","_maxEntries","_minEntries","ceil","clear","indexOf","children","minX","minY","maxX","maxY","leaf","m","c","height","pop","push","prototype","all","_all","data","search","toBBox","collides","load","insert","_build","slice","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","pow","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","BoundingBoxMap","parent","boundingBoxStringList","onChangeCallback","_this","onChangeCallBack","mount","bboxTextToArray","boundingBox","buildMap","buildFeatureLayers","initInteraction","registerEvents","fitBBox","updateBoundingBox","newCoordinates","bbox","getGeometry","setCoordinates","value","stringArray","split","southWest","fromLonLat","parseFloat","northEast","extent","vectorLayer","getSource","getExtent","isEmpty","map","getView","setCenter","setZoom","fit","padding","roundCoordValue","coord","round","buildBoundingBoxRectString","coordinates","getFlatCoordinates","Number","MAX_VALUE","MIN_VALUE","isNaN","toLonLat","join","updateBBoxRounded","roundedArray","bboxRounded","layers","source","target","querySelector","view","zoom","wrapX","addLayer","addFeature","styles","stroke","color","width","fill","staticVectorLayer","style","interaction","enableRotatedTransform","addCondition","shiftKeyOnly","hitTolerance","translateFeature","scale","rotate","keepAspectRatio","undefined","keepRectangle","translate","stretch","pointRadius","radius","get","addInteraction","on","evt","ol_interaction_Transform","constructor","options","super","handleDownEvent","self","handleDownEvent_","handleDragEvent","handleDragEvent_","handleMoveEvent","handleMoveEvent_","handleUpEvent","handleUpEvent_","selection_","handles_","overlayLayer_","features","useSpatialIndex","name","displayInLayerSwitcher","feature","features_","_filter","filter","layers_","Array","_handleEvent","condition","addFn_","setPointRadius","set","translateBBox","originalEvent","shiftKey","modifyCenter","metaKey","ctrlKey","noFlip","selection","drawSketch_","setDefaultStyle","setMap","oldMap","getMap","targetElement","getTargetElement","removeLayer","previousCursor_","cursor","select","isTouch","test","getViewport","className","setActive","b","setVisible","pointStroke","strokedash","lineDash","fill0","pointFill","circle","displacement","points","setDisplacement","getAnchor","bigpt","angle","PI","smallpt","createStyle","img","image","setStyle","olstyle","im","getImage","setScale","tx","getText","setOffsetX","getFeatureAtPixel_","pixel","forEachFeatureAtPixel","layer","found","bbox_","handle","constraint","option","forEach","getArray","some","getGeometryRotateToZero_","clone","origGeom","viewRotation","getRotation","rotGeom","getCenter","_isRectangle","geom","getType","getCoordinates","center","item","getLength","coords","ext","unshift","extendExt","bind","ptRadius","_pointRadius","ispt_","geometry","center_","getPixelFromCoordinate","dx","dy","getCoordinateFromPixel","g","iscircle_","addFeatures","add","index","removeAt","watchFeatures_","dispatchEvent","type","setSelection","_featureListeners","isUpdating_","sel","mode_","opt_","constraint_","coordinate_","coordinate","pixel_","geoms_","rotatedGeoms_","rotExtent","extent_","rotatedExtent_","element","Cursors","rotate0","angle_","atan2","j","pt0","pt","ispt","setCenterAndRadius","getRadius","setGeometry","deltaX","deltaY","delta","extentCoordinates","opt","downCoordinate","dragCoordinate","downPoint","dragPoint","scx","scy","displacementVector","centerPoint","applyTransform","g1","g2","dim","pointArray","pointA","pointB","pointC","pointD","pointA1","base","_countVector","projectedVector","_projectVectorOnVector","coordsToChange","includes","projectedLeft","projectedRight","_movePoint","default","oldgeom","oldgeoms","getFeatures","displacement_vector","k","start","end","point","messages","AssertionError","Error","code","message","Property","CollectionEvent","Collection","array","once","un","unique_","unique","array_","ii","assertUnique_","updateLength_","extend","arr","insertAt","elem","prev","setAt","except","ADD","REMOVE","disposed","dispose","disposeInternal","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","addChangeListener","handleGeometryChanged_","properties","setProperties","hasProperties","getProperties","setGeometryName","getGeometryName","getStyle","getId","getStyleFunction","handleGeometryChange_","changed","unlistenByKey","listen","createStyleFunction","setId","id","removeChangeListener","obj","isArray","assert","ImageWrapper","resolution","pixelRatio","src","crossOrigin","imageLoadFunction","src_","image_","Image","unlisten_","state","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","getHeight","listenImage","setImage","loadHandler","errorHandler","listening","decoding","loaded","listenerKeys","listenOnce","IMAGE_DECODE","decode","then","catch","error","ImageBase","pixelRatio_","abstract","getPixelRatio","getResolution","getState","IDLE","LOADING","LOADED","ERROR","EMPTY","ImageTile","tileCoord","tileLoadFunction","crossOrigin_","key","tileLoadFunction_","ctx","createCanvasContext2D","fillStyle","fillRect","canvas","getBlankImage","naturalWidth","naturalHeight","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","initialVelocity_","begin","update","y","Date","now","lastIndex","firstIndex","duration","getDistance","getAngle","removeLayerMapProperty","setMapInternal","getLayers","setLayerMapProperty","Map","optionsInternal","keyboardEventTarget","document","getElementById","values","layerGroup","controls","interactions","overlays","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","DEVICE_PIXEL_RATIO","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","create","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","createElement","window","position","overflow","overlayContainer_","zIndex","pointerEvents","appendChild","overlayContainerStopEvent_","mapBrowserEventHandler_","moveTolerance_","moveTolerance","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","onFocusOnly","overlays_","overlayIdIndex_","renderer_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addEventListener","event","addOverlayInternal_","toString","control","addControl","getControls","getInteractions","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","setTarget","callback","getCoordinateFromPixelInternal","layerFilter","TRUE","checkWrapped","forEachFeatureAtCoordinate","getFeaturesAtPixel","getAllLayers","addLayersFrom","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","getEventPixel","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","viewportSize","getSize","scaleX","scaleY","eventPosition","changedTouches","clientX","left","clientY","top","getTarget","toUserCoordinate","getProjection","frameState","pixelToCoordinateTransform","getOverlayById","setLayers","group","collection","getLoadingOrNotReady","layerStatesArray","getLayerStatesArray","visible","renderer","getRenderer","ready","loading","viewCoordinate","fromUserCoordinate","getPixelFromCoordinateInternal","coordinateToPixelTransform","getOverlayContainer","getOverlayContainerStopEvent","getOwnerDocument","ownerDocument","tile","tileSourceKey","tileCenter","tileResolution","browserEvent","mapBrowserEvent","handleMapBrowserEvent","eventType","doc","rootNode","getRootNode","contains","documentElement","interactionsArray","getActive","handleEvent","propagationStopped","handlePostRender","tileQueue","maxTotalLoading","maxNewLoads","hints","viewHints","lowOnFrameBudget","time","getTilesLoading","reprioritize","loadMoreTiles","animate","hasListener","dispatchRenderEvent","postRenderFunctions","getAnimating","resolveConstraints","render","removeEventListener","removeNode","unobserve","ShadowRoot","host","PASSIVE_EVENT_LISTENERS","passive","observe","clearTimeout","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","GroupEvent","handleLayerRemove_","isRendered","renderFrame_","renderSync","redrawText","layerStates","hasRenderer","handleFontsChanged","requestAnimationFrame","removeControl","removeInteraction","removeOverlay","size","previousFrameState","hasArea","isDef","getHints","viewState","declutterTree","getForViewAndSize","rotation","layerIndex","usedTiles","wantedTiles","mapId","getUid","renderTargets","nextCenter","nextResolution","nextRotation","nextExtent","renderFrame","equals","createOrUpdateEmpty","getCount","setTimeout","setLayerGroup","oldLayerGroup","setSize","computedStyle","getComputedStyle","offsetWidth","offsetHeight","getClientRects","warn","oldSize","parseInt","setViewportSize","MapBrowserEvent","dragging","activePointers","preventDefault","stopPropagation","MapBrowserEventHandler","map_","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","down_","activePointers_","trackedTouches_","element_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","updateActivePointers_","pointerId","Object","handlePointerUp_","defaultPrevented","isMouseActionButton_","button","property","VOID","handlePointerMove_","isMoving_","cancelable","abs","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapEvent","POSTRENDER","MOVESTART","MOVEEND","LOADSTART","LOADEND","LAYERGROUP","SIZE","TARGET","VIEW","ObjectEvent","oldValue","BaseObject","values_","hasOwnProperty","getKeys","keys","assign","notify","listener","silent","applyProperties","unset","PROPERTYCHANGE","Observable","revision_","getRevision","onInternal","len","onceInternal","ol_key","unInternal","unByKey","Tile","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getKey","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","easeIn","inTransition","endTransition","TileCache","expireCache","canExpireCache","peekLast","pruneExceptNewestZ","peekFirstKey","z","fromKey","TileQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","enqueue","added","tileKey","newLoads","dequeue","DROP","TileRange","containsXY","containsTileRange","tileRange","getWidth","intersects","createOrUpdate","DEFAULT_MIN_ZOOM","View","hints_","animations_","updateAnimationKey_","projection_","createProjection","projection","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","disableCoordinateWarning","fromUserExtent","applyOptions_","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","maxResolution","minResolution_","minResolution","zoomFactor_","zoomFactor","resolutions_","resolutions","padding_","minZoom_","minZoom","centerConstraint","createCenterConstraint","resolutionConstraint","rotationConstraint","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","oldPadding","newPadding","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","var_args","args","arguments","anchor","animateInternal","animationCount","animationCallback","series","animation","complete","easing","inAndOut","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","modulo","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","cancelAnimations","jj","NaN","more","seriesComplete","elapsed","fraction","progress","x0","y0","x1","y1","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","Boolean","currentCenter","currentResolution","w","cos","sin","getConstraints","getConstrainResolution","calculateExtent","calculateExtentInternal","toUserExtent","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","maxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","constrainResolution","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","xResolution","yResolution","getResolutionForValueFunction","power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","offset","nearest","linearFindNearest","baseLevel","clamp","geometryOrExtent","userProjection","getUserProjection","transform","fitInternal","rotatedExtentForGeometry","cosAngle","sinAngle","stride","getStride","minRotX","Infinity","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","adjustCenterInternal","adjustResolution","ratio","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","direction","easeOut","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","returnValue","smooth","smoothExtentConstraint","createExtent","constrainOnlyCenter","multiWorld","isGlobal","smoothResolutionConstraint","showFullExtent","projExtent","createSnapToResolutions","createMinMaxResolution","defaultMaxResolution","METERS_PER_UNIT","getMetersPerUnit","DEFAULT_TILE_SIZE","defaultMinResolution","createSnapToPower","enableRotation","constrainRotation","createSnapToZero","createSnapToN","disable","ANIMATING","INTERACTING","CENTER","RESOLUTION","ROTATION","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","reverseSubArray","tmp","extension","arr1","arr2","len1","stableSort","compareFnc","isSorted","func","strict","compare","every","currentVal","res","assertion","errorCode","onlyCenter","viewWidth","viewHeight","shiftX","shiftY","none","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","fromNamed","el","body","rgb","removeChild","fromString","cache","cacheSize","exec","hasAlpha","substr","startsWith","normalize","fromStringInternal_","asArray","isStringColor","asColorLike","levels","info","level","setLevel","console","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","String","title","handleClick_","cssClasses","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","layerState","inView","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","display","removeChildren","innerHTML","handleToggle_","classList","toggle","replaceNode","getCollapsible","setCollapsed","getCollapsed","mapEvent","Control","target_","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","CLASS_HIDDEN","resetNorth_","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","defaults","zoomOptions","rotateOptions","attribution","attributionOptions","closestOnCircle","closestOnSegment","segment","x2","y2","along","createStringXY","fractionDigits","toStringXY","degreesToStringHDMS","hemispheres","degrees","normalizedDegrees","decimals","deg","sec","toFixed","hdms","padNumber","charAt","format","template","replace","coordinate1","coordinate2","squaredDistance","coord1","coord2","distance","squaredDistanceToSegment","toStringHDMS","canWrapX","worldWidth","worldsAway","getWorldsAway","sourceExtentWidth","projectionExtent","CLASS_SELECTABLE","CLASS_UNSUPPORTED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","canvasPool","settings","shift","WORKER_OFFSCREEN_CANVAS","OffscreenCanvas","getContext","releaseCanvas","context","clearRect","outerWidth","marginLeft","marginRight","outerHeight","marginTop","marginBottom","newNode","oldNode","parentNode","replaceChild","node","lastChild","replaceChildren","oldChildren","childNodes","oldChild","newChild","insertBefore","linear","upAndDown","thisArg","originalListener","eventsKey","CHANGE","BLUR","CLEAR","CONTEXTMENU","DRAGENTER","DRAGOVER","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","LEFT","UP","RIGHT","DOWN","Target","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","listenersForType","isString","dispatching","pendingRemovals","propagate","call","pr","getListeners","conditions","pass","altKeyOnly","altKey","altShiftKeysOnly","focus","activeElement","focusWithTabindex","hasAttribute","always","click","mouseActionButton","WEBKIT","MAC","never","FALSE","pointerMove","singleClick","doubleClick","noModifierKeys","platformModifierKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","touchOnly","pointerEvt","penOnly","primaryAction","isPrimary","boundingExtent","createEmpty","extendCoordinate","buffer","dest","closestSquaredDistanceXY","containsCoordinate","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","extendFlatCoordinates","createOrUpdateFromRings","rings","extendRings","approximatelyEquals","tolerance","extendXY","forEachCorner","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getCorner","corner","getEnlargedArea","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersectionArea","getIntersection","intersection","getMargin","returnOrUpdate","scaleFromCenter","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","transformFn","stops","xs","ys","_boundingExtentXYs","wrapAndSliceX","isFinite","UNKNOWN","INTERSECTING","ABOVE","BELOW","withCredentials","loadFeaturesXhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","setWithCredentials","xhrWithCredentials","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","toPromise","getter","err","Promise","reject","resolve","promiseGetter","tmpTransform","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","intersectsCoordinate","computeExtent","sx","sy","simplify","intersectsExtent","destination","sourceProj","getUnits","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","compose","transform2D","getTransform","LinearRing","layout","maxDelta_","maxDeltaRevision_","setFlatCoordinates","maxSquaredDelta","assignClosestPoint","linearRing","inflateCoordinates","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","douglasPeucker","setLayout","deflateCoordinates","Point","deflateCoordinate","Polygon","ends","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","arrayMaxSquaredDelta","assignClosestArrayPoint","linearRingsContainsXY","getOrientedFlatCoordinates","linearRings","right","orientLinearRings","inflateCoordinatesArray","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPointOfArray","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRingsAreOriented","simplifiedEnds","quantizeArray","intersectsLinearRingArray","deflateCoordinatesArray","circular","sphereRadius","fromExtent","fromCircle","sides","getLayout","arrayLength","makeRegular","startAngle","SimpleGeometry","getFirstCoordinate","getLastCoordinate","simplifiedGeometry","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","twiceArea","linearRingss","endss","assignClosest","offset1","offset2","lerp","squaredDelta","multiArrayMaxSquaredDelta","maxDelta","isRing","tmpPoint","assignClosestMultiArrayPoint","linearRingContainsExtent","linearRingContainsXY","wn","linearRingssContainsXY","coordinatess","deflateMultiCoordinatesArray","coordinatesss","inflateMultiCoordinatesArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","intersectsLineString","coordinatesExtent","point1","point2","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingMultiArray","lineStringLength","linearRingLength","perimeter","linearRingIsClockwise","edge","isClockwise","linearRingssAreOriented","orientLinearRingsArray","inflateEnds","prevEndIndex","ret","simplifyLineString","highQuality","radialDistance","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredSegmentDistance","douglasPeuckerArray","douglasPeuckerMultiArray","simplifiedEndss","snap","quantize","dx1","dy1","dx2","dy2","quantizeMultiArray","matchingChunk","maxAngle","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","drawTextOnPath","text","startM","measureAndCacheTextWidth","font","segmentM","advance","beginX","beginY","startOffset","startLength","endM","reverse","flat","result","singleSegment","previousAngle","iStart","charLength","chars","substring","anchorX","anchorY","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","SAFARI_BUG_237906","devicePixelRatio","WorkerGlobalScope","defineProperty","DoubleClickZoom","delta_","stopEvent","zoomByDelta","DragBoxEventType","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","startPixel_","condition_","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","startPixel","endPixel","setPixels","completeBox","DragPan","stopDown","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","noKinetic_","targetPointers","centroid","centerpx","DragRotate","lastAngle_","theta","DragZoom","out_","out","factor","Interaction","active","pan","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","mapUnitsDelta","KeyboardZoom","charCode","charCodeAt","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","handlingDownUpSequence","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","PointerInteraction","getPointerCount","updateTrackedPointers_","handledUp","handled","ACTIVE","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","BaseLayer","background_","background","opacity","className_","state_","getBackground","getClassName","getLayerState","managed","getZIndex","getOpacity","getVisible","getLayersArray","states","getSourceState","setBackground","setExtent","setMaxResolution","setMinResolution","setOpacity","setZIndex","zindex","BaseTileLayer","baseOptions","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","getData","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","renderDeclutter","setRenderOrder","renderOrder","styleLike","createDefaultStyle","toStyle","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","handleLayerChange_","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","currentLayers","pos","ownLayerState","defaultZIndex","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","rendered","handleSourcePropertyChange_","setSource","getRenderSource","handleSourceChange_","layerRenderer","prepareFrame","unrender","getMapInternal","arrayLayerState","createRenderer","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MAX_ZOOM","MIN_ZOOM","SOURCE","MAP","TileLayer","PRELOAD","USE_INTERIM_TILES_ON_ERROR","VectorLayer","tileGrid","getZForResolution","fromUserResolution","getTileRangeForExtentAndZ","extents","getTileCoordExtent","solveLinearSystem","mat","maxRow","maxEl","absValue","coef","toDegrees","angleInRadians","toRadians","angleInDegrees","object","showCoordinateWarning","cloneTransform","input","output","identityTransform","addProjection","getCode","addProjections","projections","projectionLike","getPointResolution","units","pointResolution","getPointResolutionFunc","metersPerUnit","projUnits","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","clearAllProjections","defaultCode","createTransformFromCoordinateTransform","coordTransform","dimension","pointLength","addCoordinateTransforms","forward","inverse","destProj","lonLat","lon","equivalent","equalUnits","sourceProjection","destinationProjection","sourceCode","destinationCode","transformFunc","transformExtent","transformWithProjections","setUserProjection","clearUserProjection","useGeographic","destProjection","toUserResolution","sourceUnits","userUnits","createSafeCoordinateTransform","transformed","sourceExtent","addCommon","fromEPSG4326","code_","units_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","getAxisOrientation","setGlobal","getDefaultTileGrid","setDefaultTileGrid","setWorldExtent","setGetPointResolution","unitByCode","fromCode","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","cosh","PROJECTIONS","atan","EPSG4326Projection","transforms","RenderBox","geometry_","endPixel_","render_","px","createOrUpdateGeometry","RenderEvent","inversePixelTransform","PRERENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","drawCustom","hitDetectionRenderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","strokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureFont","measureContext","textHeights","registerFont","retries","referenceFonts","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","reduce","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","rotateAtOffset","drawImageOrLabel","labelOrImage","originX","originY","save","globalAlpha","setTransform","contextInstructions","executeLabelInstructions","drawImage","restore","CanvasBuilder","maxExtent","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","tmpCoord","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","getEndss","myEnds","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","lineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","lineDashOffset","strokeStyleLineJoin","getLineJoin","lineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","miterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","BATCH_CONSTRUCTORS","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","tmpExtent","p1","p2","p3","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","fromCharCode","horizontalTextAlign","align","TEXT_ALIGN","createTextChunks","acc","line","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","fillStates","strokeStates","textStates","widths_","labels_","createLabel","textKey","fillKey","strokeKey","strokeState","fillState","textState","textIsArray","justify","textAlign","strokeWidth","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","strokeInstruction","beginPath","moveTo","lineTo","fill_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","origin","repeatSize","setLineDash","drawLabelWithPointPlacement_","baseline","textBaseline","execute_","featureCallback","hitExtent","pixelCoordinates","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotationFromTransform","batchSize","currentGeometry","arc","closePath","rotateWithView","declutterMode","labelWithAnchor","textOffsetX","textOffsetY","geometryWidths","backgroundFill","backgroundStroke","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","textScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","execute","executeHitDetection","ORDER","circlePixelIndexArrayCache","getPixelIndexArray","maxDistanceSq","distances","distanceSq","pixelIndex","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","clip","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","willReadFrequently","indexes","imageData","getImageData","idx","zs","executor","builderTypes","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","scale_","width_","declutterMode_","declutterImageWithText_","myBegin","sharedData","getOrigin","getHitDetectionImage","getRotateWithView","getScaleArray","getDeclutterMode","CanvasImmediateRenderer","userTransform","context_","transform_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","tmpLocalTransform_","drawImages_","localTransform","alpha","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","getFill","getStroke","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","flatInteriorPoints","getFlatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","getOffsetX","getOffsetY","textRotateWithView","textRotation","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","beginPathInstruction","closePathInstruction","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","CanvasTextBuilder","textKey_","fillKey_","strokeKey_","geometryType","placement","beg","keep","saveTextStates_","p0","flatEnd","flatOffset","oo","range","drawChars_","getOverflow","getMaxAngle","getPlacement","getJustify","getBackgroundFill","getBackgroundStroke","getPadding","HIT_DETECT_RESOLUTION","createHitDetectionImageData","styleFunction","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","setColor","setText","imgSize","getImageSize","imgContext","anchorXUnits","anchorYUnits","getScale","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","CompositeMapRenderer","fontChangeListenerKey_","container","firstChild","children_","calculateMatrices2D","declutterLayers","previousElement","sourceState","scheduleExpireIconCache","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","createLoadedTileFinder","forEachLoadedTile","matches","getLayer","renderIfReadyAndVisible","loadImage","imageState","MapRenderer","makeInverse","thisArg2","translatedCoordinate","offsets","numLayers","getWrapX","order","expireIconCache","pixelContext","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpTileRange_","isDrawableTile","tileState","getTile","layerExtent","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","tileSize","toSize","getTileSize","gutter","getGutterForProjection","viewResolution","viewCenter","tileSource","sourceRevision","zDirection","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","viewport","tileCoordIntersectsViewport","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","getInterpolate","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","tileCallback","tileCount","isKeyQueued","getTileCoordCenter","useTile","updateCacheSize","CanvasVectorLayerRenderer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","compositionContext_","renderWorlds","executorGroup","vectorSource","endWorld","world","setupCompositionContext_","compositionContext","releaseCompositionContext_","makeScale","replayGroup","clipped","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","loadExtent","declutterBuilderGroup","userExtent","loadFeatures","dirty","renderFeature","getFeaturesInExtent","replayGroupInstructions","getOverlaps","builderGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","getImageState","imageBuilderGroup","imageReplay","textBuilderGroup","textReplay","lineStringReplay","polygonReplay","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","unlistenImageChange","listenImageChange","renderGeometry","renderFeatureInternal","getGeometries","getHitDetectionRenderer","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","calculateSourceExtentResolution","targetExtent","triangulation","sources","renderEdges","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","isBrokenDiagonalRendering","steps","ud","vd","step","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","errorThreshold","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","maxSourceExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","ERROR_THRESHOLD","triangulation_","calculateSourceExtent","sourceRange","srcX","srcY","reproject_","leftToLoad","sourceListenKey","unlistenSources_","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","getViewportClampedResolution","getSmoothClampedResolution","cappedMaxRes","capped","minZoomLevel","cappedZoomLevel","zoomLevel","num","ATTRIBUTION","OSM","attributionsCollapsible","opaque","reprojectionErrorThreshold","Source","attributions_","adaptAttributions","attributionsCollapsible_","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","refresh","setAttributions","attributionLike","TileSource","opaque_","tilePixelRatio_","tileCache","tmpSize","key_","tileOptions","getTileCacheForProjection","getKeyZXY","containsKey","setKey","getTileGrid","getTileCoordForTileUrlFunction","withinExtentAndZ","highWaterMark","TileSourceEvent","TILELOADSTART","TILELOADEND","TILELOADERROR","TileImage","defaultTileLoadFunction","tileUrlFunction","urls","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","UrlTile","generateTileUrlFunction_","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","setTileLoadFunction","setTileUrlFunction","expandUrl","createFromTemplates","VectorSourceEvent","VectorSource","loader_","format_","url_","loader","strategy_","strategy","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getAll","getFeaturesAtCoordinate","getInExtent","concat","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","featureChangeKeys","removed","setLoader","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","XYZ","createXYZ","extentFromProjection","DEFAULT_RADIUS","c1","c2","lat1","lat2","deltaLatBy2","deltaLonBy2","getLengthInternal","getAreaInternal","bearing","lon1","dByR","lat","asin","number","precision","numberString","decimal","compareVersions","s1","s2","n1","n2","count_","entries_","oldest_","newest_","entry","value_","newer","older","getValues","peekLastKey","peek","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","elements","priorities","siftUp_","elementKey","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","maxEntries","rbush_","items_","items","forEach_","rbush","CircleStyle","getDisplacement","setRadius","radius_","Fill","color_","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorYUnits_","imgSize_","iconImage_","offset_","offsetOrigin_","offsetOrigin","origin_","size_","updateScaleFromWidthAndHeight","getSrc","setAnchor","iconImageSize","setWidth","setHeight","widthScale","heightScale","taintedTestContext","IconImage","imageState_","tainted_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","iconImage","IconImageCache","cache_","cacheSize_","maxCacheSize_","expire","maxCacheSize","shared","ImageStyle","scaleArray_","displacement_","setRotateWithView","RegularShape","hitDetectionCanvas_","radius1","radius2_","radius2","stroke_","renderOptions_","getPoints","getRadius2","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","r1","r2","miterRatio","bevelAdd","aa","innerMiterRatio","innerLength","createRenderOptions","maxRadius","createPath_","drawHitDetectionCanvas_","angle0","radiusC","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","Style","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","setRenderer","setHitDetectionRenderer","toFunction","defaultStyles","createEditingStyle","white","blue","Text","font_","textAlign_","justify_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","setOverflow","setFont","setMaxAngle","setOffsetY","setPlacement","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","flatStyle","prefix","iconSrc","iconImg","shapePoints","circleRadius","getCacheKeyForTileKey","hash","getFullTileRange","getForProjection","createForProjection","createForExtent","resolutionsFromExtent","xyzOptions","gridOptions","DEFAULT_MAX_ZOOM","half","tmpTileCoord","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","opt_direction","fullTileRanges","createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","templates","tileUrlFunctions","createFromTileUrlFunctions","nullTileUrlFunction","startCharCode","stopCharCode","stop","tmp_","reset","multiply","transform1","transform2","a1","b1","d1","e1","f1","a2","b2","d2","e2","f2","setFromArray","composeCssTransform","invert","det","determinant","transformStringDiv","transformString","uidCounter_","ol_uid","VERSION","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","enumerable","prop","Symbol","toStringTag","querySelectorAll","_loop_1","currentElementSection","selectElement","newBoundingBoxStringList","inputTarget"],"sourceRoot":""}